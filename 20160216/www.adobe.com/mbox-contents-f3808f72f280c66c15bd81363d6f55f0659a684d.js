
//----------------------------------------------------------------------
// Custom Utility functions
//----------------------------------------------------------------------
function targetPageParamsAll(isMbox) {
  //Cookie Reading Function
  function tnt_readCookie(name) {
    return (name = new RegExp('(?:^|;\\s*)' + ('' + name).replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&') + '=([^;]*)').exec(document.cookie)) && name[1];
  }

  //If the cookie exists then read it and place the value(s) into all mboxes that will fire on the page
  var aam_tnt_cval = tnt_readCookie("aam_tnt");
  if (aam_tnt_cval) {
    var aam_tnt_cval_array = new Array();
    aam_tnt_cval_array[0] = "aamseg=" + unescape(aam_tnt_cval);
    // var aam_tnt_cval_array = unescape(aam_tnt_cval).split(",");
    if (aam_tnt_cval_array) {
      if (isMbox) {
        var tapMboxBuilder = mboxFactoryDefault.getUrlBuilder();
        tapMboxBuilder.addParameters(aam_tnt_cval_array);
      }

      return aam_tnt_cval_array;
    }
  }

}

//----------------------------------------------------------------------
// Determine when to fire which library
//----------------------------------------------------------------------
(function () {
  var w = window,
    hostname = w.location.hostname,
    use58 = false,
    useAT = false;

  // When to use mbox version 58
  if (
    _satellite.getVar("isSite_cloudAcrobatLegacy")   
  ) {
    use58 = true;
  }

  // When to use mbox version AT.js (SPA Version)
/*  if (
    _satellite.getVar('isSite_AccountManagement')
  ) {
    useAT = true;
  }*/

  _satellite.use58 = use58;
  //_satellite.useAT = useAT;
}());
  
//----------------------------------------------------------------------
// Actual library code
//----------------------------------------------------------------------
if (_satellite.use58) {
  // version 58
  var mboxCopyright = "Copyright 1996-2015. Adobe Systems Incorporated. All rights reserved.";var TNT = TNT || {};TNT.a = (function() { return { nestedMboxes: [], b: { companyName: "Test&amp;Target", isProduction: true, adminUrl: "http://admin9.testandtarget.omniture.com/admin", clientCode: "adobe", serverHost: "adobe.tt.omtrdc.net", mboxTimeout: 15000, mboxLoadedTimeout: 100, mboxFactoryDisabledTimeout: 60 * 60, bodyPollingTimeout: 16, sessionExpirationTimeout: 31 * 60, experienceManagerDisabledTimeout: 30 * 60, experienceManagerTimeout: 5000, visitorApiTimeout: 500, visitorApiPageDisplayTimeout: 500, overrideMboxEdgeServer: false, overrideMboxEdgeServerTimeout: 31 * 60, tntIdLifetime: 3024000, crossDomain: "enabled", trafficDuration: 10368000, trafficLevelPercentage: 100, clientSessionIdSupport: true, clientTntIdSupport: true, passPageParameters: true, usePersistentCookies: true, crossDomainEnabled: true, crossDomainXOnly: false, imsOrgId: "9E1005A551ED61CA0A490D45@AdobeOrg", globalMboxName: "adobe-global-mbox", globalMboxLocationDomId: "", globalMboxAutoCreate: true, experienceManagerPluginUrl: "//cdn.tt.omtrdc.net/cdn/target.js", siteCatalystPluginName: "tt", mboxVersion: 58, mboxIsSupportedFunction: function() { return true;
   }, parametersFunction: function() { return ""; }, cookieDomainFunction: function() { return mboxCookiePageDomain(); } }, c: { d: "mboxPage", e: "mboxMCGVID", f: "mboxMCGLH", g: "mboxAAMB", h: "mboxMCAVID", i: "mboxMCSDID", j: "mboxCount", k: "mboxHost", l: "mboxFactoryId", m: "mboxPC", n: "screenHeight", o: "screenWidth", p: "browserWidth", q: "browserHeight", r: "browserTimeOffset", s: "colorDepth", t: "mboxXDomain", u: "mboxURL", v: "mboxReferrer", w: "mboxVersion", x: "mbox", y: "mboxId", z: "mboxDOMLoaded", A: "mboxTime", B: "scPluginVersion" }, C: { D: "mboxDisable", E: "mboxSession", F: "mboxEnv", G: "mboxDebug" }, H: { D: "disable", E: "session", m: "PC", I: "level", J: "check", G: "debug", K: "em-disabled", L: "mboxEdgeServer" }, M: { N: "default", O: "mbox", P: "mboxImported-", Q: 60000, R: "mboxDefault", S: "mboxMarker-", T: 250, B: 1 } }}());TNT.a.U = {};(function(V) { var W = {}.toString; function X(Y) { return Y === void(0); } function Z(Y) { return Y === null; } function _(Y) { if (X(Y) || Z(Y)) { return true; } return Y.length === 0; } function ab(Y) { return W.call(Y) === '[object Function]'; } function bb(Y) { return W.call(Y) === '[object Array]'; } function cb(Y) { return W.call(Y) === '[object String]'; } function db(Y) { return W.call(Y) === '[object Object]'; } function eb(fb, gb) { var hb = fb.length, ib = -1; while (++ib < hb) { gb(fb[ib]); } } V.X = X; V.Z = Z; V._ = _; V.ab = ab; V.bb = bb; V.cb = cb; V.db = db; V.eb = eb;}(TNT.a.U));mboxUrlBuilder = function(jb, kb) { this.jb = jb; this.kb = kb; this.lb = []; this.mb = function(u) { return u; }; this.nb = null;};mboxUrlBuilder.prototype = { constructor: mboxUrlBuilder, addNewParameter: function (ob, Y) { this.lb.push({name: ob, value: Y}); return this; }, addParameterIfAbsent: function (ob, Y) { if (!Y) { return; } for (var pb = 0; pb < this.lb.length; pb++) { var qb = this.lb[pb]; if (qb.name === ob) { return this; } } this.checkInvalidCharacters(ob); return this.addNewParameter(ob, Y); }, addParameter: function(ob, Y) { this.checkInvalidCharacters(ob); for (var pb = 0; pb < this.lb.length; pb++) { var qb = this.lb[pb]; if (qb.name === ob) { qb.value = Y; return this; } } return this.addNewParameter(ob, Y); }, addParameters: function(lb) { if (!lb) { return this; } for (var pb = 0; pb < lb.length; pb++) { var rb = lb[pb]; var sb = rb.indexOf('='); if (sb === -1 || sb === 0) { continue; } this.addParameter(rb.substring(0, sb), rb.substring(sb + 1, rb.length)); } return this; }, setServerType: function(tb) { this.ub = tb; }, setBasePath: function(nb) { this.nb = nb; }, setUrlProcessAction: function(vb) { this.mb = vb; }, buildUrl: function() { var wb = TNT.a.xb(this.jb), yb = this.nb ? this.nb : '/m2/' + this.kb + '/mbox/' + this.ub, zb = document.location.protocol == 'file:' ? 'http:' : document.location.protocol, u = zb + "//" + wb + yb, Ab = []; for (var pb = 0; pb < this.lb.length; pb++) { var qb = this.lb[pb]; Ab.push(encodeURIComponent(qb.name) + '=' + encodeURIComponent(qb.value)); } u += u.indexOf('?') != -1 ? '&' + Ab.join('&') : '?' + Ab.join('&'); return this.Bb(this.mb(u)); }, getParameters: function() { return this.lb; }, setParameters: function(lb) { this.lb = lb; }, clone: function() { var Cb = new mboxUrlBuilder(this.jb, this.kb); Cb.setServerType(this.ub); Cb.setBasePath(this.nb); Cb.setUrlProcessAction(this.mb); for (var pb = 0; pb < this.lb.length; pb++) { Cb.addParameter(this.lb[pb].name, this.lb[pb].value); } return Cb; }, Bb: function(Db) { return Db.replace(/\"/g, '&quot;').replace(/>/g, '&gt;'); }, checkInvalidCharacters: function (ob) { var Eb = new RegExp('(\'|")'); if (Eb.exec(ob)) { throw "Parameter '" + ob + "' contains invalid characters"; } }};mboxStandardFetcher = function() { };mboxStandardFetcher.prototype = { constructor: mboxStandardFetcher, getType: function() { return 'standard'; }, fetch: function(Fb) { Fb.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + Fb.buildUrl() + '"><' + '\/scr' + 'ipt>'); }, cancel: function() { }};mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype = { constructor: mboxAjaxFetcher, getType: function() { return 'ajax'; }, fetch: function(Fb) { Fb.setServerType(this.getType()); var Gb = document.getElementsByTagName('head')[0], Hb = document.createElement('script'); Hb.src = Fb.buildUrl(); Gb.appendChild(Hb); }, cancel: function() {}};(function(V){ function Ib() {} Ib.prototype = { constructor: Ib, getType: function() { return 'ajax'; }, fetch: function(Fb) { Fb.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + Fb.buildUrl() +'"><' + '\/scr' + 'ipt>'); }, cancel: function() { } }; V.Ib = Ib;}(TNT.a));mboxMap = function() { this.Jb = {}; this.Kb = [];};mboxMap.prototype = { constructor: mboxMap, put: function(Lb, Y) { if (!this.Jb[Lb]) { this.Kb[this.Kb.length] = Lb; } this.Jb[Lb] = Y; }, get: function(Lb) { return this.Jb[Lb]; }, remove: function(Lb) { var Mb = []; this.Jb[Lb] = undefined; for (var i = 0; i < this.Kb.length; i++) { if (this.Kb[i] !== Lb) { Mb.push(this.Kb[i]); } } this.Kb = Mb; }, each: function(vb) { for (var pb = 0; pb < this.Kb.length; pb++ ) { var Lb = this.Kb[pb]; var Y = this.Jb[Lb]; if (Y) { var Nb = vb(Lb, Y); if (Nb === false) { break; } } } }, isEmpty: function() { return this.Kb.length === 0; }};mboxList = function() { this.Ob = [];};mboxList.prototype = { constructor: mboxList, add: function(Pb) { if (!Pb) { return; } this.Ob.push(Pb); }, get: function(x) { var Nb = new mboxList(); for (var pb = 0; pb < this.Ob.length; pb++) { var Pb = this.Ob[pb]; if (Pb.getName() === x) { Nb.add(Pb); } } return Nb; }, getById: function(Qb) { return this.Ob[Qb]; }, length: function() { return this.Ob.length; }, each: function(vb) { var U = TNT.a.U; if (!U.ab(vb)) { throw 'Action must be a function, was: ' + typeof(vb); } for (var pb = 0; pb < this.Ob.length; pb++) { vb(this.Ob[pb]); } }};mboxSignaler = function(Rb) { this.Rb = Rb;};mboxSignaler.prototype = { constructor: mboxSignaler, signal: function(Sb, x ) { if (!this.Rb.isEnabled()) { return; } var Tb = mboxSignaler.Ub(), Vb = this.Wb(this.Rb.Xb(x)); Tb.appendChild(Vb); var Yb = [].slice.call(arguments, 1), Pb = this.Rb.create(x, Yb, Vb), Fb = Pb.getUrlBuilder(); Fb.addParameter(TNT.a.c.d, mboxGenerateId()); Pb.load(); }, Wb: function(Zb) { var Nb = document.createElement('div'); Nb.id = Zb; Nb.style.visibility = 'hidden'; Nb.style.display = 'none'; return Nb; }};mboxSignaler.Ub = function() { return document.body;};mboxLocatorDefault = function(_b) { this._b = _b; document.write('<div id="' + this._b + '" style="visibility:hidden;display:none">&nbsp;<\/div>');};mboxLocatorDefault.prototype = { constructor: mboxLocatorDefault, locate: function() { var ac = 1, bc = document.getElementById(this._b); while (bc) { if (bc.nodeType === ac && bc.className === 'mboxDefault') { return bc; } bc = bc.previousSibling; } return null; }, force: function() { var cc = document.getElementById(this._b), dc = document.createElement('div'); dc.className = 'mboxDefault'; if (cc) { cc.parentNode.insertBefore(dc, cc); } return dc; }};mboxLocatorNode = function(bc) { this.bc = bc;};mboxLocatorNode.prototype = { constructor: mboxLocatorNode, locate: function() { return typeof(this.bc) === 'string' ? document.getElementById(this.bc) : this.bc; }, force: function() { return null; }};mboxOfferContent = function() { this.ec = function() {};};mboxOfferContent.prototype = { constructor: mboxOfferContent, show: function (Pb) { var Nb = Pb.showContent(document.getElementById(Pb.getImportName())); if (Nb === 1) { this.ec(); } return Nb; }, setOnLoad: function(ec) { this.ec = ec; }};mboxOfferAjax = function(fc) { this.fc = fc; this.ec = function() {};};mboxOfferAjax.prototype = { constructor: mboxOfferAjax, setOnLoad: function(ec) { this.ec = ec; }, show: function(Pb) { var gc = document.createElement('div'), Nb; gc.id = Pb.getImportName(); gc.innerHTML = this.fc; Nb = Pb.showContent(gc); if (Nb === 1) { this.ec(); } return Nb; }};mboxOfferDefault = function() { this.ec = function() {};};mboxOfferDefault.prototype = { constructor: mboxOfferDefault, show: function(Pb) { var Nb = Pb.hide(); if (Nb === 1) { this.ec(); } return Nb; }, setOnLoad: function(ec) { this.ec = ec; }};mboxCookieManager = function(ob, hc) { this.ob = ob; this.ic = TNT.a.H.J; this.jc = TNT.a.b.crossDomainXOnly; this.kc = TNT.a.H.D; this.lc = TNT.a.b.usePersistentCookies; this.mc = new mboxMap(); this.hc = hc === '' || hc.indexOf('.') === -1 ? '' : '; domain=' + hc; this.loadCookies();};mboxCookieManager.prototype = { constructor: mboxCookieManager, isEnabled: function() { this.setCookie(this.ic, 'true', 60); this.loadCookies(); return this.getCookie(this.ic) == 'true'; }, setCookie: function(ob, Y, nc) { if (typeof ob == 'undefined' || typeof Y == 'undefined' || typeof nc == 'undefined') { return; } var oc = Math.ceil(nc + new Date().getTime() / 1000), pc = mboxCookieManager.qc(ob, encodeURIComponent(Y), oc); this.mc.put(ob, pc); this.saveCookies(); }, getCookie: function(ob) { var pc = this.mc.get(ob); return pc ? decodeURIComponent(pc.value) : null; }, deleteCookie: function(ob) { this.mc.remove(ob); this.saveCookies(); }, getCookieNames: function(rc) { var sc = []; this.mc.each(function(ob, pc) { if (ob.indexOf(rc) === 0) { sc[sc.length] = ob; } }); return sc; }, saveCookies: function() { var tc = this, uc = [], vc = 0; this.mc.each(function(ob, pc) { if(!tc.jc || ob === tc.kc) { uc[uc.length] = mboxCookieManager.wc(pc); if (vc < pc.expireOn) { vc = pc.expireOn; } } }); var xc = new Date(vc * 1000); var Ab = []; Ab.push(this.ob, '=', uc.join('|')); if (tc.lc) { Ab.push('; expires=', xc.toGMTString()); } Ab.push('; path=/', this.hc); document.cookie = Ab.join(""); }, loadCookies: function() { var yc = mboxCookieManager.zc(this.ob), Ac = mboxCookieManager.Bc(yc), Cc = Math.ceil(new Date().getTime() / 1000); this.mc = new mboxMap(); for (var pb = 0; pb < Ac.length; pb++) { var pc = mboxCookieManager.Dc(Ac[pb]); if (Cc > pc.expireOn) { continue; } this.mc.put(pc.name, pc); } }};mboxCookieManager.wc = function(pc) { return pc.name + '#' + pc.value + '#' + pc.expireOn;};mboxCookieManager.Dc = function(W) { var Ab = W.split('#'); return mboxCookieManager.qc(Ab[0], Ab[1], Ab[2]);};mboxCookieManager.qc = function(ob, Y, oc) { return {name: ob, value: Y, expireOn: oc};};mboxCookieManager.zc = function(ob) { var result = new RegExp('(^|; )' + encodeURIComponent(ob) + '=([^;]*)').exec(document.cookie); return result ? result[2] : null;};mboxCookieManager.Bc = function(W) { if (!W) { return []; } return W.split('|');};mboxSession = function(Ec, Fc, Gc, Hc, Ic) { var Jc = window.mboxForceSessionId; this.Gc = Gc; this.Hc = Hc; this.Ic = Ic; this.Zb = typeof(Jc) !== 'undefined' ? Jc : mboxGetPageParameter(Fc, true); this.Zb = this.Zb || Ic.getCookie(Gc) || Ec; this.Ic.setCookie(Gc, this.Zb, Hc);};mboxSession.prototype = { constructor: mboxSession, getId: function() { return this.Zb; }, forceId: function(Kc) { this.Zb = Kc; this.Ic.setCookie(this.Gc, this.Zb, this.Hc); }};mboxPC = function(Gc, Hc, Ic) { var Lc = window.mboxForcePCId; this.Gc = Gc; this.Hc = Hc; this.Ic = Ic; this.Zb = typeof(Lc) != 'undefined' ? Lc: Ic.getCookie(Gc); if (this.Zb) { Ic.setCookie(Gc, this.Zb, Hc); }};mboxPC.prototype = { constructor: mboxPC, getId: function() { return this.Zb; }, forceId: function(Kc) { if (this.Zb === Kc) { return false; } this.Zb = Kc; this.Ic.setCookie(this.Gc, this.Zb, this.Hc); return true; }};(function(V, U, H, b) { var Mc = new RegExp(".*\\.(\\d+)_\\d+"); function xb(Oc) { var Pc = Mc.exec(Oc); if (Pc && Pc.length === 2) { return "mboxedge" + Pc[1] + ".tt.omtrdc.net"; } return ''; } function Qc(Ic, Rc) { var wb = xb(Rc); if (!U._(wb)) { Ic.setCookie(H.L, wb, b.overrideMboxEdgeServerTimeout); } } function Sc(Tc, Ic) { this.Tc= Tc; this.Ic = Ic; Qc(Ic, Tc.getId()); } Sc.prototype = { constructor: Sc, getId: function() { return this.Tc.getId(); }, forceId: function(Kc) { if (!this.Tc.forceId(Kc)) { return false; } Qc(this.Ic, Kc); return true; } }; V.Sc = Sc;}(TNT.a, TNT.a.U, TNT.a.H, TNT.a.b));mboxGetPageParameter = function(ob, Uc) { Uc = Uc || false; var Vc; if (Uc) { Vc = new RegExp("\\?[^#]*" + ob + "=([^\&;#]*)", "i"); } else { Vc = new RegExp("\\?[^#]*" + ob + "=([^\&;#]*)"); } var Nb = null; var Wc = Vc.exec(document.location); if (Wc && Wc.length >= 2) { Nb = Wc[1]; } return Nb;};mboxCookiePageDomain = function() { var hc = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var Xc = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!Xc.exec(hc)) { var Yc = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(hc); if (Yc) { hc = Yc[0]; if (hc.indexOf("www.") === 0) { hc=hc.substr(4); } } } return hc ? hc: "";};mboxShiftArray = function(Zc) { var Nb = []; for (var pb = 1; pb < Zc.length; pb++) { Nb[Nb.length] = Zc[pb]; } return Nb;};mboxGenerateId = function() { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999);};mboxScreenHeight = function() { return screen.height;};mboxScreenWidth = function() { return screen.width;};mboxBrowserWidth = function() { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth;};mboxBrowserHeight = function() { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight;};mboxBrowserTimeOffset = function() { return -new Date().getTimezoneOffset();};mboxScreenColorDepth = function() { return screen.pixelDepth;};TNT.a._c = (function() { var ad = [], bd = 0, cd = []; function dd(Qb, Yb) { bd += 1; ad[Qb] = Yb; ed(); } function ed() { var hb = cd.length, ib = -1, fd; if (bd !== ad.length || !cd.length) { return; } while (++ib < hb) { fd = cd[ib]; fd.fn.apply(fd.ctx, ad); } } return { gd: function () { var Qb = ad.length; ad[ad.length] = null; return function () { dd(Qb, [].slice.call(arguments)); }; }, hd: function (cb, context) { cd.push({fn: cb, ctx: context}); ed(); } };}());mbox = function(ob, Zb, Fb, id, jd, Rb) { this.kd = null; this.ld = 0; this.md = id; this.jd = jd; this.nd = null; this.od = new mboxOfferContent(); this.dc = null; this.Fb = Fb; this.message = ''; this.pd = {}; this.qd = 0; this.rd = 5; this.Zb = Zb; this.ob = ob; this.sd(); Fb.addParameter(TNT.a.c.x, ob); Fb.addParameter(TNT.a.c.y, Zb); this.td = function() {}; this.ec = function() {}; this.ud = null; this.vd = document.documentMode >= 10 && !Rb.isDomLoaded(); if (this.vd) { this.wd = TNT.a.nestedMboxes; this.wd.push(this.ob); }};mbox.prototype.getId = function() { return this.Zb;};mbox.prototype.sd = function() { var maxLength = TNT.a.M.T; if (this.ob.length > maxLength) { throw "Mbox Name " + this.ob + " exceeds max length of " + maxLength + " characters."; } else if (this.ob.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.ob + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.ob;};mbox.prototype.getParameters = function() { var lb = this.Fb.getParameters(); var Nb = []; for (var pb = 0; pb < lb.length; pb++) { if (lb[pb].name.indexOf('mbox') !== 0) { Nb[Nb.length] = lb[pb].name + '=' + lb[pb].value; } } return Nb;};mbox.prototype.setOnLoad = function(vb) { this.ec = vb; return this;};mbox.prototype.setMessage = function(xd) { this.message = xd; return this;};mbox.prototype.setOnError = function(td) { this.td = td; return this;};mbox.prototype.setFetcher = function(yd) { if (this.nd) { this.nd.cancel(); } this.nd = yd; return this;};mbox.prototype.getFetcher = function() { return this.nd;};mbox.prototype.load = function(lb) { var Fb = this.Fb; if (this.nd === null) { return this; } this.setEventTime("load.start"); this.cancelTimeout(); this.ld = 0; if (lb && lb.length > 0) { Fb = this.Fb.clone().addParameters(lb); } this.nd.fetch(Fb); var tc = this; this.zd = setTimeout(function() { tc.td('browser timeout', tc.nd.getType()); }, TNT.a.b.mboxTimeout); this.setEventTime("load.end"); return this;};mbox.prototype.loaded = function() { this.cancelTimeout(); if (!this.activate() && this.qd < this.rd) { var tc = this; setTimeout(function() { tc.loaded(); }, TNT.a.b.mboxLoadedTimeout); }};mbox.prototype.activate = function() { if (this.ld) { return this.ld; } this.setEventTime('activate' + (++this.qd) + '.start'); if (this.vd && this.wd[this.wd.length - 1] !== this.ob) { return this.ld; } if (this.show()) { this.cancelTimeout(); this.ld = 1; } this.setEventTime('activate' + this.qd + '.end'); if (this.vd) { this.wd.pop(); } return this.ld;};mbox.prototype.isActivated = function() { return this.ld;};mbox.prototype.setOffer = function(od) { var Ad = od && od.show && od.setOnLoad; if (!Ad) { throw 'Invalid offer'; } var Bd = TNT.a.b.globalMboxName === this.ob; Bd = Bd && od instanceof mboxOfferDefault; Bd = Bd && this.nd !== null; Bd = Bd && this.nd.getType() === 'ajax'; if (!Bd) { this.od = od; return this; } var Cd = this.od.ec; this.od = od; this.od.setOnLoad(Cd); return this;};mbox.prototype.getOffer = function() { return this.od;};mbox.prototype.show = function() { this.setEventTime('show.start'); var Nb = this.od.show(this); this.setEventTime(Nb == 1 ? "show.end.ok" : "show.end"); return Nb;};mbox.prototype.showContent = function(fc) { if (!mbox.Dd(fc)) { return 0; } this.dc = mbox.Ed(this, this.dc); if (this.dc === null) { return 0; } if (!mbox.Fd(document.body, this.dc)) { return 0; } if (this.dc === fc) { this.Gd(this.dc); this.ec(); return 1; } this.Hd(this.dc); this.Hd(fc); mbox.Id(this, fc); this.Gd(this.dc); this.ec(); return 1;};mbox.Dd = function(fc) { return fc !== undefined && fc !== null;};mbox.Fd = function(Jd, Kd) { var DOCUMENT_POSITION_CONTAINED_BY = 16; var Ld = Jd.contains !== undefined; if (Ld) { return Jd !== Kd && Jd.contains(Kd); } else { return Boolean(Jd.compareDocumentPosition(Kd) & DOCUMENT_POSITION_CONTAINED_BY); }};mbox.Ed = function(Pb, dc) { if (dc !== undefined && dc !== null && mbox.Fd(document.body, dc)) { return dc; } return Pb.getDefaultDiv();};mbox.Id = function(Pb, Md) { Pb.dc.parentNode.replaceChild(Md, Pb.dc); Pb.dc = Md;};mbox.prototype.hide = function() { this.setEventTime('hide.start'); var Nb = this.showContent(this.getDefaultDiv()); this.setEventTime(Nb == 1 ? 'hide.end.ok' : 'hide.end.fail'); return Nb;};mbox.prototype.finalize = function() { this.setEventTime('finalize.start'); this.cancelTimeout(); if (!this.getDefaultDiv()) { if (this.md.force()) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok');};mbox.prototype.cancelTimeout = function() { if (this.zd) { clearTimeout(this.zd); } if (this.nd) { this.nd.cancel(); }};mbox.prototype.getDiv = function() { return this.dc;};mbox.prototype.getDefaultDiv = function() { if (this.ud === null) { this.ud = this.md.locate(); } return this.ud;};mbox.prototype.setEventTime = function(Nd) { this.pd[Nd] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.pd;};mbox.prototype.getImportName = function() { return this.jd;};mbox.prototype.getURL = function() { return this.Fb.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.Fb;};mbox.prototype.Od = function(dc) { return dc.style.display != 'none';};mbox.prototype.Gd = function(dc) { this.Pd(dc, true);};mbox.prototype.Hd = function(dc) { this.Pd(dc, false);};mbox.prototype.Pd = function(dc, Qd) { dc.style.visibility = Qd ? "visible" : "hidden"; dc.style.display = Qd ? "block" : "none";};mbox.prototype.Rd = function() { this.vd = false;};mbox.prototype.relocateDefaultDiv = function() { this.ud = this.md.locate();};mboxFactory = function(wb, kb, Sd) { var Td = TNT.a; var b = Td.b; var H = Td.H; var C = Td.C; var M = Td.M; var Ud = b.mboxVersion; this.Vd = false; this.Sd = Sd; this.Ob = new mboxList(); mboxFactories.put(Sd, this); this.Wd = b.mboxIsSupportedFunction() && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined'; this.Xd = this.Wd && mboxGetPageParameter(C.D, true) === null; var Yd = Sd == M.N; var Gc = M.O + (Yd ? '' : ('-' + Sd)); this.Ic = new mboxCookieManager(Gc, b.cookieDomainFunction()); if (!b.crossDomainXOnly) { this.Xd = this.Xd && this.Ic.isEnabled(); } this.Xd = this.Xd && TNT.a.U.Z(this.Ic.getCookie(H.D)) && TNT.a.U.Z(this.Ic.getCookie(H.K)); if (this.isAdmin()) { this.enable(); } this.Zd(); this._d = mboxGenerateId(); this.ae = mboxScreenHeight(); this.be = mboxScreenWidth(); this.ce = mboxBrowserWidth(); this.de = mboxBrowserHeight(); this.ee = mboxScreenColorDepth(); this.fe = mboxBrowserTimeOffset(); this.ge = new mboxSession(this._d, C.E, H.E, b.sessionExpirationTimeout, this.Ic); var Tc = new mboxPC(H.m, b.tntIdLifetime, this.Ic); this.he = b.overrideMboxEdgeServer ? new Td.Sc(Tc, this.Ic) : Tc; this.Fb = new mboxUrlBuilder(wb, kb); this.ie(this.Fb, Yd, Ud); this.je = new Date().getTime(); this.ke = this.je; var tc = this; this.addOnLoad(function() { tc.ke = new Date().getTime(); }); if (this.Wd) { this.addOnLoad(function() { tc.Vd = true; tc.getMboxes().each(function(Pb) { Pb.Rd(); Pb.setFetcher(new mboxAjaxFetcher()); Pb.finalize(); }); TNT.a.nestedMboxes = []; }); if (this.Xd) { this.limitTraffic(b.trafficLevelPercentage, b.trafficDuration); this.le(); this.me = new mboxSignaler(this); } else { if (!b.isProduction) { if (this.isAdmin()) { if (!this.isEnabled()) { alert("mbox disabled, probably due to timeout\n" + "Reset your cookies to re-enable\n(this message will only appear in administrative mode)"); } else { alert("It looks like your browser will not allow " + b.companyName + " to set its administrative cookie. To allow setting the" + " cookie please lower the privacy settings of your browser.\n" + "(this message will only appear in administrative mode)"); } } } } }};mboxFactory.prototype.forcePCId = function(Kc) { if (!TNT.a.b.clientTntIdSupport) { return; } if (this.he.forceId(Kc)) { this.ge.forceId(mboxGenerateId()); }};mboxFactory.prototype.forceSessionId = function(Kc) { if (!TNT.a.b.clientSessionIdSupport) { return; } this.ge.forceId(Kc);};mboxFactory.prototype.isEnabled = function() { return this.Xd;};mboxFactory.prototype.getDisableReason = function() { return this.Ic.getCookie(TNT.a.H.D);};mboxFactory.prototype.isSupported = function() { return this.Wd;};mboxFactory.prototype.disable = function(nc, ne) { if (typeof nc == 'undefined') { nc = 60 * 60; } if (typeof ne == 'undefined') { ne = 'unspecified'; } if (!this.isAdmin()) { this.Xd = false; this.Ic.setCookie(TNT.a.H.D, ne, nc); }};mboxFactory.prototype.enable = function() { this.Xd = true; this.Ic.deleteCookie(TNT.a.H.D);};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf(TNT.a.C.F) != -1;};mboxFactory.prototype.limitTraffic = function(oe, nc) { if (TNT.a.b.trafficLevelPercentage != 100) { if (oe == 100) { return; } var pe = true; if (parseInt(this.Ic.getCookie(TNT.a.H.I)) != oe) { pe = (Math.random() * 100) <= oe; } this.Ic.setCookie(TNT.a.H.I, oe, nc); if (!pe) { this.disable(60 * 60, 'limited by traffic'); } }};mboxFactory.prototype.addOnLoad = function(qe) { if (this.isDomLoaded()) { qe(); } else { var re = false; var se = function() { if (re) { return; } re = true; qe(); }; this.te.push(se); if (this.isDomLoaded() && !re) { se(); } }};mboxFactory.prototype.getEllapsedTime = function() { return this.ke - this.je;};mboxFactory.prototype.getEllapsedTimeUntil = function(A) { return A - this.je;};mboxFactory.prototype.getMboxes = function() { return this.Ob;};mboxFactory.prototype.get = function(x, y) { return this.Ob.get(x).getById(y || 0);};mboxFactory.prototype.update = function(x, lb) { var Td = TNT.a, c = Td.c; if (!this.isEnabled()) { return; } var tc = this; if (!this.isDomLoaded()) { this.addOnLoad(function() { tc.update(x, lb); }); return; } if (this.Ob.get(x).length() === 0) { throw "Mbox " + x + " is not defined"; } this.Ob.get(x).each(function(Pb) { var Fb = Pb.getUrlBuilder(); Fb.addParameter(c.d, mboxGenerateId()); tc.ue(Fb, x); tc.ve(Fb); tc.we(Fb, x); Pb.load(lb); });};mboxFactory.prototype.setVisitorIdParameters = function(Fb, x) { this.ue(Fb, x);};mboxFactory.prototype.create = function(x, lb, xe) { var Pb = this.ye(x, lb, xe); if (Pb) { this.ue(Pb.getUrlBuilder(), x); } return Pb;};mboxFactory.prototype.ze = function(x, lb, xe) { return this.ye(x, lb, xe);};mboxFactory.prototype.ye = function(x, lb, xe) { if (!this.isSupported()) { return null; } var Ae = new Date(); var A = Ae.getTime() - (Ae.getTimezoneOffset() * TNT.a.M.Q); var Fb = this.Fb.clone(); Fb.addParameter(TNT.a.c.j, this.Ob.length() + 1); Fb.addParameter(TNT.a.c.A, A); Fb.addParameters(lb); this.ve(Fb); this.we(Fb, x); var y, md, Pb; if (xe) { md = new mboxLocatorNode(xe); } else { if (this.Vd) { throw 'The page has already been loaded, can\'t write marker'; } md = new mboxLocatorDefault(this.Xb(x)); } try { y = this.Ob.get(x).length(); Pb = new mbox(x, y, Fb, md, this.Be(x), this); if (this.Xd) { Pb.setFetcher(this.Vd ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } var tc = this; Pb.setOnError(function(xd, tb) { Pb.setMessage(xd); Pb.activate(); if (!Pb.isActivated()) { tc.disable(TNT.a.b.mboxFactoryDisabledTimeout, xd); window.location.reload(false); } }); this.Ob.add(Pb); } catch (Ce) { this.disable(); throw 'Failed creating mbox "' + x + '", the error was: ' + Ce; } return Pb;};mboxFactory.prototype.ve = function(Fb) { var m = this.he.getId(); if (m) { Fb.addParameter(TNT.a.c.m, m); }};mboxFactory.prototype.ue = function(Fb, x) { var Td = TNT.a, De = Td.b.imsOrgId, kb = Td.b.clientCode, Ee = Td.c.i, i = Td.Fe(De, kb, x); if (i) { Fb.addParameter(Ee, i); }};mboxFactory.prototype.we = function(Fb, x) { var Ge = !TNT.isAutoCreateGlobalMbox() && TNT.getGlobalMboxName() === x; if (Ge) { Fb.addParameters(TNT.getTargetPageParameters()); }};mboxFactory.prototype.getCookieManager = function() { return this.Ic;};mboxFactory.prototype.getPageId = function() { return this._d;};mboxFactory.prototype.getPCId = function() { return this.he;};mboxFactory.prototype.getSessionId = function() { return this.ge;};mboxFactory.prototype.getSignaler = function() { return this.me;};mboxFactory.prototype.getUrlBuilder = function() { return this.Fb;};mboxFactory.prototype.He = function(x) { return this.Sd + '-' + x + '-' + this.Ob.get(x).length();};mboxFactory.prototype.Xb = function(x) { return TNT.a.M.S + this.He(x);};mboxFactory.prototype.Be = function(x) { return TNT.a.M.P + this.He(x);};mboxFactory.prototype.ie = function(Fb, Yd, Ud) { Fb.addParameter(TNT.a.c.k, document.location.hostname); Fb.addParameter(TNT.a.c.d, this._d); Fb.addParameter(TNT.a.c.n, this.ae); Fb.addParameter(TNT.a.c.o, this.be); Fb.addParameter(TNT.a.c.p, this.ce); Fb.addParameter(TNT.a.c.q, this.de); Fb.addParameter(TNT.a.c.r, this.fe); Fb.addParameter(TNT.a.c.s, this.ee); Fb.addParameter(TNT.a.C.E, this.ge.getId()); if (!Yd) { Fb.addParameter(TNT.a.c.l, this.Sd); } this.ve(Fb); if (TNT.a.b.crossDomainEnabled) { Fb.addParameter(TNT.a.c.t, TNT.a.b.crossDomain); } var c = TNT.getClientMboxExtraParameters(); if (c) { Fb.addParameters(c.split('&')); } Fb.setUrlProcessAction(function(u) { if (TNT.a.b.passPageParameters) { u += '&'; u += TNT.a.c.u; u += '=' + encodeURIComponent(document.location); var v = encodeURIComponent(document.referrer); if (u.length + v.length < 2000) { u += '&'; u += TNT.a.c.v; u += '=' + v; } } u += '&'; u += TNT.a.c.w; u += '=' + Ud; return u; });};mboxFactory.prototype.le = function() { document.write('<style>.' + TNT.a.M.R + ' { visibility:hidden; }</style>');};mboxFactory.prototype.isDomLoaded = function() { return this.Vd;};mboxFactory.prototype.Zd = function() { if (this.te) { return; } this.te = []; var tc = this; (function() { var Ie = document.addEventListener ? "DOMContentLoaded" : "onreadystatechange"; var Je = false; var Ke = function() { if (Je) { return; } Je = true; for (var i = 0; i < tc.te.length; ++i) { tc.te[i](); } }; if (document.addEventListener) { document.addEventListener(Ie, function() { document.removeEventListener(Ie, arguments.callee, false); Ke(); }, false); window.addEventListener("load", function(){ document.removeEventListener("load", arguments.callee, false); Ke(); }, false); } else if (document.attachEvent) { if (self !== self.top) { document.attachEvent(Ie, function() { if (document.readyState === 'complete') { document.detachEvent(Ie, arguments.callee); Ke(); } }); } else { var Le = function() { try { document.documentElement.doScroll('left'); Ke(); } catch (Me) { setTimeout(Le, 13); } }; Le(); } } if (document.readyState === "complete") { Ke(); } })();};mboxScPluginFetcher = function (kb, Ne) { this.kb = kb; this.Ne = Ne;};mboxScPluginFetcher.prototype = { constructor: mboxScPluginFetcher, getType: function () { return 'ajax'; }, fetch: function (Fb) { Fb.setServerType(this.getType()); var Gb = document.getElementsByTagName('head')[0], Hb = document.createElement('script'); Hb.src = this.Oe(Fb); Gb.appendChild(Hb); }, cancel: function () {}, Oe: function (Fb) { Fb.setBasePath('/m2/' + this.kb + '/sc/standard'); this.Pe(Fb); var Qe = TNT.a.c.B; var Re =TNT.a.M.B; Fb.addParameter(Qe, Re); return Fb.buildUrl(); }, Pe: function (Fb) { var Se = [ "dynamicVariablePrefix", "visitorID", "vmk", "ppu", "charSet", "visitorNamespace", "cookieDomainPeriods", "cookieLifetime", "pageName", "currencyCode", "variableProvider", "channel", "server", "pageType", "transactionID", "purchaseID", "campaign", "state", "zip", "events", "products", "linkName", "linkType", "resolution", "colorDepth", "javascriptVersion", "javaEnabled", "cookiesEnabled", "browserWidth", "browserHeight", "connectionType", "homepage", "pe", "pev1", "pev2", "pev3", "visitorSampling", "visitorSamplingGroup", "dynamicAccountSelection", "dynamicAccountList", "dynamicAccountMatch", "trackDownloadLinks", "trackExternalLinks", "trackInlineStats", "linkLeaveQueryString", "linkDownloadFileTypes", "linkExternalFilters", "linkInternalFilters", "linkTrackVars", "linkTrackEvents", "linkNames", "lnk", "eo" ]; for (var pb = 0; pb < Se.length; pb++) { this.Te(Se[pb], Fb); } for (pb = 1; pb <= 75; pb++) { this.Te('prop' + pb, Fb); this.Te('eVar' + pb, Fb); this.Te('hier' + pb, Fb); } }, Te: function (ob, Fb) { var U = TNT.a.U, Y = this.Ne[ob]; if (U._(Y) || U.db(Y)) { return; } Fb.addParameter(ob, Y); }};(function(V){ function Ue(Rb, Ne) { if (!Ne) { return null; } var Ve = TNT.a.b.siteCatalystPluginName, kb = TNT.a.b.clientCode, U = TNT.a.U; Ne["m_" + Ve] = function (Ne) { var We = '_t', Ye = 'm_i', Ze = Ne[Ye](Ve); Ze.Xd = true; Ze.kb = kb; Ze[We] = function () { if (!this.isEnabled()) { return; } var Pb = this.ye(), yd = new mboxScPluginFetcher(this.kb, this.s); if (Pb) { Pb.setFetcher(yd); Pb.load(); } }; Ze.isEnabled = function () { return this.Xd && Rb.isEnabled(); }; Ze.ye = function () { var x = this._e(), dc = document.createElement('div'); if (!U.X(document.body)) { document.body.appendChild(dc); } return Rb.create(x, [], dc); }; Ze._e = function () { var af = this.s.events && this.s.events.indexOf('purchase') != -1; return 'SiteCatalyst: ' + (af ? 'purchase' : 'event'); }; }; return Ne.loadModule(Ve); } V.Ue = Ue;}(TNT.a));(function(V) { function bf(cf, Gc, nc, Ic) { if (cf.targetJSLoaded) { return; } Ic.setCookie(Gc, true, nc); window.location.reload(); } function df(b, H, Ic) { var ef = '_AT', gf = 50, Gc = H.K, nc = b.experienceManagerDisabledTimeout, kd = b.experienceManagerTimeout, u = b.experienceManagerPluginUrl, hf = function(jf) {}, kf = function(jf) { setTimeout(function() { window[ef].applyWhenReady(jf); }, gf); }; if (ef in window) { return; } window[ef] = {}; if (Ic.getCookie(Gc) !== 'true') { document.write('<scr' + 'ipt src="' + u + '"><\/sc' + 'ript>'); window[ef].applyWhenReady = kf; setTimeout(function() { bf(window[ef], Gc, nc, Ic); }, kd); } else { window[ef].applyWhenReady = hf; } } V.df = df;}(TNT.a));(function(V, U, c, _c) { var lf = new RegExp("\\|MCMID\\|"), mf = false, nf = [], of = [], pf = []; function qf(rf) { var sf, tf = function(Lb) { return 'vst.' + Lb; }; if (!U.ab(rf.getCustomerIDs)) { return []; } sf = rf.getCustomerIDs(); if (!U.db(sf)) { return []; } return V.uf(sf, [], tf); } function vf(rf, wf, Lb) { var xf; if (!U.ab(rf[wf])) { return; } xf = _c.gd(); rf[wf](function(Y) { xf({key:Lb, value: Y}); }, true); } function yf(rf, wf, Lb) { var Y; if (!U.ab(rf[wf])) { return; } Y = rf[wf](); if (!U._(Y)) { nf.push({key: Lb, value: Y}); } } function zf(rf, Af) { Af(rf, 'getMarketingCloudVisitorID', c.e); Af(rf, 'getAudienceManagerBlob', c.g); Af(rf, 'getAnalyticsVisitorID', c.h); Af(rf, 'getAudienceManagerLocationHint', c.f); } function Bf(rf) { zf(rf, vf); } function Cf(rf) { zf(rf, yf); } function Df(Yb) { U.eb(Yb, function(fb) { nf.push(fb[0]); }); } function Ef(Ff) { return !U._(Ff.value); } function Gf(Ff, Fb) { if (!Ef(Ff)) { return; } Fb.addParameter(Ff.key, Ff.value); } function Hf(Fb) { U.eb(nf, function(Ff) { Gf(Ff, Fb); }); } function If(Rb, Ff) { var Pb = Ff.mbox; if (!Pb) { return; } switch (Ff.type) { case 'created': Pb.setFetcher(new mboxAjaxFetcher()); Pb.load(); break; case 'defined': Rb.update(Pb.getName(), Ff.params); break; } } function Jf(Rb, Kf) { _c.hd(function() { mf = false; Df([].slice.call(arguments)); Hf(Rb.getUrlBuilder()); U.eb(of, function(Ff) { Hf(Ff.mbox.getUrlBuilder()); If(Rb, Ff); }); setTimeout(Lf, Kf); }); } function Mf(De) { var rf; if (U._(De) || U.X(window.Visitor) || !U.ab(window.Visitor.getInstance)) { return null; } rf = window.Visitor.getInstance(De); if (U.X(rf) || U.Z(rf) || !rf.isAllowed()) { return null; } return rf; } function Nf(rf) { var Of = rf.cookieRead(rf.cookieName); if (U._(Of)) { return true; } return !lf.test(Of); } function Pf(Rb, b) { var De = b.imsOrgId, Qf = b.visitorApiTimeout, Kf = b.visitorApiPageDisplayTimeout, Fb = Rb.getUrlBuilder(), rf; if (!Rb.isEnabled()) { return; } rf = Mf(De); if (U.Z(rf) || U.X(rf.cookieName) || !U.ab(rf.cookieRead)) { return; } Fb.addParameters(qf(rf)); if (Nf(rf)) { mf = true; if (!U.X(rf.loadTimeout)) { rf.loadTimeout = Qf; } Rf(); Sf(); Bf(rf); Jf(Rb, Kf); } else { mf = false; Cf(rf); Hf(Fb); } } function Tf() { return mf; } function Uf(Ff) { switch (Ff.type) { case 'created': of.push(Ff); break; case 'defined': pf.push(Ff); break; } } function Vf(x) { var hb = pf.length, ib = -1; while(++ib < hb) { if (pf[ib].mbox.getName() === x) { return true; } } return false; } function Wf(Rb, x, c) { var Xf = nf.length > 0, Yf = [], hb = pf.length, ib = -1, Fb, Ff; while(++ib < hb) { Ff = pf[ib]; Fb = Ff.mbox.getUrlBuilder(); if (Ff.mbox.getName() !== x) { Yf.push(Ff); continue; } if (!Xf) { Ff.params = c; of.push(Ff); continue; } Fb.addParameters(c); Hf(Fb); If(Rb, Ff); } pf = Yf; } function Fe(De, kb, x) { var rf = Mf(De); if (U.Z(rf) || !U.ab(rf.getSupplementalDataID)) { return ''; } return rf.getSupplementalDataID('mbox:' + kb + ':' + x); } function Sf() { document.documentElement.style.display = 'none'; } function Lf() { document.documentElement.style.display = ''; } function Zf() { if (window.addEventListener) { window.addEventListener('error', function _f() { Lf(); window.removeEventListener('error', _f); }); } } function ag() { if (window.attachEvent) { window.attachEvent('onerror', function bg() { Lf(); window.detachEvent('onerror', bg); }); } } function Rf() { Zf(); ag(); } V.Mf = Mf; V.Pf = Pf; V.Tf = Tf; V.Uf = Uf; V.Vf = Vf; V.Wf = Wf; V.Fe = Fe;}(TNT.a, TNT.a.U, TNT.a.c, TNT.a._c));(function(V, a, U, b, c, M){ function cg() { return b.globalMboxName; } function dg() { return b.globalMboxLocationDomId; } function eg() { return b.globalMboxAutoCreate; } function fg() { return b.parametersFunction(); } function gg() { var ac = 1, hg = document.getElementsByTagName('script'), bc = hg[hg.length - 1]; while (bc) { if (bc.nodeType === ac && bc.className === M.R) { return bc; } bc = bc.previousSibling; } return null; } function ig(Rb, x, c) { var Td = TNT.a, xe, Pb; if (Td.Tf()) { xe = gg(); Pb = Rb.create( x, c, xe); Td.Uf({mbox: Pb, type: 'created'}); return Pb; } else { Pb = Rb.create( x, c); } if (Pb && Rb.isEnabled()) { Pb.load(); } return Pb; } function jg(Rb, xe, x, c) { var Td = TNT.a, Pb = Rb.ze(x, c, xe); if (Td.Tf()) { Td.Uf({mbox: Pb, type: 'defined'}); } return Pb; } function kg(Rb, x, c) { var Td = TNT.a; if (Td.Vf(x)) { Td.Wf(Rb, x, c); return; } Rb.update(x, c); } function lg(Ic, ob) { return Ic.getCookie(ob); } function mg(Ic, ob, Y, nc) { Ic.setCookie(ob, Y, nc); } function ng(og) { var Nb = []; var pg = /([^&=]+)=([^&]*)/g; var qg = decodeURIComponent; var Pc = pg.exec(og); while (Pc) { Nb.push([qg(Pc[1]), qg(Pc[2])].join('=')); Pc = pg.exec(og); } return Nb; } function uf(rg, Kb, tf) { var Nb = []; for (var Lb in rg) { if (!rg.hasOwnProperty(Lb)) { continue; } var Y = rg[Lb]; if (U.db(Y)) { Kb.push(Lb); Nb = Nb.concat(uf(Y, Kb, tf)); Kb.pop(); } else { if (Kb.length > 0) { Nb.push([tf(Kb.concat(Lb).join('.')), Y].join('=')); } else { Nb.push([tf(Lb), Y].join('=')); } } } return Nb; } function sg() { var tg = window.targetPageParams, tf = function(Lb) { return Lb }; if (!U.ab(tg)) { return []; } var Nb = null; try { Nb = tg(); } catch (ug) {} if (U.Z(Nb)) { return []; } if (U.bb(Nb)) { return Nb; } if (U.cb(Nb) && !U._(Nb)) { return ng(Nb); } if (U.db(Nb)) { return uf(Nb, [], tf); } return []; } function vg(Rb) { var wg = cg(), xg = dg(), yg = sg(), zg, Ag, Bg; if (!xg) { xg = "mbox-" + wg + "-" + mboxGenerateId(); zg = document.createElement("div"); zg.className = "mboxDefault"; zg.id = xg; zg.style.visibility = "hidden"; zg.style.display = "none"; Ag = setInterval(function(){ if (document.body) { clearInterval(Ag); document.body.insertBefore(zg, document.body.firstChild); } }, b.bodyPollingTimeout); } Bg = Rb.create(wg, yg, xg); if (TNT.a.Tf()) { TNT.a.Uf({mbox: Bg, params: [], type: 'created'}); return; } if (Bg && Rb.isEnabled()) { if (!Rb.isDomLoaded()) { Bg.setFetcher(new a.Ib()); } Bg.load(); } } function Cg(Rb, x, lb) { if (!Rb.isEnabled()) { return; } var Ae = new Date(), Dg = Ae.getTimezoneOffset() * M.Q, Fb = Rb.getUrlBuilder().clone(); Fb.setBasePath('/m2/' + b.clientCode + '/viztarget'); Fb.addParameter(c.x, x); Fb.addParameter(c.y, 0); Fb.addParameter(c.j, Rb.getMboxes().length() + 1); Fb.addParameter(c.A, Ae.getTime() - Dg); Fb.addParameter(c.d, mboxGenerateId()); Fb.addParameter(c.z, Rb.isDomLoaded()); if (lb && lb.length > 0) { Fb.addParameters(lb); } Rb.ve(Fb); Rb.we(Fb, x); Rb.ue(Fb, x); return Fb.buildUrl(); } function Eg() { return new mboxMap(); } function Fg(Gg, kb, Sd) { return new mboxFactory(Gg, kb, Sd); } a.ig = ig; a.jg = jg; a.kg = kg; a.Cg = Cg; a.lg = lg; a.mg = mg; a.vg = vg; a.Eg = Eg; a.Fg = Fg; a.uf = uf; V.getGlobalMboxName = cg; V.getGlobalMboxLocation = dg; V.isAutoCreateGlobalMbox = eg; V.getClientMboxExtraParameters = fg; V.getTargetPageParameters = sg;}(TNT, TNT.a, TNT.a.U, TNT.a.b, TNT.a.c, TNT.a.M));(function(V){ function Hg(Ic, b, Ig, Jg) { var Kg = 60 * 60, Lg = mboxGetPageParameter(Ig, true) || Ic.getCookie(Jg); if (!Lg) { return; } setTimeout(function() { if (typeof(window.mboxDebugLoaded) === 'undefined') { alert('Could not load the remote debug.\nPlease check your connection to ' + b.companyName + ' servers'); } }, Kg); var Ab = []; Ab.push(b.adminUrl, '/mbox/mbox_debug.jsp', '?'); Ab.push('mboxServerHost', '=', b.serverHost, '&'); Ab.push('clientCode', '=', b.clientCode); document.write('<' + 'scr' + 'ipt src="' + Ab.join('') + '"><' + '\/scr' + 'ipt>'); } function Mg (b, Ng) { var U = V.U, Og, Pg, Y; if (U.X(b) || U.Z(b) || !U.db(b)) { return Ng; } for (var Lb in b) { Og = b.hasOwnProperty(Lb) && Ng.hasOwnProperty(Lb); Y = b[Lb]; Pg = !U.X(Y) && !U.Z(Y); if (Og && Pg) { Ng[Lb] = Y; } } return Ng; } function Qg(Rb, Ic) { TNT.createGlobalMbox = function() { V.vg(Rb); }; window.mboxCreate = function(x ) { var c = [].slice.call(arguments, 1); return V.ig(Rb, x, c); }; window.mboxDefine = function(xe, x ) { var c = [].slice.call(arguments, 2); return V.jg(Rb, xe, x, c); }; window.mboxUpdate = function(x ) { var c = [].slice.call(arguments, 1); V.kg(Rb, x, c); }; window.mboxVizTargetUrl = function(x ) { var c = [].slice.call(arguments, 1); return V.Cg(Rb, x, c); }; window.mboxSetCookie = function(ob, Y, nc) { return V.mg(Ic, ob, Y, nc); }; window.mboxGetCookie = function(ob) { return V.lg(Ic, ob); }; if (typeof(V.Ue) !== 'undefined') { window.mboxLoadSCPlugin = function(Ne) { return V.Ue(Rb, Ne); } } } function Rg() { if (typeof(window.mboxVersion) !== 'undefined') { return; } V.b = Mg(window.targetGlobalSettings, V.b); var b = V.b, Ud = b.mboxVersion, Gg = b.serverHost, kb = b.clientCode, N = V.M.N, Ig = V.C.G, Jg = V.H.G, Sg = V.H.L, Rb, Ic; window.mboxFactories = V.Eg(); window.mboxFactoryDefault = Rb = V.Fg(Gg, kb, N); window.mboxVersion = Ud; Ic = Rb.getCookieManager(); Qg(Rb, Ic); Hg(Ic, b, Ig, Jg); V.xb = function(Tg) { var jb; if (!b.overrideMboxEdgeServer) { return Tg; } jb = Ic.getCookie(Sg); return jb === null ? Tg : jb; } } V.Rg = Rg;}(TNT.a));TNT.a.Rg();TNT.a.Pf(window.mboxFactoryDefault, TNT.a.b);TNT.a.df(TNT.a.b, TNT.a.H,window.mboxFactoryDefault.getCookieManager());
  
  targetPageParamsAll(true);

  if (TNT.isAutoCreateGlobalMbox()) {
    TNT.createGlobalMbox();
  }
} else {
  // version 57
  var mboxCopyright = "Copyright 1996-2014. Adobe Systems Incorporated. All rights reserved.";var TNT = TNT || {};TNT.a = TNT.a || {};TNT.a.nestedMboxes = [];TNT.a.b = { "companyName": "Test&amp;Target", "isProduction": true, "adminUrl": "//admin9.testandtarget.omniture.com/admin", "clientCode": "adobe", "serverHost": "adobe.tt.omtrdc.net", "mboxTimeout": 15000, "mboxLoadedTimeout": 16, "mboxFactoryDisabledTimeout": 60 * 60, "bodyPollingTimeout": 16, "sessionExpirationTimeout": 31 * 60, "experienceManagerDisabledTimeout": 30 * 60, "experienceManagerTimeout": 5000, "tntIdLifetime": 3024000, "crossDomain": "enabled", "trafficDuration": 10368000, "trafficLevelPercentage": 100, "clientSessionIdSupport": true, "clientTntIdSupport": true, "passPageParameters": true, "usePersistentCookies": true, "crossDomainEnabled": true, "crossDomainXOnly": false, "imsOrgId": "9E1005A551ED61CA0A490D45@AdobeOrg", "includeExperienceManagerPlugin": true, "globalMboxName": "adobe-global-mbox", "globalMboxLocationDomId": "", "globalMboxAutoCreate": true, "experienceManagerPluginUrl": "//cdn.tt.omtrdc.net/cdn/target.js", "siteCatalystPluginName": "tt", "includeSiteCatalystPlugin": true, "mboxVersion": 57, "mboxIsSupportedFunction": function() { return true; }, "parametersFunction": function() { return ""; }, "cookieDomainFunction": function() { return mboxCookiePageDomain(); }};TNT.a.c = {};TNT.a.c.d = "mboxPage";TNT.a.c.e = "mboxMCGVID";TNT.a.c.f = "mboxMCGLH";TNT.a.c.g = "mboxAAMB";TNT.a.c.h = "mboxMCAVID";TNT.a.c.i = "mboxMCSDID";TNT.a.c.j = "mboxCount";TNT.a.c.k = "mboxHost";TNT.a.c.l = "mboxFactoryId";TNT.a.c.m = "mboxPC";TNT.a.c.n = "screenHeight";TNT.a.c.o = "screenWidth";TNT.a.c.p = "browserWidth";TNT.a.c.q = "browserHeight";TNT.a.c.r = "browserTimeOffset";TNT.a.c.s = "colorDepth";TNT.a.c.t = "mboxXDomain";TNT.a.c.u = "mboxURL";TNT.a.c.v = "mboxReferrer";TNT.a.c.w = "mboxVersion";TNT.a.c.x = "mbox";TNT.a.c.y = "mboxId";TNT.a.c.z = "mboxDOMLoaded";TNT.a.c.A = "mboxTime";TNT.a.c.B = "scPluginVersion";TNT.a.C = {};TNT.a.C.D = "mboxDisable";TNT.a.C.E = "mboxSession";TNT.a.C.F = "mboxEnv";TNT.a.C.G = "mboxDebug";TNT.a.H = {};TNT.a.H.D = "disable";TNT.a.H.E = "session";TNT.a.H.m = "PC";TNT.a.H.I = "level";TNT.a.H.J = "check";TNT.a.H.G = "debug";TNT.a.H.K = "em-disabled";TNT.a.L = {};TNT.a.L.M = "default";TNT.a.L.N = "mbox";TNT.a.L.O = "mboxImported-";TNT.a.L.P = 60000;TNT.a.L.Q = "mboxDefault";TNT.a.L.R = "mboxMarker-";TNT.a.L.S = 250;TNT.a.L.B = 1;TNT.getGlobalMboxName = function () { return TNT.a.b.globalMboxName;};TNT.getGlobalMboxLocation = function () { return TNT.a.b.globalMboxLocationDomId;};TNT.isAutoCreateGlobalMbox = function () { return TNT.a.b.globalMboxAutoCreate;};TNT.getClientMboxExtraParameters = function () { return TNT.a.b.parametersFunction();};TNT.a.T = {};TNT.a.T.U = function(V) { return V === void(0);};TNT.a.T.W = function(V) { return V === null;};TNT.a.T.X = function(V) { var T = TNT.a.T; if (T.U(V) || T.W(V)) { return true; } return V.length === 0;};TNT.a.T.Y = function(V) { var Z = {}.toString; return Z.call(V) === '[object Function]';};TNT.a.T._ = function(V) { var Z = {}.toString; return Z.call(V) === '[object Array]';};TNT.a.T.ab = function(V) { var Z = {}.toString; return Z.call(V) === '[object String]';};TNT.a.T.bb = function(V) { var Z = {}.toString; return Z.call(V) === '[object Object]';};TNT.getTargetPageParameters = function () { var T = TNT.a.T; var cb = window.targetPageParams; if (!T.Y(cb)) { return []; } var db = null; try { db = cb(); } catch (eb) {} if (T.W(db)) { return []; } if (T._(db)) { return db; } if (T.ab(db) && !T.X(db)) { return TNT.a.fb(db); } if (T.bb(db)) { return TNT.a.gb(db, []); } return [];};TNT.a.fb = function(hb) { var db = []; var ib = /([^&=]+)=([^&]*)/g; var jb = decodeURIComponent; var kb = ib.exec(hb); while (kb) { db.push([jb(kb[1]), jb(kb[2])].join('=')); kb = ib.exec(hb); } return db;};TNT.a.gb = function (lb, mb) { var T = TNT.a.T; var db = []; for (var nb in lb) { if (!lb.hasOwnProperty(nb)) { continue; } var V = lb[nb]; if (T.bb(V)) { mb.push(nb); db = db.concat(TNT.a.gb(V, mb)); mb.pop(); } else { if (mb.length > 0) { db.push([mb.concat(nb).join('.'), V].join('=')); } else { db.push([nb, V].join('=')); } } } return db;};TNT.a.ob = function() { };TNT.a.ob.prototype.getType = function() { return 'ajax';};TNT.a.ob.prototype.fetch = function(pb) { pb.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + pb.buildUrl() +'"><' + '\/scr' + 'ipt>');};TNT.a.ob.prototype.cancel = function() { };mboxUrlBuilder = function(qb, rb) { this.qb = qb; this.rb = rb; this.sb = []; this.tb = function(u) { return u; }; this.ub = null;};mboxUrlBuilder.prototype.addNewParameter = function (vb, V) { this.sb.push({name: vb, value: V}); return this;};mboxUrlBuilder.prototype.addParameterIfAbsent = function (vb, V) { if (V) { for (var wb = 0; wb < this.sb.length; wb++) { var xb = this.sb[wb]; if (xb.name === vb) { return this; } } this.checkInvalidCharacters(vb); return this.addNewParameter(vb, V); }};mboxUrlBuilder.prototype.addParameter = function(vb, V) { this.checkInvalidCharacters(vb); for (var wb = 0; wb < this.sb.length; wb++) { var xb = this.sb[wb]; if (xb.name === vb) { xb.value = V; return this; } } return this.addNewParameter(vb, V);};mboxUrlBuilder.prototype.addParameters = function(sb) { if (!sb) { return this; } for (var wb = 0; wb < sb.length; wb++) { var yb = sb[wb].indexOf('='); if (yb === -1 || yb === 0) { continue; } this.addParameter(sb[wb].substring(0, yb), sb[wb].substring(yb + 1, sb[wb].length)); } return this;};mboxUrlBuilder.prototype.setServerType = function(zb) { this.Ab = zb;};mboxUrlBuilder.prototype.setBasePath = function(ub) { this.ub = ub;};mboxUrlBuilder.prototype.setUrlProcessAction = function(Bb) { this.tb = Bb;};mboxUrlBuilder.prototype.buildUrl = function() { var Cb = this.ub ? this.ub : '/m2/' + this.rb + '/mbox/' + this.Ab; var Db = document.location.protocol == 'file:' ? 'http:' : document.location.protocol; var u = Db + "//" + this.qb + Cb; var Eb = u.indexOf('?') != -1 ? '&' : '?'; for (var wb = 0; wb < this.sb.length; wb++) { var xb = this.sb[wb]; u += Eb + encodeURIComponent(xb.name) + '=' + encodeURIComponent(xb.value); Eb = '&'; } return this.Fb(this.tb(u));};mboxUrlBuilder.prototype.getParameters = function() { return this.sb;};mboxUrlBuilder.prototype.setParameters = function(sb) { this.sb = sb;};mboxUrlBuilder.prototype.clone = function() { var Gb = new mboxUrlBuilder(this.qb, this.rb); Gb.setServerType(this.Ab); Gb.setBasePath(this.ub); Gb.setUrlProcessAction(this.tb); for (var wb = 0; wb < this.sb.length; wb++) { Gb.addParameter(this.sb[wb].name, this.sb[wb].value); } return Gb;};mboxUrlBuilder.prototype.Fb = function(Hb) { return Hb.replace(/\"/g, '&quot;').replace(/>/g, '&gt;');}; mboxUrlBuilder.prototype.checkInvalidCharacters = function (vb) { var Ib = new RegExp('(\'|")'); if (Ib.exec(vb)) { throw "Parameter '" + vb + "' contains invalid characters"; } };mboxStandardFetcher = function() { };mboxStandardFetcher.prototype.getType = function() { return 'standard';};mboxStandardFetcher.prototype.fetch = function(pb) { pb.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + pb.buildUrl() + '"><' + '\/scr' + 'ipt>');};mboxStandardFetcher.prototype.cancel = function() { };mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype.getType = function() { return 'ajax';};mboxAjaxFetcher.prototype.fetch = function(pb) { pb.setServerType(this.getType()); var u = pb.buildUrl(); this.Jb = document.createElement('script'); this.Jb.src = u; document.body.appendChild(this.Jb);};mboxAjaxFetcher.prototype.cancel = function() { };mboxMap = function() { this.Kb = {}; this.mb = [];};mboxMap.prototype.put = function(nb, V) { if (!this.Kb[nb]) { this.mb[this.mb.length] = nb; } this.Kb[nb] = V;};mboxMap.prototype.get = function(nb) { return this.Kb[nb];};mboxMap.prototype.remove = function(nb) { this.Kb[nb] = undefined; var Lb = []; for (var i = 0; i < this.mb.length; i++) { if (this.mb[i] !== nb) { Lb.push(this.mb[i]); } } this.mb = Lb;};mboxMap.prototype.each = function(Bb) { for (var wb = 0; wb < this.mb.length; wb++ ) { var nb = this.mb[wb]; var V = this.Kb[nb]; if (V) { var db = Bb(nb, V); if (db === false) { break; } } }};mboxMap.prototype.isEmpty = function() { return this.mb.length === 0;};mboxFactory = function(Mb, rb, Nb) { var b = TNT.a.b; var H = TNT.a.H; var C = TNT.a.C; var L = TNT.a.L; var Ob = b.mboxVersion; this.Pb = false; this.Nb = Nb; this.Qb = new mboxList(); mboxFactories.put(Nb, this); this.Rb = b.mboxIsSupportedFunction() && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined'; this.Sb = this.Rb && mboxGetPageParameter(C.D, true) === null; var Tb = Nb == L.M; var Ub = L.N + (Tb ? '' : ('-' + Nb)); this.Vb = new mboxCookieManager(Ub, b.cookieDomainFunction()); if (b.crossDomainXOnly) { this.Sb = this.Sb && this.Vb.isEnabled(); } this.Sb = this.Sb && TNT.a.T.W(this.Vb.getCookie(H.D)) && TNT.a.T.W(this.Vb.getCookie(H.K)); if (this.isAdmin()) { this.enable(); } this.Wb(); this.Xb = mboxGenerateId(); this.Yb = mboxScreenHeight(); this.Zb = mboxScreenWidth(); this._b = mboxBrowserWidth(); this.ac = mboxBrowserHeight(); this.bc = mboxScreenColorDepth(); this.cc = mboxBrowserTimeOffset(); this.dc = new mboxSession(this.Xb, C.E, H.E, b.sessionExpirationTimeout, this.Vb); this.ec = new mboxPC(H.m, b.tntIdLifetime, this.Vb); this.pb = new mboxUrlBuilder(Mb, rb); this.fc(this.pb, Tb, Ob); this.gc = new Date().getTime(); this.hc = this.gc; var ic = this; this.addOnLoad(function() { ic.hc = new Date().getTime(); }); if (this.Rb) { this.addOnLoad(function() { ic.Pb = true; ic.getMboxes().each(function(jc) { jc.kc(); jc.setFetcher(new mboxAjaxFetcher()); jc.finalize(); }); TNT.a.nestedMboxes = []; }); if (this.Sb) { this.limitTraffic(b.trafficLevelPercentage, b.trafficDuration); this.lc(); this.mc = new mboxSignaler(this); } else { if (!b.isProduction) { if (this.isAdmin()) { if (!this.isEnabled()) { alert("mbox disabled, probably due to timeout\n" + "Reset your cookies to re-enable\n(this message will only appear in administrative mode)"); } else { alert("It looks like your browser will not allow " + b.companyName + " to set its administrative cookie. To allow setting the" + " cookie please lower the privacy settings of your browser.\n" + "(this message will only appear in administrative mode)"); } } } } }};mboxFactory.prototype.forcePCId = function(nc) { if (!TNT.a.b.clientTntIdSupport) { return; } if (this.ec.forceId(nc)) { this.dc.forceId(mboxGenerateId()); }};mboxFactory.prototype.forceSessionId = function(nc) { if (!TNT.a.b.clientSessionIdSupport) { return; } this.dc.forceId(nc);};mboxFactory.prototype.isEnabled = function() { return this.Sb;};mboxFactory.prototype.getDisableReason = function() { return this.Vb.getCookie(TNT.a.H.D);};mboxFactory.prototype.isSupported = function() { return this.Rb;};mboxFactory.prototype.disable = function(oc, pc) { if (typeof oc == 'undefined') { oc = 60 * 60; } if (typeof pc == 'undefined') { pc = 'unspecified'; } if (!this.isAdmin()) { this.Sb = false; this.Vb.setCookie(TNT.a.H.D, pc, oc); }};mboxFactory.prototype.enable = function() { this.Sb = true; this.Vb.deleteCookie(TNT.a.H.D);};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf(TNT.a.C.F) != -1;};mboxFactory.prototype.limitTraffic = function(qc, oc) { if (TNT.a.b.trafficLevelPercentage != 100) { if (qc == 100) { return; } var rc = true; if (parseInt(this.Vb.getCookie(TNT.a.H.I)) != qc) { rc = (Math.random() * 100) <= qc; } this.Vb.setCookie(TNT.a.H.I, qc, oc); if (!rc) { this.disable(60 * 60, 'limited by traffic'); } }};mboxFactory.prototype.addOnLoad = function(sc) { if (this.isDomLoaded()) { sc(); } else { var tc = false; var uc = function() { if (tc) { return; } tc = true; sc(); }; this.vc.push(uc); if (this.isDomLoaded() && !tc) { uc(); } }};mboxFactory.prototype.getEllapsedTime = function() { return this.hc - this.gc;};mboxFactory.prototype.getEllapsedTimeUntil = function(A) { return A - this.gc;};mboxFactory.prototype.getMboxes = function() { return this.Qb;};mboxFactory.prototype.get = function(x, y) { return this.Qb.get(x).getById(y || 0);};mboxFactory.prototype.update = function(x, sb) { if (!this.isEnabled()) { return; } var ic = this; if (!this.isDomLoaded()) { this.addOnLoad(function() { ic.update(x, sb); }); return; } if (this.Qb.get(x).length() === 0) { throw "Mbox " + x + " is not defined"; } this.Qb.get(x).each(function(jc) { var pb = jc.getUrlBuilder(); pb.addParameter(TNT.a.c.d, mboxGenerateId()); ic.wc(pb); ic.xc(pb, x); ic.setVisitorIdParameters(pb, x); jc.load(sb); });};mboxFactory.prototype.setVisitorIdParameters = function(u, x) { if (typeof Visitor == 'undefined' || !TNT.a.b.imsOrgId) { return; } var visitor = Visitor.getInstance(TNT.a.b.imsOrgId); if (visitor.isAllowed()) { var addVisitorValueToUrl = function(param, getter, mboxName) { if (visitor[getter]) { var callback = function(value) { if (value) { u.addParameter(param, value); } }; var value; if (typeof mboxName != 'undefined') { value = visitor[getter]("mbox:" + mboxName); } else { value = visitor[getter](callback); } callback(value); } }; addVisitorValueToUrl(TNT.a.c.e, "getMarketingCloudVisitorID"); addVisitorValueToUrl(TNT.a.c.f, "getAudienceManagerLocationHint"); addVisitorValueToUrl(TNT.a.c.g, "getAudienceManagerBlob"); addVisitorValueToUrl(TNT.a.c.h, "getAnalyticsVisitorID"); addVisitorValueToUrl(TNT.a.c.i, "getSupplementalDataID", x); }};mboxFactory.prototype.create = function(x, sb, yc) { if (!this.isSupported()) { return null; } var zc = new Date(); var A = zc.getTime() - (zc.getTimezoneOffset() * TNT.a.L.P); var pb = this.pb.clone(); pb.addParameter(TNT.a.c.j, this.Qb.length() + 1); pb.addParameter(TNT.a.c.A, A); pb.addParameters(sb); this.wc(pb); this.xc(pb, x); this.setVisitorIdParameters(pb, x); var y, Ac, jc; if (yc) { Ac = new mboxLocatorNode(yc); } else { if (this.Pb) { throw 'The page has already been loaded, can\'t write marker'; } Ac = new mboxLocatorDefault(this.Bc(x)); } try { y = this.Qb.get(x).length(); jc = new mbox(x, y, pb, Ac, this.Cc(x), this); if (this.Sb) { jc.setFetcher(this.Pb ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } var ic = this; jc.setOnError(function(Dc, zb) { jc.setMessage(Dc); jc.activate(); if (!jc.isActivated()) { ic.disable(TNT.a.b.mboxFactoryDisabledTimeout, Dc); window.location.reload(false); } }); this.Qb.add(jc); } catch (Ec) { this.disable(); throw 'Failed creating mbox "' + x + '", the error was: ' + Ec; } return jc;};mboxFactory.prototype.wc = function(pb) { var m = this.ec.getId(); if (m) { pb.addParameter(TNT.a.c.m, m); }};mboxFactory.prototype.xc = function(pb, x) { var Fc = !TNT.isAutoCreateGlobalMbox() && TNT.getGlobalMboxName() === x; if (Fc) { pb.addParameters(TNT.getTargetPageParameters()); }};mboxFactory.prototype.getCookieManager = function() { return this.Vb;};mboxFactory.prototype.getPageId = function() { return this.Xb;};mboxFactory.prototype.getPCId = function() { return this.ec;};mboxFactory.prototype.getSessionId = function() { return this.dc;};mboxFactory.prototype.getSignaler = function() { return this.mc;};mboxFactory.prototype.getUrlBuilder = function() { return this.pb;};mboxFactory.prototype.Gc = function(x) { return this.Nb + '-' + x + '-' + this.Qb.get(x).length();};mboxFactory.prototype.Bc = function(x) { return TNT.a.L.R + this.Gc(x);};mboxFactory.prototype.Cc = function(x) { return TNT.a.L.O + this.Gc(x);};mboxFactory.prototype.fc = function(pb, Tb, Ob) { pb.addParameter(TNT.a.c.k, document.location.hostname); pb.addParameter(TNT.a.c.d, this.Xb); pb.addParameter(TNT.a.c.n, this.Yb); pb.addParameter(TNT.a.c.o, this.Zb); pb.addParameter(TNT.a.c.p, this._b); pb.addParameter(TNT.a.c.q, this.ac); pb.addParameter(TNT.a.c.r, this.cc); pb.addParameter(TNT.a.c.s, this.bc); pb.addParameter(TNT.a.C.E, this.dc.getId()); if (!Tb) { pb.addParameter(TNT.a.c.l, this.Nb); } this.wc(pb); if (TNT.a.b.crossDomainEnabled) { pb.addParameter(TNT.a.c.t, TNT.a.b.crossDomain); } var c = TNT.getClientMboxExtraParameters(); if (c) { pb.addParameters(c.split('&')); } pb.setUrlProcessAction(function(u) { if (TNT.a.b.passPageParameters) { u += '&'; u += TNT.a.c.u; u += '=' + encodeURIComponent(document.location); var v = encodeURIComponent(document.referrer); if (u.length + v.length < 2000) { u += '&'; u += TNT.a.c.v; u += '=' + v; } } u += '&'; u += TNT.a.c.w; u += '=' + Ob; return u; });};mboxFactory.prototype.lc = function() { document.write('<style>.' + TNT.a.L.Q + ' { visibility:hidden; }</style>');};mboxFactory.prototype.isDomLoaded = function() { return this.Pb;};mboxFactory.prototype.Wb = function() { if (this.vc) { return; } this.vc = []; var ic = this; (function() { var Hc = document.addEventListener ? "DOMContentLoaded" : "onreadystatechange"; var Ic = false; var Jc = function() { if (Ic) { return; } Ic = true; for (var i = 0; i < ic.vc.length; ++i) { ic.vc[i](); } }; if (document.addEventListener) { document.addEventListener(Hc, function() { document.removeEventListener(Hc, arguments.callee, false); Jc(); }, false); window.addEventListener("load", function(){ document.removeEventListener("load", arguments.callee, false); Jc(); }, false); } else if (document.attachEvent) { if (self !== self.top) { document.attachEvent(Hc, function() { if (document.readyState === 'complete') { document.detachEvent(Hc, arguments.callee); Jc(); } }); } else { var Kc = function() { try { document.documentElement.doScroll('left'); Jc(); } catch (Lc) { setTimeout(Kc, 13); } }; Kc(); } } if (document.readyState === "complete") { Jc(); } })();};mboxSignaler = function(Mc) { this.Nc = document; this.Mc = Mc;};mboxSignaler.prototype.signal = function(Oc, x ) { if (!this.Mc.isEnabled()) { return; } var Pc = this.Qc(this.Mc.Bc(x)); this.Rc(this.Nc.body, Pc); var jc = this.Mc.create(x, mboxShiftArray(arguments), Pc); var pb = jc.getUrlBuilder(); pb.addParameter(TNT.a.c.d, mboxGenerateId()); jc.load();};mboxSignaler.prototype.Qc = function(Sc) { var db = this.Nc.createElement('DIV'); db.id = Sc; db.style.visibility = 'hidden'; db.style.display = 'none'; return db;};mboxSignaler.prototype.Rc = function(Tc, Uc) { Tc.appendChild(Uc);};mboxList = function() { this.Qb = [];};mboxList.prototype.add = function(jc) { var T = TNT.a.T; if (T.U(jc) || T.W(jc)) { return; } this.Qb[this.Qb.length] = jc;};mboxList.prototype.get = function(x) { var db = new mboxList(); for (var wb = 0; wb < this.Qb.length; wb++) { var jc = this.Qb[wb]; if (jc.getName() == x) { db.add(jc); } } return db;};mboxList.prototype.getById = function(Vc) { return this.Qb[Vc];};mboxList.prototype.length = function() { return this.Qb.length;};mboxList.prototype.each = function(Bb) { if (typeof Bb !== 'function') { throw 'Action must be a function, was: ' + typeof(Bb); } for (var wb = 0; wb < this.Qb.length; wb++) { Bb(this.Qb[wb]); }};mboxLocatorDefault = function(Wc) { this.Wc = Wc; document.write('<div id="' + this.Wc + '" style="visibility:hidden;display:none">&nbsp;<\/div>');};mboxLocatorDefault.prototype.locate = function() { var Xc = 1; var Uc = document.getElementById(this.Wc); while (Uc) { if (Uc.nodeType == Xc) { if (Uc.className == 'mboxDefault') { return Uc; } } Uc = Uc.previousSibling; } return null;};mboxLocatorDefault.prototype.force = function() { var Yc = document.createElement('div'); Yc.className = 'mboxDefault'; var Zc = document.getElementById(this.Wc); if (Zc) { Zc.parentNode.insertBefore(Yc, Zc); } return Yc;};mboxLocatorNode = function(Uc) { this.Uc = Uc;};mboxLocatorNode.prototype.locate = function() { return typeof this.Uc == 'string' ? document.getElementById(this.Uc) : this.Uc;};mboxLocatorNode.prototype.force = function() { return null;};mboxCreate = function(x ) { var jc = mboxFactoryDefault.create( x, mboxShiftArray(arguments)); if (jc && mboxFactoryDefault.isEnabled()) { jc.load(); } return jc;};mboxDefine = function(yc, x ) { var jc = mboxFactoryDefault.create(x, mboxShiftArray(mboxShiftArray(arguments)), yc); return jc;};mboxUpdate = function(x ) { mboxFactoryDefault.update(x, mboxShiftArray(arguments));};mbox = function(vb, Sc, pb, _c, ad, Mc) { this.bd = null; this.cd = 0; this.Ac = _c; this.ad = ad; this.dd = null; this.ed = new mboxOfferContent(); this.Yc = null; this.pb = pb; this.message = ''; this.fd = {}; this.gd = 0; this.Sc = Sc; this.vb = vb; this.hd(); pb.addParameter(TNT.a.c.x, vb); pb.addParameter(TNT.a.c.y, Sc); this.id = function() {}; this.jd = function() {}; this.kd = null; this.ld = document.documentMode >= 10 && !Mc.isDomLoaded(); if (this.ld) { this.md = TNT.a.nestedMboxes; this.md.push(this.vb); }};mbox.prototype.getId = function() { return this.Sc;};mbox.prototype.hd = function() { var maxLength = TNT.a.L.S; if (this.vb.length > maxLength) { throw "Mbox Name " + this.vb + " exceeds max length of " + maxLength + " characters."; } else if (this.vb.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.vb + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.vb;};mbox.prototype.getParameters = function() { var sb = this.pb.getParameters(); var db = []; for (var wb = 0; wb < sb.length; wb++) { if (sb[wb].name.indexOf('mbox') !== 0) { db[db.length] = sb[wb].name + '=' + sb[wb].value; } } return db;};mbox.prototype.setOnLoad = function(Bb) { this.jd = Bb; return this;};mbox.prototype.setMessage = function(Dc) { this.message = Dc; return this;};mbox.prototype.setOnError = function(id) { this.id = id; return this;};mbox.prototype.setFetcher = function(nd) { if (this.dd) { this.dd.cancel(); } this.dd = nd; return this;};mbox.prototype.getFetcher = function() { return this.dd;};mbox.prototype.load = function(sb) { if (this.dd === null) { return this; } this.setEventTime("load.start"); this.cancelTimeout(); this.cd = 0; var pb = (sb && sb.length > 0) ? this.pb.clone().addParameters(sb) : this.pb; this.dd.fetch(pb); var ic = this; this.od = setTimeout(function() { ic.id('browser timeout', ic.dd.getType()); }, TNT.a.b.mboxTimeout); this.setEventTime("load.end"); return this;};mbox.prototype.loaded = function() { this.cancelTimeout(); if (!this.activate()) { var ic = this; setTimeout(function() { ic.loaded(); }, TNT.a.b.mboxLoadedTimeout); }};mbox.prototype.activate = function() { if (this.cd) { return this.cd; } this.setEventTime('activate' + (++this.gd) + '.start'); if (this.ld && this.md[this.md.length - 1] !== this.vb) { return this.cd; } if (this.show()) { this.cancelTimeout(); this.cd = 1; } this.setEventTime('activate' + this.gd + '.end'); if (this.ld) { this.md.pop(); } return this.cd;};mbox.prototype.isActivated = function() { return this.cd;};mbox.prototype.setOffer = function(ed) { var pd = ed && ed.show && ed.setOnLoad; if (!pd) { throw 'Invalid offer'; } var qd = TNT.a.b.globalMboxName === this.vb; qd = qd && ed instanceof mboxOfferDefault; qd = qd && this.dd !== null; qd = qd && this.dd.getType() === 'ajax'; if (!qd) { this.ed = ed; return this; } var rd = this.ed.jd; this.ed = ed; this.ed.setOnLoad(rd); return this;};mbox.prototype.getOffer = function() { return this.ed;};mbox.prototype.show = function() { this.setEventTime('show.start'); var db = this.ed.show(this); this.setEventTime(db == 1 ? "show.end.ok" : "show.end"); return db;};mbox.prototype.showContent = function(sd) { if (!mbox.td(sd)) { return 0; } this.Yc = mbox.ud(this, this.Yc); if (this.Yc === null) { return 0; } if (!mbox.vd(document.body, this.Yc)) { return 0; } if (this.Yc === sd) { this.wd(this.Yc); this.jd(); return 1; } this.xd(this.Yc); this.xd(sd); mbox.yd(this, sd); this.wd(this.Yc); this.jd(); return 1;};mbox.td = function(sd) { return sd !== undefined && sd !== null;};mbox.vd = function(zd, Ad) { var DOCUMENT_POSITION_CONTAINED_BY = 16; var Bd = zd.contains !== undefined; if (Bd) { return zd !== Ad && zd.contains(Ad); } else { return Boolean(zd.compareDocumentPosition(Ad) & DOCUMENT_POSITION_CONTAINED_BY); }};mbox.ud = function(jc, Yc) { if (Yc !== undefined && Yc !== null && mbox.vd(document.body, Yc)) { return Yc; } return jc.getDefaultDiv();};mbox.yd = function(jc, Cd) { jc.Yc.parentNode.replaceChild(Cd, jc.Yc); jc.Yc = Cd;}; mbox.prototype.hide = function() { this.setEventTime('hide.start'); var db = this.showContent(this.getDefaultDiv()); this.setEventTime(db == 1 ? 'hide.end.ok' : 'hide.end.fail'); return db;};mbox.prototype.finalize = function() { this.setEventTime('finalize.start'); this.cancelTimeout(); if (!this.getDefaultDiv()) { if (this.Ac.force()) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok');};mbox.prototype.cancelTimeout = function() { if (this.od) { clearTimeout(this.od); } if (this.dd) { this.dd.cancel(); }};mbox.prototype.getDiv = function() { return this.Yc;};mbox.prototype.getDefaultDiv = function() { if (this.kd === null) { this.kd = this.Ac.locate(); } return this.kd;};mbox.prototype.setEventTime = function(Dd) { this.fd[Dd] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.fd;};mbox.prototype.getImportName = function() { return this.ad;};mbox.prototype.getURL = function() { return this.pb.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.pb;};mbox.prototype.Ed = function(Yc) { return Yc.style.display != 'none';};mbox.prototype.wd = function(Yc) { this.Fd(Yc, true);};mbox.prototype.xd = function(Yc) { this.Fd(Yc, false);};mbox.prototype.Fd = function(Yc, Gd) { Yc.style.visibility = Gd ? "visible" : "hidden"; Yc.style.display = Gd ? "block" : "none";};mbox.prototype.kc = function() { this.ld = false;};mbox.prototype.relocateDefaultDiv = function() { this.kd = this.Ac.locate();};mboxOfferContent = function() { this.jd = function() {};};mboxOfferContent.prototype.show = function(jc) { var db = jc.showContent(document.getElementById(jc.getImportName())); if (db == 1) { this.jd(); } return db;};mboxOfferContent.prototype.setOnLoad = function(jd) { this.jd = jd;};mboxOfferAjax = function(sd) { this.sd = sd; this.jd = function() {};};mboxOfferAjax.prototype.setOnLoad = function(jd) { this.jd = jd;};mboxOfferAjax.prototype.show = function(jc) { var Hd = document.createElement('div'); Hd.id = jc.getImportName(); Hd.innerHTML = this.sd; var db = jc.showContent(Hd); if (db == 1) { this.jd(); } return db;};mboxOfferDefault = function() { this.jd = function() {};};mboxOfferDefault.prototype.setOnLoad = function(jd) { this.jd = jd;};mboxOfferDefault.prototype.show = function(jc) { var db = jc.hide(); if (db == 1) { this.jd(); } return db;};mboxCookieManager = function mboxCookieManager(vb, Id) { this.vb = vb; this.Id = Id === '' || Id.indexOf('.') === -1 ? '' : '; domain=' + Id; this.Jd = new mboxMap(); this.loadCookies();};mboxCookieManager.prototype.isEnabled = function() { this.setCookie(TNT.a.H.J, 'true', 60); this.loadCookies(); return this.getCookie(TNT.a.H.J) == 'true';};mboxCookieManager.prototype.setCookie = function(vb, V, oc) { if (typeof vb != 'undefined' && typeof V != 'undefined' && typeof oc != 'undefined') { var Kd = {}; Kd.name = vb; Kd.value = encodeURIComponent(V); Kd.expireOn = Math.ceil(oc + new Date().getTime() / 1000); this.Jd.put(vb, Kd); this.saveCookies(); }};mboxCookieManager.prototype.getCookie = function(vb) { var Kd = this.Jd.get(vb); return Kd ? decodeURIComponent(Kd.value) : null;};mboxCookieManager.prototype.deleteCookie = function(vb) { this.Jd.remove(vb); this.saveCookies();};mboxCookieManager.prototype.getCookieNames = function(Ld) { var Md = []; this.Jd.each(function(vb, Kd) { if (vb.indexOf(Ld) === 0) { Md[Md.length] = vb; } }); return Md;};mboxCookieManager.prototype.saveCookies = function() { var Nd = TNT.a.b.crossDomainXOnly; var Od = TNT.a.H.D; var Pd = []; var Qd = 0; this.Jd.each(function(vb, Kd) { if(!Nd || vb === Od) { Pd[Pd.length] = vb + '#' + Kd.value + '#' + Kd.expireOn; if (Qd < Kd.expireOn) { Qd = Kd.expireOn; } } }); var Rd = new Date(Qd * 1000); var Sd = []; Sd.push(this.vb, '=', Pd.join('|')); if (TNT.a.b.usePersistentCookies) { Sd.push('; expires=', Rd.toGMTString()); } Sd.push('; path=/', this.Id); document.cookie = Sd.join("");};mboxCookieManager.prototype.loadCookies = function() { this.Jd = new mboxMap(); var Td = document.cookie.indexOf(this.vb + '='); if (Td != -1) { var Ud = document.cookie.indexOf(';', Td); if (Ud == -1) { Ud = document.cookie.indexOf(',', Td); if (Ud == -1) { Ud = document.cookie.length; } } var Vd = document.cookie.substring( Td + this.vb.length + 1, Ud).split('|'); var Wd = Math.ceil(new Date().getTime() / 1000); for (var wb = 0; wb < Vd.length; wb++) { var Kd = Vd[wb].split('#'); if (Wd <= Kd[2]) { var Xd = {}; Xd.name = Kd[0]; Xd.value = Kd[1]; Xd.expireOn = Kd[2]; this.Jd.put(Xd.name, Xd); } } }};mboxSession = function(Yd, Zd, Ub, _d, Vb) { this.Zd = Zd; this.Ub = Ub; this._d = _d; this.Vb = Vb; this.Sc = typeof mboxForceSessionId != 'undefined' ? mboxForceSessionId : mboxGetPageParameter(this.Zd, true); if (this.Sc === null || this.Sc.length === 0) { this.Sc = Vb.getCookie(Ub); if (this.Sc === null || this.Sc.length === 0) { this.Sc = Yd; } } this.Vb.setCookie(Ub, this.Sc, _d);};mboxSession.prototype.getId = function() { return this.Sc;};mboxSession.prototype.forceId = function(nc) { this.Sc = nc; this.Vb.setCookie(this.Ub, this.Sc, this._d);};mboxPC = function(Ub, _d, Vb) { this.Ub = Ub; this._d = _d; this.Vb = Vb; this.Sc = typeof mboxForcePCId != 'undefined' ? mboxForcePCId : Vb.getCookie(Ub); if (this.Sc) { Vb.setCookie(Ub, this.Sc, _d); }};mboxPC.prototype.getId = function() { return this.Sc;};mboxPC.prototype.forceId = function(nc) { if (this.Sc != nc) { this.Sc = nc; this.Vb.setCookie(this.Ub, this.Sc, this._d); return true; } return false;};mboxGetPageParameter = function(vb, ae) { ae = ae || false; var be; if (ae) { be = new RegExp("\\?[^#]*" + vb + "=([^\&;#]*)", "i"); } else { be = new RegExp("\\?[^#]*" + vb + "=([^\&;#]*)"); } var db = null; var ce = be.exec(document.location); if (ce && ce.length >= 2) { db = ce[1]; } return db;};mboxSetCookie = function(vb, V, oc) { return mboxFactoryDefault.getCookieManager().setCookie(vb, V, oc);};mboxGetCookie = function(vb) { return mboxFactoryDefault.getCookieManager().getCookie(vb);};mboxCookiePageDomain = function() { var Id = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var de = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!de.exec(Id)) { var ee = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(Id); if (ee) { Id = ee[0]; if (Id.indexOf("www.") === 0) { Id=Id.substr(4); } } } return Id ? Id: "";};mboxShiftArray = function(fe) { var db = []; for (var wb = 1; wb < fe.length; wb++) { db[db.length] = fe[wb]; } return db;};mboxGenerateId = function() { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999);};mboxScreenHeight = function() { return screen.height;};mboxScreenWidth = function() { return screen.width;};mboxBrowserWidth = function() { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth;};mboxBrowserHeight = function() { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight;};mboxBrowserTimeOffset = function() { return -new Date().getTimezoneOffset();};mboxScreenColorDepth = function() { return screen.pixelDepth;};mboxScPluginFetcher = function (rb, ge) { this.rb = rb; this.ge = ge;};mboxScPluginFetcher.prototype.he = function (pb) { pb.setBasePath('/m2/' + this.rb + '/sc/standard'); this.ie(pb); var je = TNT.a.c.B; var ke =TNT.a.L.B; pb.addParameter(je, ke); return pb.buildUrl();};mboxScPluginFetcher.prototype.ie = function (pb) { var le = [ "dynamicVariablePrefix", "visitorID", "vmk", "ppu", "charSet", "visitorNamespace", "cookieDomainPeriods", "cookieLifetime", "pageName", "currencyCode", "variableProvider", "channel", "server", "pageType", "transactionID", "purchaseID", "campaign", "state", "zip", "events", "products", "linkName", "linkType", "resolution", "colorDepth", "javascriptVersion", "javaEnabled", "cookiesEnabled", "browserWidth", "browserHeight", "connectionType", "homepage", "pe", "pev1", "pev2", "pev3", "visitorSampling", "visitorSamplingGroup", "dynamicAccountSelection", "dynamicAccountList", "dynamicAccountMatch", "trackDownloadLinks", "trackExternalLinks", "trackInlineStats", "linkLeaveQueryString", "linkDownloadFileTypes", "linkExternalFilters", "linkInternalFilters", "linkTrackVars", "linkTrackEvents", "linkNames", "lnk", "eo" ]; for (var wb = 0; wb < le.length; wb++) { this.me(le[wb], pb); } for (wb = 1; wb <= 75; wb++) { this.me('prop' + wb, pb); this.me('eVar' + wb, pb); this.me('hier' + wb, pb); }};mboxScPluginFetcher.prototype.me = function (vb, pb) { var T = TNT.a.T; var V = this.ge[vb]; if (T.X(V) || T.bb(V)) { return; } pb.addParameter(vb, V);};mboxScPluginFetcher.prototype.cancel = function () {};mboxScPluginFetcher.prototype.fetch = function (pb) { pb.setServerType(this.getType()); var u = this.he(pb); this.Jb = document.createElement('script'); this.Jb.src = u; document.body.appendChild(this.Jb);};mboxScPluginFetcher.prototype.getType = function () { return 'ajax';};mboxLoadSCPlugin = function (ge) { if (!ge) { return null; } var ne = TNT.a.b.siteCatalystPluginName; var rb = TNT.a.b.clientCode; ge["m_" + ne] = function (ge) { var oe = '_t'; var qe = 'm_i'; var re = ge[qe](ne); re.Sb = true; re.rb = rb; re[oe] = function () { if (!this.isEnabled()) { return; } var jc = this.se(); if (jc) { var nd = new mboxScPluginFetcher(this.rb, this.s); jc.setFetcher(nd); jc.load(); } }; re.isEnabled = function () { return this.Sb && mboxFactoryDefault.isEnabled(); }; re.se = function () { var x = this.te(); var Yc = document.createElement('DIV'); return mboxFactoryDefault.create(x, [], Yc); }; re.te = function () { var ue = this.s.events && this.s.events.indexOf('purchase') != -1; return 'SiteCatalyst: ' + (ue ? 'purchase' : 'event'); }; }; return ge.loadModule(ne);};TNT.a.ve = function(we, xe, Ub, oc, Vb) { if (!xe.targetJSLoaded) { Vb.setCookie(Ub, true, oc); we.location.reload(); }};TNT.a.ye = function(we, Nc, b, H, Vb) { var ze = '_AT'; var Be = 50; var Ub = H.K; var oc = b.experienceManagerDisabledTimeout; var bd = b.experienceManagerTimeout; var u = b.experienceManagerPluginUrl; var Ce = we.setTimeout; var De = function(Ee){}; var Fe = function(Ee){ Ce(function() {we[ze].applyWhenReady(Ee);}, Be); }; if (ze in we) { return; } we[ze] = {}; if (Vb.getCookie(Ub) !== 'true') { Nc.write('<scr' + 'ipt src="' + u + '"><\/sc' + 'ript>'); we[ze].applyWhenReady = Fe; Ce(function() { TNT.a.ve(we, we[ze], Ub, oc, Vb); }, bd); } else { we[ze].applyWhenReady = De; }};mboxVizTargetUrl = function(x ) { if (!mboxFactoryDefault.isEnabled()) { return; } var c = TNT.a.c; var P = TNT.a.L.P; var rb = TNT.a.b.clientCode; var zc = new Date(); var Ge = zc.getTimezoneOffset() * P; var pb = mboxFactoryDefault.getUrlBuilder().clone(); pb.setBasePath('/m2/' + rb + '/viztarget'); pb.addParameter(c.x, x); pb.addParameter(c.y, 0); pb.addParameter(c.j, mboxFactoryDefault.getMboxes().length() + 1); pb.addParameter(c.A, zc.getTime() - Ge); pb.addParameter(c.d, mboxGenerateId()); pb.addParameter(c.z, mboxFactoryDefault.isDomLoaded()); var sb = mboxShiftArray(arguments); if (sb && sb.length > 0) { pb.addParameters(sb); } mboxFactoryDefault.wc(pb); mboxFactoryDefault.xc(pb, x); mboxFactoryDefault.setVisitorIdParameters(pb, x); return pb.buildUrl();};TNT.createGlobalMbox = function () { var He = TNT.getGlobalMboxName(); var Ie = TNT.getGlobalMboxLocation(); var Je; if (!Ie) { Ie = "mbox-" + He + "-" + mboxGenerateId(); Je = document.createElement("div"); Je.className = "mboxDefault"; Je.id = Ie; Je.style.visibility = "hidden"; Je.style.display = "none"; var Ke = setInterval(function(){ if (document.body) { clearInterval(Ke); document.body.insertBefore(Je, document.body.firstChild); } }, TNT.a.b.bodyPollingTimeout); } var Le = TNT.getTargetPageParameters(); var Me = mboxFactoryDefault.create(He, Le, Ie); if (Me && mboxFactoryDefault.isEnabled()) { Me.setFetcher(new TNT.a.ob()); Me.load(); }};TNT.a.Ne = function(Vb, Oe, Pe) { return mboxGetPageParameter(Oe, true) || Vb.getCookie(Pe);};TNT.a.Qe = function(b) { setTimeout(function() { if (typeof mboxDebugLoaded == 'undefined') { alert('Could not load the remote debug.\nPlease check your connection to ' + b.companyName + ' servers'); } }, 60*60); var u = b.adminUrl + '/mbox/mbox_debug.jsp?mboxServerHost=' + b.serverHost + '&clientCode=' + b.clientCode; document.write('<' + 'scr' + 'ipt src="' + u + '"><' + '\/scr' + 'ipt>');};TNT.a.Re = function(b) { var T = TNT.a.T; return !T.U(b) && !T.W(b) && T.bb(b);};TNT.a.Se = function(b, Te) { var T = TNT.a.T; var Ue; var Ve; var V; for (var nb in b) { Ue = b.hasOwnProperty(nb) && Te.hasOwnProperty(nb); V = b[nb]; Ve = !T.U(V) && !T.W(V); if (Ue && Ve) { Te[nb] = V; } } return Te;};TNT.a.We = function() { var b = window.targetGlobalSettings; if (TNT.a.Re(b)) { TNT.a.b = TNT.a.Se(b, TNT.a.b); } var Ob = TNT.a.b.mboxVersion; var Xe = TNT.a.b.serverHost; var rb = TNT.a.b.clientCode; var M = TNT.a.L.M; var Oe = TNT.a.C.G; var Pe = TNT.a.H.G; if (typeof mboxVersion == 'undefined') { window.mboxFactories = new mboxMap(); window.mboxFactoryDefault = new mboxFactory(Xe, rb, M); window.mboxVersion = Ob; } if (TNT.a.Ne(mboxFactoryDefault.getCookieManager(), Oe, Pe)){ TNT.a.Qe(TNT.a.b); }};TNT.a.We();(function(){ var b = TNT.a.b; var H = TNT.a.H; var Vb = mboxFactoryDefault.getCookieManager(); TNT.a.ye(window, document, b, H, Vb);}());

  targetPageParamsAll(true);

  if (TNT.isAutoCreateGlobalMbox()) {
    TNT.createGlobalMbox();
  }
}

//----------------------------------------------------------------------
// opt out
//----------------------------------------------------------------------
var s_optOut = document.cookie.match('(^|;) ?' + "adobe_optout" + '=([^;]*)(;|$)');
if (s_optOut != -1 && s_optOut != "" && s_optOut !== null) {
  document.write('<style>.' + 'mboxDefault' + ' { visibility:visible; }</style>');
  mboxCreate = function(Z) {
    return;
  }
  mboxUpdate = function(Z) {
    return;
  }
}

//----------------------------------------------------------------------
// demandbase
//----------------------------------------------------------------------
function db_tnt_cb(d) {
  if (!d) return '';
  try {
    var p = "";
    for (var key in d) {
      if (d.hasOwnProperty(key)) {
        var a = "profile." + key + "=" + d[key] + ",";
        p += a;
      }
    }
    p = p.split(",");
    var u = mboxFactoryDefault.getUrlBuilder();
    u.addParameters(p)
  } catch (e) {}
}
