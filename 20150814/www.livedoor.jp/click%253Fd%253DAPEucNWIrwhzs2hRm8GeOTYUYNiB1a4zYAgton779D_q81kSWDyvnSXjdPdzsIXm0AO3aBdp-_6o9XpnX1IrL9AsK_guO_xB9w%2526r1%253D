
(function(frameWindow, undefined) {


var _slice = [].slice;
var _guid = 1;
var _eventListeners = {};


var _extend = function() {
    var options, name, src, copy, copyIsArray, clone,
        target = arguments[0] || {},
        i = 1,
        length = arguments.length,
        deep = false;
    if (typeof target === 'boolean') {
        deep = target;
        target = arguments[i] || {};
        i++;
    }
    for ( ; i < length; i++) {
        if ((options = arguments[i]) != null) {
            for (name in options) {
                src = target[name];
                copy = options[name];
                if (target === copy) {continue;}
                copyIsArray = false;
                if (deep && copy && (ADventori.utils.isPlainObject(copy) || (copyIsArray = ADventori.utils.isArray(copy)))) {
                    clone = copyIsArray ? (ADventori.utils.isArray(src) ? src : []) : (ADventori.utils.isPlainObject(src) ? src : {});
                    target[name] = _extend(deep, clone, copy);
                } else if (copy !== undefined) {
                    target[name] = copy;
                }
            }
        }
    }
    return target;
};

var debug = {
    log: function(o) {debug.queue.push(['log', arguments, debug.stack.slice(0)]); if (window.console && typeof window.console.log == 'function') {window.console.log(o);}},
    error: function(o) {debug.queue.push(['error', arguments, debug.stack.slice(0)]); if (window.console && typeof window.console.error == 'function') {window.console.error(o);}},
    queue: [],
    stack: []
};


var ADventori = function() {
    if (!(this instanceof ADventori)) {return new ADventori();}
    this.conf = _extend(true, {}, ADventori.conf);
};

ADventori.fn = ADventori.prototype;
ADventori.data={"request":{"scheme":"http","hostname":"f19.adventori.com"},"params":{"clickTag":"http://adclick.g.doubleclick.net/aclk?sa=L&ai=C-dLQcYDNVb6SNaerlALKmZ6oCI2Oi_sF5Zr-x8gBwI23ARABIABg-6HrgugJggEXY2EtcHViLTY5ODg2NzY0MzExNTY4MjXIAQmoAwGYBACqBHNP0Jle_oyADy8uy1Zi_53kQUJcsnbsRyDri691S9U6nwNAwIOTPlv9Js8-YJiSXIS-FWJEzzHAk_qyg7Mnd7FzHc13BPLa16CWblv7FKv8DeJBKd8GCJh7rGj3xkZ3ksTmMBqEXAc8zDY5AGzbCIjQk0V8gAb9xJ62r4a0wJwBoAYh2AcA&num=1&sig=AOD64_11e_UNgmqlhGuhSruwWRVIu62uoQ&client=ca-pub-6988676431156825&adurl=http://bid.g.doubleclick.net/xbbe/creative/click%3Fd%3DAPEucNWIrwhzs2hRm8GeOTYUYNiB1a4zYAgton779D_q81kSWDyvnSXjdPdzsIXm0AO3aBdp-_6o9XpnX1IrL9AsK_guO_xB9w%26r1%3D","cachebuster":"ABAjH0gWrqArmlcgXPCzZ4UOD5eG","placementId":"Intermarche_AOD_FR032015_inf10kmHommeFemmesup56ans_Eprospect_300x250","format":null,"brandId":"14431620"},"size":{"width":300,"height":250},"placement":{"placementId":"Intermarche_AOD_FR032015_inf10kmHommeFemmesup56ans_Eprospect_300x250","placesSelectStrategy":"MAXIMUM","redirectToRetailerUrlClick":false,"externalLandingPageUrl":null,"utm":null,"maxPlaces":3,"itemsFilename":null,"explicitItemsIds":null,"nbRandomItems":0,"usePlaces":true,"useItems":false,"useCookies":false,"useLiveWeather":false,"useUserLocation":true,"useUserData":false,"displayFormat":"FLASH","size":{"width":300,"height":250},"displayTag":"[PROTOCOL]intermarchedrive.solution.weborama.fr/fcgi-bin/dispatch.fcgi?a.A=im&a.si=82&a.te=797&a.he=1&a.wi=1&a.hr=p&a.ra=[RANDOM]","clickTag":"http://intermarchedrive.solution.weborama.fr/fcgi-bin/dispatch.fcgi?a.A=cl&a.si=82&a.te=797&a.ra=[RANDOM]&g.lu=","clickPxl":null,"adUrl":"[PROTOCOL][HOSTNAME]/lp/dd/intermarche/Intermarche_AOD_FR032015/[SEGMENT]_[SIZE].swf","imgUrl":"[PROTOCOL][HOSTNAME]/lp/dd/intermarche/Intermarche_AOD_FR032015/[SEGMENT]_[SIZE].gif","html":null,"css":null},"track":{"tracker":{"type":"AdDisplay","campaignId":"Intermarche_AOD_FR032015","cartoucheId":"Intermarche_AOD_FR032015_inf10kmHommeFemmesup56ans_Eprospect_300x250","ui":"p4MoUEJHEeW02lPIkBpVMg","ip":"147.210.129.93","geoipAffiliationCityId":"2973495","geoipStatus":"2","context":"googleads.g.doubleclick.net|","clickTagDomaineName":"adclick.g.doubleclick.net","urlClick":"&format=300x250","mode":"multiple-3","affiliationCityId":"3031582","retailer_1":"11596","retailer_2":"11144","retailer_3":"11227","retailer_4":null,"impressionId":"a7832851-4247-11e5-b4da-53c8901a5532"},"trackPrintUrl":"/tracker/trackPrint","trackClickUrl":"/tracker/trackClick","uiHash":3058115004,"referer":"http://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-6988676431156825&output=html&h=250&slotname=9912853607&adk=2675956865&w=300&lmt=1439531121&flash=11.2.202&url=http%3A%2F%2Fwww.livedoor.com%2F&dt=1439531121734&bpp=3&bdt=4139&shv=r20150806&cbv=r20150720&saldr=sa&prev_slotnames=4103811407&correlator=3896787483426&frm=20&ga_vid=1991372372.1439531119&ga_sid=1439531121&ga_hid=42736937&ga_fc=0&u_tz=120&u_his=1&u_java=1&u_h=1080&u_w=1920&u_ah=1056&u_aw=1853&u_cd=24&u_nplug=7&u_nmime=82&dff=%E3%83%92%E3%83%A9%E3%82%AE%E3%83%8E%E8%A7%92%E3%82%B4%20pro%20w3&dfs=14&adx=60&ady=1334&biw=400&bih=300&eid=575144603%2C317150304&oid=3&rx=0&eae=0&fc=24&plat=1%3A9%2C8%3A8%2C9%3A8%2C16%3A32%2C17%3A32&brdim=%2C%2C67%2C24%2C1853%2C24%2C400%2C300%2C400%2C300&vis=1&rsz=%7C%7Co%7C&abl=CS&ppjl=f&pfx=0&fu=1024&bc=1&ifi=2&xpc=OnFPw3Ixyt&p=http%3A//www.livedoor.com&dtd=37","timestamp":1439531122517},"results":{"places":{"nbPlacesAll":1016,"nbPlacesInImpreciseArea":3,"nbPlacesInCatchmentArea":11,"nbPlacesInCityAffiliation":16,"impreciseAreaRadiusInKm":8.0,"catchmentAreaRadiusInKm":20.0,"cityAffiliation":{"geonameId":3031582,"latitude":44.83333,"longitude":-0.56667,"name":"Bordeaux","woeid":12724471,"country":"FR"},"places":[{"id":16872086,"gmLatitude":44.7784852,"gmLongitude":-0.589232000000038,"gmAddress":"Escrime de Gradignan, 141 Rue de la Croix de Monjous, 33170 Gradignan, France","gmGeocodingAccuracy":"APPROXIMATE","gmCity":"Gradignan","gmPostalCode":"33170","manualRepositioning":"NONE","name":"SOGOPE","shopBrand":"INTERMARCHE","shopGroup":"RÃ©giex Sud Ouest","phone":"05.56.89.61.19","street1":"AVENUE DE L'HIPPODROME","street2":"0","street3":"0","postalCode":"33170","city":"GRADIGNAN","country":"France","clientId":"11596","cityAffiliation":{"geonameId":3031582,"latitude":44.83333,"longitude":-0.56667,"name":"Bordeaux","woeid":12724471,"country":"FR"},"retailerInfoId":1033429,"brandOwner":true},{"id":16871143,"gmLatitude":44.8412015,"gmLongitude":-0.626748200000065,"gmAddress":"21 Rue AndrÃ© Maginot, 33200 Bordeaux, France","gmGeocodingAccuracy":"ROOFTOP","gmCity":"Bordeaux","gmPostalCode":"33200","manualRepositioning":"NONE","name":"CAPHY","shopBrand":"INTERMARCHE","shopGroup":"RÃ©giex Sud Ouest","phone":"05.56.42.03.28","street1":"21 RUE ANDRE MAGINOT","street2":"0","street3":"0","postalCode":"33200","city":"BORDEAUX","country":"France","clientId":"11144","cityAffiliation":{"geonameId":3031582,"latitude":44.83333,"longitude":-0.56667,"name":"Bordeaux","woeid":12724471,"country":"FR"},"retailerInfoId":1033427,"brandOwner":true},{"id":16871100,"gmLatitude":44.8069432,"gmLongitude":-0.573504400000047,"gmAddress":"235 Route de Toulouse, 33400 Talence, France","gmGeocodingAccuracy":"ROOFTOP","gmCity":"Talence","gmPostalCode":"33400","manualRepositioning":"NONE","name":"JANSELIN","shopBrand":"INTERMARCHE","shopGroup":"RÃ©giex Sud Ouest","phone":"05.56.04.66.70","street1":"235 ROUTE DE TOULOUSE","street2":"0","street3":"0","postalCode":"33400","city":"TALENCE","country":"France","clientId":"11227","cityAffiliation":{"geonameId":3031582,"latitude":44.83333,"longitude":-0.56667,"name":"Bordeaux","woeid":12724471,"country":"FR"},"retailerInfoId":1032829,"brandOwner":true}],"displayMode":"MULTIPLE"},"userLocation":{"boundingBox":{"minLatitude":44.73293924649526,"minLongitude":-0.6966793163610935,"maxLatitude":44.87665700594614,"maxLongitude":-0.49412063519225125},"latitude":44.8047981262207,"longitude":-0.5953999757766724,"incertitudeRadius":8000.0,"locale":"en_US","postalCodeByIp":"33400","cityByIp":"Talence","countryByIp":"FR"}}};

_extend(ADventori.data.request, {
    protocol: (ADventori.data.request.scheme + '://'),
    hostname: ADventori.data.request.hostname
});


_extend(ADventori, {

version: '2.0.0',

utils: {

extend: _extend,


isArray: Array.isArray || function(o) {
    return Object.prototype.toString.call(o) === '[object Array]';
},


isPlainObject: function(o) {
    if (!o || Object.prototype.toString.call(o) !== '[object Object]' || o.nodeType || o == o.window) {return false;}
    var hasOwn = Object.prototype.hasOwnProperty;
    try {if (o.constructor && !hasOwn.call(o, 'constructor') && !hasOwn.call(o.constructor.prototype, 'isPrototypeOf')) {return false;}} catch(e) {return false;}
    for (var key in o) {if (!hasOwn.call(o, key)) {return false;}}
    return true;
},


each: (function() {
function doEach(i, obj, fn, deep) {
    if ((typeof deep == 'function' ? deep.call(obj[i], i, obj[i], obj) : deep) && (ADventori.utils.isPlainObject(obj[i]) || ADventori.utils.isArray(obj[i]))) {
        ADventori.utils.each(obj[i], fn, deep);
    } else {
        return fn.call(obj[i], i, obj[i], obj);
    }
    return null;
}
return function(obj, fn, deep) {
    if (obj == null) {return;}
    var i;
    if (ADventori.utils.isArray(obj)) {
        for (i = 0; i < obj.length; i++) {
            if (doEach(i, obj, fn, deep) === false) {break;}
        }
    } else {
        for (i in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, i)) {
                if (doEach(i, obj, fn, deep) === false) {break;}
            }
        }
    }
    return obj;
};
})(),


map: function(obj, fn) {
    var value, res = [];
    ADventori.utils.each(obj, function(i) {
        if ((value = fn(obj[i], i, obj)) != null) {res.push(value);}
    });
    return Array.prototype.concat.apply([], res);
},


shuffle: function(o) {
    for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
    return o;
},


proxy: function(fn, ctx, args) {
    return (function() {return fn.apply(ctx || this, _slice.call(args || []).concat(_slice.call(arguments)));});
},


rand: function(n){n=n||2147483647; return Math.floor(Math.random()*n);},


time: function(){return new Date().getTime();},


setTimeout: function(fn, delay, debugStack, trackerType, trackerProps) {
    return setTimeout(function() {return ADventori.track.tryFn(fn, debugStack, trackerType, trackerProps);}, delay);
},


setInterval: function(fn, delay, debugStack, trackerType, trackerProps) {
    var intervalID = setInterval(function() {return ADventori.track.tryFn(fn, debugStack, trackerType, trackerProps, function() {clearInterval(intervalID);});}, delay);
    return intervalID;
},


param: function(params) {
    return ADventori.utils.map(params, function(value, key) {
        if (key != null && value != null) {
            return (encodeURIComponent(key) + '=' + encodeURIComponent(value));
        }
    }).join('&');
},


addQueryParams: function(url, params) {
    if (url && params) {
        var hashIndex = url.indexOf('#'), urlNoHash = hashIndex >= 0 ? url.slice(0, hashIndex) : url, hash = hashIndex >= 0 ? url.slice(hashIndex) : '';
        url = urlNoHash + (urlNoHash.indexOf('?') >= 0 ? '&' : '?') + (ADventori.utils.isPlainObject(params) ? ADventori.utils.param(params) : (params + '')) + hash;
    }
    return url;
}

},

track: {


getTrackerType: function(trackerType, defaultTrackerType) {
    return (typeof trackerType == 'string' ? trackerType : (trackerType ? defaultTrackerType : null));
},


tracker2params: function(tracker) {
    var params = {};
    ADventori.utils.each(tracker, function(key, value) {
        params['tk_' + key] = value;
    });
    return params;
},


url: function(trackerProps, params) {
    var url = ADventori.data.request.protocol +
        ADventori.data.request.hostname +
        ADventori.data.track.trackPrintUrl;
    var tracker = ADventori.data.track.tracker;
    tracker = _extend({}, tracker, trackerProps);
    return ADventori.utils.addQueryParams(url, _extend({}, ADventori.track.tracker2params(tracker), params));
},


urlNoop: function(trackerProps, params) {
    return ADventori.track.url(trackerProps, _extend({"noop": true}, params));
},


urlRedirect: function(trackerProps, redirectUrl, params) {
    return ADventori.track.url(_extend({}, trackerProps, {"urlClick": redirectUrl}), _extend({"redirect": true}, params));
},


urlRedirectStacked: function(trackerProps, redirectUrl, params) {
    return ADventori.track.url(trackerProps, params) + '&URL=' + redirectUrl;
},


urlShow: function(trackerType, trackerProps) {
    return trackerType ? ADventori.track.urlNoop(_extend({"type": trackerType, "urlClick": null, "clickTagDomaineName": null, "affiliationCityId": null, "retailer_1": null, "retailer_2": null, "retailer_3": null, "retailer_4": navigator.userAgent}, trackerProps)) : null;
},


urlClick: function(trackerType, trackerProps, redirectUrl) {
    return trackerType ? ADventori.track.urlRedirectStacked(_extend({"type": trackerType, "urlClick": null, "context": null, "clickTagDomaineName": null, "retailer_1": null, "retailer_2": null, "retailer_3": null, "retailer_4": null}, trackerProps), redirectUrl).replace(ADventori.data.track.trackPrintUrl, ADventori.data.track.trackClickUrl) : redirectUrl;
},


urlClickBis: function(trackerType, trackerProps) {
    return trackerType ? ADventori.track.urlNoop(_extend({"type": trackerType, "urlClick": null, "retailer_1": null, "retailer_2": null, "retailer_3": null, "retailer_4": navigator.userAgent}, trackerProps)) : null;
},


urlError: function(trackerType, trackerProps) {
    return ADventori.track.urlNoop(_extend({"type": trackerType || "AdError", "context": ADventori.data.track.referer, "affiliationCityId": null, "retailer_1": null, "retailer_2": null, "retailer_3": null, "retailer_4": navigator.userAgent}, trackerProps));
},


error: function(e, trackerType, trackerProps) {
    try {
        document.createElement('img').src = ADventori.track.urlError(trackerType, _extend({"urlClick": ((e && e.name ? ((e.name||'') + ': ' + (e.message||'')) : e) + '@' + debug.stack.join('@')).slice(0, 1000)}, trackerProps));
        debug.error.apply(null, arguments);
    } catch(_e) {}
},


call: function(fn, debugStack) {
    debug.stack.push(debugStack);
    var result = fn();
    debug.stack.pop();
    return result;
},


tryFn: function(fn, debugStack, trackerType, trackerProps, fnCatch) {
    var debugStackCopy = debug.stack.slice(0);
    try {
        return ADventori.track.call(fn, debugStack);
    } catch(e) {
        ADventori.track.error(e, trackerType, trackerProps);
        if (fnCatch) {fnCatch();}
    }
    debug.stack = debugStackCopy;
}

}

});


ADventori.track.tryFn(function() {
    "object"!=typeof JSON&&(JSON={}),function(){"use strict";function f(t){return 10>t?"0"+t:t}function quote(t){return escapable.lastIndex=0,escapable.test(t)?'"'+t.replace(escapable,function(t){var e=meta[t];return"string"==typeof e?e:"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+t+'"'}function str(t,e){var r,n,o,f,u,p=gap,a=e[t];switch(a&&"object"==typeof a&&"function"==typeof a.toJSON&&(a=a.toJSON(t)),"function"==typeof rep&&(a=rep.call(e,t,a)),typeof a){case"string":return quote(a);case"number":return isFinite(a)?a+"":"null";case"boolean":case"null":return a+"";case"object":if(!a)return"null";if(gap+=indent,u=[],"[object Array]"===Object.prototype.toString.apply(a)){for(f=a.length,r=0;f>r;r+=1)u[r]=str(r,a)||"null";return o=0===u.length?"[]":gap?"[\n"+gap+u.join(",\n"+gap)+"\n"+p+"]":"["+u.join(",")+"]",gap=p,o}if(rep&&"object"==typeof rep)for(f=rep.length,r=0;f>r;r+=1)"string"==typeof rep[r]&&(n=rep[r],o=str(n,a),o&&u.push(quote(n)+(gap?": ":":")+o));else for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&(o=str(n,a),o&&u.push(quote(n)+(gap?": ":":")+o));return o=0===u.length?"{}":gap?"{\n"+gap+u.join(",\n"+gap)+"\n"+p+"}":"{"+u.join(",")+"}",gap=p,o}}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(){return this.valueOf()});var cx,escapable,gap,indent,meta,rep;"function"!=typeof JSON.stringify&&(escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},JSON.stringify=function(t,e,r){var n;if(gap="",indent="","number"==typeof r)for(n=0;r>n;n+=1)indent+=" ";else"string"==typeof r&&(indent=r);if(rep=e,e&&"function"!=typeof e&&("object"!=typeof e||"number"!=typeof e.length))throw Error("JSON.stringify");return str("",{"":t})}),"function"!=typeof JSON.parse&&(cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,JSON.parse=function(text,reviver){function walk(t,e){var r,n,o=t[e];if(o&&"object"==typeof o)for(r in o)Object.prototype.hasOwnProperty.call(o,r)&&(n=walk(o,r),void 0!==n?o[r]=n:delete o[r]);return reviver.call(t,e,o)}var j;if(text+="",cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(t){return"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})),/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}();
}, 'json2', 'AdErrorEnv');

ADventori.track.tryFn(function() {


_extend(ADventori, {

env: {
    ua: {
        ie: navigator.userAgent.indexOf('MSIE') != -1 || navigator.appVersion.indexOf('Trident/') != -1,
        ieVersion: parseFloat((navigator.userAgent.match(/MSIE\s([^;]*)/) || [])[1]),
        ieMinVersion: 8,
        ieMobile: /IEMobile|XBLWP7/i.test(navigator.userAgent),
        safari: navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1
    },
    os: {
        windows: /windows|win32/i.test(navigator.userAgent),
        mac: /macintosh/i.test(navigator.userAgent),
        linux: /linux/i.test(navigator.userAgent),
        android: /android/i.test(navigator.userAgent),
        ios: /iPad|iPod|iPhone/i.test(navigator.userAgent)
    }
},

dom: {


addEventListener: function(el, type, fn) {
    el.ADventori_guid = el.ADventori_guid || _guid++;
    fn.ADventori_guid = fn.ADventori_guid || _guid++;
    var eventListenerId = [type, el.ADventori_guid, fn.ADventori_guid].join('_');
    if (!_eventListeners[eventListenerId]) {
        var eventListener = _eventListeners[eventListenerId] = function(e) {ADventori.track.tryFn(ADventori.utils.proxy(fn, el, [e || window.event].concat(_slice.call(arguments, 1))), 'event_' + type);};
        if (el.addEventListener) {
            el.addEventListener(type, eventListener, false);
        } else if (el.attachEvent) {
            el.attachEvent('on' + type, eventListener);
        }
    }
},

removeEventListener: function(el, type, fn) {
    var eventListenerId = [type, el.ADventori_guid, fn.ADventori_guid].join('_');
    var eventListener = _eventListeners[eventListenerId];
    if (eventListener) {
        if (el.removeEventListener) {
            el.removeEventListener(type, eventListener, false);
        } else if (el.detachEvent) {
            el.detachEvent('on' + type, eventListener);
        }
        _eventListeners[eventListenerId] = null;
    }
},


createElement: function(doc, tagName, props) {
    return _extend(doc.createElement(tagName), props);
},


getDocument: function(el) {
    try {
        return el.ownerDocument;
    } catch(e) {
        ADventori.track.error(e, 'AdErrorDom');
    }
},


getWindow: function(doc) {
    try {
        return (doc.defaultView || doc.parentWindow);
    } catch(e) {
        ADventori.track.error(e, 'AdErrorDom');
    }
},


getHtml: function(tagName, attrs, innerHTML) {
    var html = [];
    html.push('<' + tagName);
    ADventori.utils.each(attrs, function(key, value) {
        html.push(' ' + key + (value != null ? ('="' + (value + '').replace(/"/g, '&quot;') + '"') : ''));
    });
    html.push(innerHTML !== null ? ('>' + (innerHTML != undefined ? innerHTML : '') + '<' + '/' + tagName + '>') : (' />'));
    return html.join('');
},


getScript: function(doc, url) {
    try {
        var debugStackCopy = debug.stack.slice(0);
        var head = doc.head || doc.getElementsByTagName('head')[0] || doc.documentElement,
            sc = doc.getElementsByTagName('script')[0],
            s = ADventori.dom.createElement(doc, 'script', {onerror: function() {debug.queue.push(['onerror', arguments, debugStackCopy]);}, async: true, charset: 'utf-8', src: url});
        if (sc) {sc.parentNode.insertBefore(s, sc);}
        else if (head) {head.appendChild(s);}
        else {throw ({name: 'getScript', message: [doc, head, sc, s, url].join(',')});}
        debug.queue.push(['getScript', arguments, debugStackCopy]);
    } catch(e) {
        ADventori.track.error(e, 'AdErrorDom');
    }
},


writeScript: function(doc, url) {
    try {
        var debugStackCopy = debug.stack.slice(0);
        doc.write(ADventori.dom.getHtml('script', {onerror: "ADventori.debug.queue.push(['onerror', arguments, " + JSON.stringify(debug.stack) + "]);", charset: 'utf-8', src: url}));
        debug.queue.push(['writeScript', arguments, debugStackCopy]);
    } catch(e) {
        ADventori.track.error(e, 'AdErrorDom');
    }
},


firePixel: function(url) {
    try {
        var debugStackCopy = debug.stack.slice(0);
        var img = document.createElement('img');
        img.onerror = function() {debug.queue.push(['onerror', arguments, debugStackCopy]);};
        img.src = url;
        debug.queue.push(['firePixel', arguments, debugStackCopy]);
    } catch(e) {
        ADventori.track.error(e, 'AdErrorDom');
    }
},


firePixels: function(urls) {
    ADventori.utils.each([].concat(urls || []), function(i, value) {
        ADventori.dom.firePixel(value);
    });
},

setOrWriteHtml: function(doc, el, html, noWrite) {
    try {
        if (html) {
            if (el) {
                el.innerHTML = html;
            } else if (doc && !noWrite) {
                doc.write(html);
            } else {
                throw ({name: 'setOrWriteHtml', message: [doc, el, html.slice(0, 500), noWrite].join(',')});
            }
        }
    } catch(e) {
        ADventori.track.error(e, 'AdErrorDom');
    }
},

appendOrWriteHtml: function(doc, el, tagName, attrs, html, noWrite) {
    try {
        if (html) {
            if (el) {
                el.appendChild(ADventori.dom.createElement(doc, tagName, _extend({}, attrs, {innerHTML: html})));
            } else if (doc && !noWrite) {
                doc.write(ADventori.dom.getHtml(tagName, attrs, html));
            } else {
                throw ({name: 'appendOrWriteHtml', message: [doc, el, tagName, attrs, html.slice(0, 500), noWrite].join(',')});
            }
        }
    } catch(e) {
        ADventori.track.error(e, 'AdErrorDom');
    }
},


open: function(url, win) {
    try {
        if (!url) {throw ({name: 'open', message: 'NULL_URL'});}
        if (url.charAt(0) == '#') {return 'test';}
        win = win || window;
        var useWindowOpen = typeof win.open == 'function' || !(win.constructor && win.constructor.prototype && typeof win.constructor.prototype.open == 'function');
        var newWin = useWindowOpen ? win.open(url, '_blank') : win.constructor.prototype.open.apply(win, [url, '_blank']);
        if (!newWin) {win.top.location.href = url;}
        return (newWin != null && newWin == newWin.window ? 'window' : (newWin + ''));
    } catch(e) {
        ADventori.track.error(e, 'AdErrorOpen');
        return 'error';
    }
},


ready: function(win, fn) {
    var doc = win.document;
    function readyFn() {
        if (!doc.body) {return ADventori.utils.setTimeout(readyFn, 0, 'ready');}
        fn();
    }
    function completed() {
        if (doc.addEventListener || event.type === 'load' || doc.readyState === 'complete') {
            ADventori.dom.removeEventListener(doc, doc.addEventListener ? 'DOMContentLoaded' : 'readystatechange', completed);
            ADventori.dom.removeEventListener(win, 'load', completed);
            readyFn();
        }
    }
    if (doc.readyState === 'complete') {
        ADventori.utils.setTimeout(readyFn, 0, 'ready');
    } else {
        ADventori.dom.addEventListener(doc, doc.addEventListener ? 'DOMContentLoaded' : 'readystatechange', completed);
        ADventori.dom.addEventListener(win, 'load', completed);
    }
}

},

ext: {


exports: function(ad) {
    try {
        var conf = ad.conf;
        var win = conf.dom['window'];
        var globalADventori = win.ADventori = win.ADventori || {};
        globalADventori.ads = globalADventori.ads || {};
        globalADventori.ads[conf['id']] = ad;
        globalADventori.exec = globalADventori.exec || ADventori.utils.proxy(ADventori.ext.exec, globalADventori);
        if (!globalADventori.onmessage && conf['displayFormat'] == 'HTML') {
            globalADventori.onmessage = ADventori.utils.proxy(ADventori.ext.onmessage, globalADventori);
            ADventori.dom.addEventListener(win, 'message', globalADventori.onmessage);
        }
        globalADventori.debug = debug;
        
        win.clickAdVentori = function() {ADventori.track.tryFn(ADventori.utils.proxy(conf['clickAdVentori'], ad, arguments), 'clickAdVentori', 'AdErrorClick');};
    } catch(e) {
        ADventori.track.error(e, 'AdErrorDom');
    }
},


exec: function(data) {
    return ADventori.track.tryFn(ADventori.utils.proxy(function() {
        var ad = this.ads[data.id];
        return ad.exec.apply(ad, arguments);
    }, this, arguments), 'exec0_' + (data && (data.id + '_' + data.cmd)), 'AdErrorExec');
},


onmessage: function(e) {
    ADventori.track.tryFn(ADventori.utils.proxy(function() {
        var protocol = 'ADventori:';
        if (!(typeof e.data === 'string' && e.data.slice(0, protocol.length) === protocol)) {return;}
        var data = JSON.parse(e.data.slice(protocol.length)),
            ad = this.ads[data.id],
            conf = ad.conf;
        if (!(e.origin === conf['targetOrigin'] && e.source === conf.dom['document'].getElementById(conf['targetId']).contentWindow)) {throw new Error('INVALID_MESSAGE');}
        this.exec(data);
    }, this, arguments), 'message_' + (e && e.origin), 'AdErrorMessage');
},


cmds: {
    "error": function() {return ADventori.track.error.apply(this, arguments);},
    "open": function() {return ADventori.dom.open.apply(this, arguments);},
    "click": function() {return this.onclick.apply(this, [this.conf].concat(_slice.call(arguments)));}
}

},

run: {


start: function() {
    if (ADventori._conf.getValue(ADventori.conf.run['async'], this, arguments, 'conf.async')) {
        ADventori.dom.ready(window, ADventori.utils.proxy(ADventori.run.run, this, arguments));
    } else {
        ADventori.utils.proxy(ADventori.run.run, this, arguments)();
    }
},

run: function() {
    ADventori.track.tryFn(ADventori.utils.proxy(ADventori.run.before, this, arguments), 'before');
    ADventori.track.tryFn(ADventori.utils.proxy(ADventori.run.runAds, this, arguments), 'runAds');
    ADventori.track.tryFn(ADventori.utils.proxy(ADventori.run.after, this, arguments), 'after');
},

runAds: function() {
    var args = arguments;
    ADventori.ads = ADventori.ads || [new ADventori()];
    ADventori.utils.each(ADventori.ads, function(i, ad) {
        ADventori.track.tryFn(ADventori.utils.proxy(ad.start, ad, args), 'runAd_' + i);
    });
},


before: function(){},
after: function(){}

},


start: function() {
    ADventori.track.tryFn(ADventori.utils.proxy(ADventori.run.start, this, arguments), 'start');
},

_conf: {
    
    getValue: function(value, ctx, args, debugStack) {
        return (typeof value == 'function' ? ADventori.track.tryFn(ADventori.utils.proxy(value, ctx, args), debugStack) : value);
    },

    useMacros: {
        "altUrl": true,
        "creativeUrl": true,
        "displayTag": true,
        "clickTag": true,
        "clickPxl": true
    }
},

conf: {
    "placement": ADventori.data.placement["placementId"],
    "displayFormat": ADventori.data.placement["displayFormat"],
    "displayTag": ADventori.data.placement["displayTag"],
    "clickTag": ADventori.data.placement["clickTag"],
    "clickPxl": ADventori.data.placement["clickPxl"],
    "creativeUrl": ADventori.data.placement["adUrl"],
    "altUrl": ADventori.data.placement["imgUrl"],
    "css": ADventori.data.placement["css"],
    "html": ADventori.data.placement["html"],
    "size": ADventori.data.size,
    "displayAlt": [],
    "altParams": {}, "creativeParams": {}, "extraParams": {},
    "altAttrs": {}, "htmlAttrs": {}, "flashAttrs": {}, "flashParamAttrs": {},
    "macros": {},
    "dom": {},
    "run": {
        "autoStart": true,
        "async": false
    },
    "items": {
        "param": "items", "maxTotal": 4, "utm": ADventori.data.placement["utm"],
        "_items": [], "_scenarios": {}, _enabled: false
    },
    "track": {
        "AdShow": true,
        "AdClick": true,
        "AdClickBis": true,
        "AdView": false,
        "viewable": {
            "thresholds": [{"area": 50, "duration": 1}],
            "tick": 100,
            "isViewable": function(conf) {var maxIndex = -1; return function(i, threshold) {if (i > maxIndex) {maxIndex = i; return true;} return false;};},
            "isViewableTag": function(conf) {var maxIndex = -1; return function(i, threshold) {if (i > maxIndex) {maxIndex = i; return true;} return false;};},
            "viewTag": ADventori.data.placement["viewTag"],
            "noviewTag": ADventori.data.placement["noviewTag"]
        }
    },
    "_track": {
        "AdShow": "AdShow",
        "AdClick": "AdClick",
        "AdClickBis": "AdClickBis",
        "AdView": "AdView"
    },
    
    "clickAdVentori": function(conf) {return function() {var open = this.exec({id: conf['id'], cmd: 'open', args: [this.clickTagStacked(conf)]}); this.exec({id: conf['id'], cmd: 'click', args: [{"open": open}]});};}
},

macros: {
    delimiters: {start: "[", end: "]"},
    defaults: {
        "RANDOM": function() {return ADventori.utils.rand();}, "RANDOM_CONST": ADventori.utils.rand(),
        "TIMESTAMP": function() {return ADventori.utils.time();}, "TIMESTAMP_CONST": ADventori.utils.time(),
        "PROTOCOL": function() {return ADventori.data.request.protocol;}, "HOSTNAME": function() {return ADventori.data.request.hostname;},
        "WIDTH": function(conf) {conf = conf || ADventori.conf; return conf['size'].width;}, "HEIGHT": function(conf) {conf = conf || ADventori.conf; return conf['size'].height;},
        "SIZE": function(conf) {conf = conf || ADventori.conf; return conf['size'].width+'x'+conf['size'].height;},
        "PLACEMENT": function(conf) {conf = conf || ADventori.conf; return conf['placement'];}
    },
    viewable: {
        "VIEWABLE_AREA": function(conf, threshold) {return threshold.area;},
        "VIEWABLE_DURATION": function(conf, threshold) {return threshold.duration;}
    },
    
    replace: function(str, macros, fnArgs) {
        var self = this, args = arguments;
        if (ADventori.utils.isArray(str)) {
            return ADventori.utils.map(str, function(value) {
                return ADventori.macros.replace.apply(self, [value].concat(_slice.call(args, 1)));
            });
        }
        if (typeof str == 'string') {
            ADventori.utils.each(_extend({}, ADventori.macros.defaults, ADventori.conf.macros, macros), function(key, value) {
                var macro = ADventori.macros.delimiters.start + key + ADventori.macros.delimiters.end;
                var index = 0;
                while (value != null && macro.length > 0 && (index = str.indexOf(macro, index)) >= 0) {
                    var replacement = ADventori._conf.getValue(value, self, fnArgs, 'macros.replace.' + key) + '';
                    str = str.replace(macro, replacement);
                    index += replacement.length;
                }
            });
        }
        return str;
    }
}

});


_extend(ADventori.fn, {

adTypes: {ALT: 'alt', FLASH: 'flash', HTML: 'html'},


call: function(fnName, args, fn) {
    return ADventori.track.call(ADventori.utils.proxy(fn || this[fnName], this, args), fnName);
},


tryFn: function(fnName, args, fn, trackerType, trackerProps, fnCatch) {
    return ADventori.track.tryFn(ADventori.utils.proxy(fn || this[fnName], this, args), fnName, trackerType, trackerProps, fnCatch);
},


exports: function(conf) {
    ADventori.ext.exports(this);
},


exec: function(data) {
    return ADventori.track.tryFn(ADventori.utils.proxy(function() {
        debug.queue.push(['exec', arguments, debug.stack.slice(0)]);
        var cmd = data.cmd,
            args = data.args;
        var fn = typeof cmd == 'function' ? cmd : (ADventori.ext.cmds[cmd] || this[cmd] || (function() {throw new Error('INVALID_COMMAND');})());
        return ADventori.track.tryFn(ADventori.utils.proxy(fn, this, args), 'exec2_' + (typeof cmd == 'function' ? cmd.name : cmd), 'AdErrorExec');
    }, this, arguments), 'exec1_' + (data && (data.id + '_' + data.cmd)), 'AdErrorExec');
},


start: function() {
    this.tryFn('run', [this.conf].concat(_slice.call(arguments)));
},

run: function(conf) {
    this.tryFn('applyConf', arguments);
    this.tryFn('exports', arguments);
    this.tryFn('displayCss', arguments);
    this.tryFn('displayHtml', arguments);
    this.tryFn('displayAdOrAlt', arguments);
    this.tryFn('trackShow', arguments);
    this.tryFn('trackViewable', arguments);
    this.tryFn('displayTag', [conf['displayTag']], ADventori.dom.firePixels);
},


applyConf: function(conf) {
    var self = this, args = arguments;
    
    ADventori.utils.each(conf, function(key, value, obj) {obj[key] = ADventori._conf.getValue(value, self, args, 'conf.' + key);}, function(key, value, obj) {return key != 'macros' && key != 'items';});
    
    ADventori.utils.each(ADventori._conf.useMacros, function(key, value, obj) {if (value) {conf[key] = ADventori.macros.replace(conf[key], conf.macros, [conf]);}});
    
    _extend(conf.track, {
        "AdShow": ADventori.track.getTrackerType(conf.track['AdShow'], conf._track['AdShow']),
        "AdClick": ADventori.track.getTrackerType(conf.track['AdClick'], conf._track['AdClick']),
        "AdClickBis": ADventori.track.getTrackerType(conf.track['AdClickBis'], conf._track['AdClickBis']),
        "AdView": ADventori.track.getTrackerType(conf.track['AdView'], conf._track['AdView'])
    });
    
    conf['id'] = conf['id'] || (ADventori.version + Math.random()).replace(/\D/g, '');
    conf.dom['documentCss'] = conf.dom['documentCss'] || ((conf.dom['elementCss'] && ADventori.dom.getDocument(conf.dom['elementCss'])) || document);
    conf.dom['documentHtml'] = conf.dom['documentHtml'] || ((conf.dom['elementHtml'] && ADventori.dom.getDocument(conf.dom['elementHtml'])) || document);
    conf.dom['document'] = conf.dom['document'] || ((conf.dom['element'] && ADventori.dom.getDocument(conf.dom['element'])) || document);
    conf.dom['window'] = conf.dom['window'] || (ADventori.dom.getWindow(conf.dom['document']) || window);
    var originLocation = conf.dom['window'].location;
    var targetUrl = conf['creativeUrl'];
    _extend(conf, {
        "origin": conf['origin'] || (originLocation.origin || (originLocation.href && originLocation.href.slice(0, originLocation.href.indexOf('/', 9)))),
        "targetOrigin": conf['targetOrigin'] || (targetUrl && targetUrl.slice(0, targetUrl.indexOf('/', 9))),
        "targetId": conf['targetId'] || ('ADventori_' + conf['id'])
    });
    this.tryFn('extendConf', arguments);
    return conf;
},

extendConf: function(conf) {},


clickTagStacked: function(conf) {
    var paramsClickTag = ADventori.data.params.URL || ADventori.data.params.clickTag;
    var clickTag = (paramsClickTag || '') + (conf['clickTag'] || '');
    if (clickTag.charAt(0) == '#') {return clickTag;}
    return ADventori.track.urlClick(conf.track['AdClick'], {"urlClick": null}, clickTag);
},


confParams: function(conf) {
    return {
        "version": ADventori.version,
        "id": conf['id'],
        "origin": conf['origin'],
        "clickTag": this.clickTagStacked(conf),
        "clickPxl": conf['clickPxl'],
        "request": ADventori.data.request,
        "track": {
            
            "urlClick": ADventori.track.urlClickBis(conf.track['AdClickBis'], {"urlClick": conf['adUrl']})
        }
    };
},


displayCss: function(conf) {
    ADventori.dom.appendOrWriteHtml(conf.dom['documentCss'], conf.dom['elementCss'], 'style', null, conf['css'], conf.run['async']);
},


displayHtml: function(conf) {
    ADventori.dom.setOrWriteHtml(conf.dom['documentHtml'], conf.dom['elementHtml'], conf['html'], conf.run['async']);
},


displayAdOrAlt: function(conf) {
    conf['displayAlt'] = ADventori.utils.map([].concat(ADventori.data.params._alt || conf['displayAlt'] || []), function(value) {if (value) {return value;}});
    if (conf['displayAlt'].length > 0) {
        conf['altParams'] = _extend(conf['altParams'], {
            "_stat_alt": ADventori.utils.map(conf['displayAlt'], function(value) {return encodeURIComponent(value);}).join('|')
        });
        this.call('displayAlt', arguments);
    } else {
        this.call('displayAd', arguments);
    }
},


displayAlt: function(conf) {
    conf['adType'] = this.adTypes.ALT;
    conf['adUrl'] = ADventori.utils.addQueryParams(conf['altUrl'], conf['altParams']);
    var cssText = 'width:' + conf['size'].width + 'px; height:' + conf['size'].height + 'px; margin:0; padding:0; border:0;';
    var clickTag = this.clickTagStacked(conf), testClickTag = (clickTag.charAt(0) == '#');
    var adHtml = ADventori.dom.getHtml('a', {href: clickTag, target: "_blank", onclick: "ADventori.exec({id: '" + conf['id'] + "', cmd: 'click', args: [{'open': '" + (testClickTag ? "test" : "a") + "'}]});" + (testClickTag ? "return false;" : ""), style: cssText}, ADventori.dom.getHtml('img', _extend({onerror: "ADventori.debug.queue.push(['onerror', arguments, " + JSON.stringify(debug.stack) + "]);", src: conf['adUrl'], style: cssText, id: conf['targetId']}, conf['altAttrs']), null));
    ADventori.dom.setOrWriteHtml(conf.dom['document'], conf.dom['element'], adHtml, conf.run['async']);
}

});

_extend(ADventori.fn, {


trackShow: function(conf) {
    if (conf.track['AdShow']) {ADventori.dom.firePixel(ADventori.track.urlShow(conf.track['AdShow'], {"urlClick": conf['adUrl']}));}
},


trackClick: function(conf, params) {
    params = params || {};
    if (conf.track['AdClickBis']) {ADventori.dom.firePixel(ADventori.track.urlClickBis(conf.track['AdClickBis'], {"urlClick": conf['adUrl'], "retailer_1": params["item"] && params["item"].id, "retailer_3": params["open"]}));}
}

});

_extend(ADventori.fn, {


onclick: function(conf) {
    this.tryFn('trackClick', arguments);
    this.tryFn('clickPxl', [conf['clickPxl']], ADventori.dom.firePixels);
    this.tryFn('click', arguments, null, 'AdErrorClick');
},


click: function(){},


initData: function(){}

});

_extend(ADventori.env, {
    flash: {
        minVersion: 9,
        version: ADventori.track.tryFn(function() {
            var result;
            var n = navigator;
            function d(c) {c = c.match(/[\d]+/g); if (c) {result = c[0];}}
            if (n.plugins && n.plugins.length) {
                var e = n.plugins['Shockwave Flash'];
                e && e.description && d(e.description);
            } else if (n.mimeTypes && n.mimeTypes.length) {
                var f = n.mimeTypes['application/x-shockwave-flash'];
                (f && f.enabledPlugin) && d(f.enabledPlugin.description);
            } else {
                try {d(new ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version'));}catch(h){}
            }
            return parseFloat(result);
        }, 'flashVersion', 'AdErrorEnv')
    }
});

_extend(ADventori.fn, {


displayAd: function(conf) {
    conf['adType'] = this.adTypes.FLASH;
    conf['adUrl'] = ADventori.utils.addQueryParams(conf['creativeUrl'], conf['creativeParams']);
    var allParams = {"conf": this.confParams(conf), "data": _extend({}, conf['extraParams'], conf['creativeParams'])};
    var flashParamAttrs = _extend({
        "movie": conf['adUrl'],
        "wmode": "opaque",
        "allowscriptaccess": "always",
        "flashvars": ADventori.utils.param({"flashvars": JSON.stringify(allParams)})
    }, conf['flashParamAttrs']);
    var flashParamHtml = ADventori.utils.map(flashParamAttrs, function(value, key) {
        return ADventori.dom.getHtml('param', {name: key, value: value}, null);
    }).join('');
    
    var adHtml = ADventori.dom.getHtml('object', _extend({type: "application/x-shockwave-flash", width: conf['size'].width, height: conf['size'].height, name: conf['targetId'], id: conf['targetId'], onmouseenter: "ADventori.exec({id: '" + conf['id'] + "', cmd: 'exports'});"}, ADventori.env.ua.ie ? {} : {data: conf['adUrl']}, conf['flashAttrs']), flashParamHtml);
    ADventori.dom.setOrWriteHtml(conf.dom['document'], conf.dom['element'], adHtml, conf.run['async']);
}

});

ADventori.conf.displayAlt.push(function() {if (!ADventori.env.flash.version || ADventori.env.flash.version < ADventori.env.flash.minVersion) {return 'NO_FLASH(flash=' + ADventori.env.flash.version + ')';}});
ADventori.conf.displayAlt.push(function() {if (ADventori.env.ua.safari && ADventori.env.os.mac) {return 'SAFARI_MAC';}});

_extend(ADventori.track, {

viewable: {

frameModes: {TOP:'top', FRIENDLY:'friendly', NESTED:'nested', CROSSORIGIN:'crossorigin'},

getContext: function(win) {
    var frameModes = ADventori.track.viewable.frameModes;
    try {
        var currentWin, nbNested, nbNestedFriendly;
        for (nbNested = 0, currentWin = win; currentWin !== win.top; currentWin = currentWin.parent) {nbNested++;}
        for (nbNestedFriendly = 0, currentWin = win; currentWin !== win.top; currentWin = currentWin.parent) {(currentWin.parent.location.href); nbNestedFriendly++;}
    } catch(e) {}
    return {
        sfAPI: (win.$sf && win.$sf.ext) || win.sfAPI,
        frameMode: (nbNested === 0 && nbNestedFriendly === 0) ? frameModes.TOP : ((nbNested === 1 && nbNestedFriendly === 1) ? frameModes.FRIENDLY : (nbNested === nbNestedFriendly ? frameModes.NESTED : frameModes.CROSSORIGIN)),
        nbNested: nbNested,
        nbNestedFriendly: nbNestedFriendly
    };
},

inViewRatio: function(win, el) {
    var elRect = el.getBoundingClientRect();
    var winRect = {
        left: 0,
        top: 0,
        right: win.innerWidth || win.document.documentElement.clientWidth || win.document.documentElement.offsetWidth,
        bottom: win.innerHeight || win.document.documentElement.clientHeight || win.document.documentElement.offsetHeight
    };
    var viewableRect = {
        left: Math.max(elRect.left, winRect.left),
        top: Math.max(elRect.top, winRect.top),
        right: Math.min(elRect.right, winRect.right),
        bottom: Math.min(elRect.bottom, winRect.bottom)
    };
    var screenLeft = -(win.screenX || win.screenLeft || 0),
        screenTop = -((win.screenY || win.screenTop || 0) + (win.outerHeight && win.innerHeight ? win.outerHeight - win.innerHeight : 0)),
    screenRect = {
        left: screenLeft,
        top: screenTop,
        right: screenLeft + screen.availWidth,
        bottom: screenTop + screen.availHeight
    };
    if (screenRect.right > 0 && screenRect.bottom > 0) {
        viewableRect = {
            left: Math.max(viewableRect.left, screenRect.left),
            top: Math.max(viewableRect.top, screenRect.top),
            right: Math.min(viewableRect.right, screenRect.right),
            bottom: Math.min(viewableRect.bottom, screenRect.bottom)
        };
    }
    return ((Math.max(viewableRect.right - viewableRect.left, 0) * Math.max(viewableRect.bottom - viewableRect.top, 0)) / (Math.max(elRect.right - elRect.left, 0) * Math.max(elRect.bottom - elRect.top, 0)));
}

}

});

_extend(ADventori.fn, {

trackViewable: function(conf) {
    if (conf.track['AdView']) {
        conf.track.viewable.context = ADventori.track.viewable.getContext(conf.dom['window']);
        var startTime = ADventori.utils.time(), self = this, context = conf.track.viewable.context, contextString = ADventori.utils.param({sfAPI: context.sfAPI ? true : false, frameMode: context.frameMode, nbNested: context.nbNested, nbNestedFriendly: context.nbNestedFriendly});
        ADventori.utils.setTimeout(function() {
            if (self.call('inViewRatio', [conf]) < 0) {
                ADventori.dom.firePixel(ADventori.track.urlNoop({"type": conf.track['AdView'], "retailer_1": 0, "retailer_2": null, "retailer_3": contextString, "retailer_4": (ADventori.utils.time() - startTime), "clickTagDomaineName": null, "urlClick": null}));
                ADventori.dom.firePixels(ADventori.macros.replace(conf.track.viewable['noviewTag']));
                return;
            }
            var timerDurations = [], timerIds = [];
            ADventori.utils.each(conf.track.viewable.thresholds, function(i, threshold) {
                var tick = threshold.tick || conf.track.viewable.tick, area = threshold.area / 100, duration = threshold.duration * 1000;
                timerDurations[i] = 0;
                timerIds[i] = ADventori.utils.setInterval(function() {
                    timerDurations[i] = self.call('inViewRatio', [conf]) >= area ? (timerDurations[i] + tick) : 0;
                    if (timerDurations[i] >= duration + tick) {
                        clearInterval(timerIds[i]);
                        if (conf.track.viewable.isViewable.apply(self, [i, threshold])) {ADventori.dom.firePixel(ADventori.track.urlNoop({"type": conf.track['AdView'], "retailer_1": 1, "retailer_2": ADventori.utils.param(threshold), "retailer_3": contextString, "retailer_4": (ADventori.utils.time() - startTime), "clickTagDomaineName": null, "urlClick": null}));}
                        if (conf.track.viewable.isViewableTag.apply(self, [i, threshold])) {ADventori.dom.firePixels(ADventori.macros.replace(conf.track.viewable['viewTag'], ADventori.macros.viewable, [conf, threshold]));}
                    }
                }, tick, 'trackViewable1_' + conf['id'], 'AdErrorView');
            });
        }, conf.track.viewable.tick, 'trackViewable0_' + conf['id'], 'AdErrorView');
    }
},

inViewRatio: function(conf) {
    try {
        var win = conf.dom['window'],
            doc = conf.dom['document'],
            el = doc.getElementById(conf['targetId']),
            sfAPI = conf.track.viewable.context.sfAPI,
            frameMode = conf.track.viewable.context.frameMode,
            frameModes = ADventori.track.viewable.frameModes;
        if (sfAPI && sfAPI.inViewPercentage) {return this.call('inViewRatio_sfAPI', [], function() {return (!sfAPI.winHasFocus || sfAPI.winHasFocus() ? (sfAPI.inViewPercentage() / 100) : 0);});}
        if (frameMode === frameModes.TOP || frameMode === frameModes.FRIENDLY) {
            if (typeof doc.hasFocus == 'function') {if (!doc.hasFocus() && !win.top.document.hasFocus()) {return 0;}}
            var frameWin, frameEl;
            if (frameMode === frameModes.TOP) {frameWin = win; frameEl = el;}
            if (frameMode === frameModes.FRIENDLY) {frameWin = win.parent; frameEl = win.frameElement;}
            return (frameWin && frameEl ? this.call('inViewRatio_' + frameMode, [frameWin, frameEl], ADventori.track.viewable.inViewRatio) : 0);
        }
    } catch(e) {}
    return -1;
}

});

(function(){

debug.stack.push('custom_campaign');
// RÃ©cupÃ©ration Data gÃ©oloc
var p = ADventori.data.params;
var r = ADventori.data.results.places.places;
var userLat = ADventori.data.results.userLocation.latitude, userLng = ADventori.data.results.userLocation.longitude; // RÃ©cupÃ©ration de la gÃ©olocalisation de l'internaute
var placement = p.placementId, segment = placement.split('_')[4], format = placement.split('_')[5];
var intro = "";
var intro2 = "";
var intro3 = "";
var intro4 = "";
var intro5 = "";
var image = "";
var incentive;
var cta;
var ctaWidth = "130";
// RÃ©cupÃ©ration Data gÃ©oloc - Fin

if (p.intro) {
  intro = p.intro;
} else {
  if (segment === "Epepite") {
    intro = "Profitez des 5% dâavantage carte tous les jours !";
  } else if (segment === "EStar") {
    intro = "TOUTES NOS PROMOTIONS !";
    intro2 = "JUSQU'A 40% DE REMISE IMMEDIATE";
  } else if (segment === "Eprospect") {
    intro = "Pas le temps de faire vos courses ?";
  }
}

if (p.intro) {
  incentive = p.incentive;
} else {
  var radomIncentive = Math.random() * 5;
  if (radomIncentive < 1) {
    incentive = "Vos courses disponibles dÃ¨s aujourd'hui*";
  } else if (radomIncentive >= 1 && radomIncentive < 2) {
    incentive = "Vos courses disponibles en quelques heures*";
  } else if (radomIncentive >= 2 && radomIncentive < 3) {
    incentive = "Toutes nos promotions sur le site";
  } else if (radomIncentive >= 3 && radomIncentive < 4) {
    incentive = "DÃ©couvrez notre sÃ©lection du moment";
  } else if (radomIncentive >= 4 && radomIncentive < 5) {
    incentive = "Mon budget bien maÃ®trisÃ©";
  }
}

if (p.image) {
  image = p.image;
} else {
  if (segment === "Epepite") {
    image = ADventori.macros.replace('[PROTOCOL][HOSTNAME]/lp/dd/intermarche/Intermarche_AOD_FR032015/carte_fidelite.png');
  } else if(segment === "Eprospect") {
    image = ADventori.macros.replace('[PROTOCOL][HOSTNAME]/lp/dd/intermarche/Intermarche_AOD_FR032015/cart.jpg');
  } else {
    intro5 = "40%";
    intro4 = "PROMO";
    intro3 = "Jusqu'Ã  40% de Remise immediate*";
  }
}


// DÃ©finition des diffÃ©rents visuels dynamiques (Ecran 1) - Fin


// Calcul de la distance au magasin
if (r && r.length >= 1) {
  var EARTH_RADIUS_IN_METERS = 6378700,
      retailerLat = r[0].gmLatitude,
      retailerLong = r[0].gmLatitude;
  Math.toRadians = function (degrees) {
    return degrees * Math.PI / 180;
  };
  function fastDistance(latA, lonA, latB, lonB) {
    var x = (Math.toRadians(lonB) - Math.toRadians(lonA)) * Math.cos((Math.toRadians(latA) + Math.toRadians(latB)) / 2);
    var y = (Math.toRadians(latB) - Math.toRadians(latA));
    return Math.sqrt(x * x + y * y) * EARTH_RADIUS_IN_METERS;
  }
  var distanceInM = fastDistance(userLat, userLng, retailerLat, retailerLong);
  var distanceInKm = Math.round(distanceInM / 1000);
}
// Calcul de la distance au magasin - Fin


// Mise en place de l'accroche Ecran 2
debug.log(distanceInKm);
debug.log(distanceInM)
debug.log(r[0])
var distance = "Vos courses en ligne aux mÃªmes prix qu'en magasin";
if (distanceInKm < 10) {
  distance = "Vos courses Ã  5 minutes de chez vous";
} else if (distanceInKm >= 10) {
  distance = "Vos courses proches de chez vous";
}
// Mise en place de l'accroche Ecran 2 - Fin


// Mise en place du repiquage point de vente Ecran 2
var wording1 = "", wording2 = "J'EN PROFITE DANS MON DRIVE", wording3 = "";
if (r && r.length == 1) {
  wording2 = "Ã  " + r[0].city + "\n" + r[0].street1;
} else if (r && r.length == 2) {
  wording1 = "Ã  " + r[0].city + "\n" + r[0].street1;
  wording3 = "Ã  " + r[1].city + "\n" + r[1].street1;
} else if (r && r.length >= 3) {
  wording1 = "Ã  " + r[0].city + "\n" + r[0].street1;
  wording2 = "Ã  " + r[1].city + "\n" + r[1].street1;
  wording3 = "Ã  " + r[2].city + "\n" + r[2].street1;
}
// Mise en place du repiquage point de vente Ecran 2 - Fin


// DÃ©finition des CTA dynamiques (Ecran 3)
if (p.cta) {
  cta = p.cta;
    if (p.cta === "DEBUTEZ VOS COURSES") {
    if (format == "120x600") {
    ctaWidth = "110";
    } else if (format == "160x600") {
    ctaWidth = "150";
    } else {
    ctaWidth = "216";
    }
  } else if (p.cta === "PLUS DE CHOIX") {
    if (format == "120x600") {
    ctaWidth = "110";
    } else if (format == "160x600") {
    ctaWidth = "150";
    } else {
    ctaWidth = "216";
    }
  } else if (p.cta === "J'EN PROFITE DANS MON DRIVE") {
    if (format == "120x600") {
    ctaWidth = "110";
    } else if (format == "160x600") {
    ctaWidth = "150";
    } else {
    ctaWidth = "303";
    }
  }
} else {
  var radomCta = Math.random() * 4;
  if (radomIncentive < 1) {
    cta = "DEBUTEZ VOS COURSES";
    if (format == "120x600") {
    ctaWidth = "110";
    } else if (format == "160x600") {
    ctaWidth = "150";
    } else {
    ctaWidth = "216";
    }
  } else if (radomIncentive < 2) {
    cta = "PLUS DE CHOIX";
    if (format == "120x600") {
    ctaWidth = "110";
    } else if (format == "160x600") {
    ctaWidth = "150";
    } else {
    ctaWidth = "216";
    }
  } else if (radomIncentive < 3) {
    cta = "JE FONCE";
  } else if (radomIncentive < 4) {
    cta = "J'EN PROFITE DANS MON DRIVE";
    if (format == "120x600") {
    ctaWidth = "110";
    } else if (format == "160x600") {
    ctaWidth = "150";
    } else {
    ctaWidth = "303";
    }
  }
  else {
    /* taille par dÃ©faut*/
  }
}

// DÃ©finition des CTA dynamiques (Ecran 3) - Fin
ADventori.conf.macros = {'SEGMENT': segment};

ADventori.conf.creativeParams = {
  'intro'     : intro,
  'intro2'    : intro2,
  'intro3'    : intro3,
  'intro4'    : intro4,
  'intro5'    : intro5,
  'incentive' : incentive,
  'image'     : image,
  'distance'  : distance,
  'wording1'  : wording1,
  'wording2'  : wording2,
  'wording3'  : wording3,
  'cta'       : cta,
  'ctaWidth'  : ctaWidth,
  'segment'   : segment
};
debug.stack.pop();

})();


if (ADventori.conf.run['autoStart']) {ADventori.track.tryFn(ADventori.start, 'autoStart');}
}, 'init');
})(window);
