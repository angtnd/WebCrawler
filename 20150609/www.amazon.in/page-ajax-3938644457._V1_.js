function now(){return +new Date();
}(function(){var jsDepMgr=amzn.sx.utils.jsDepMgr;
jsDepMgr.when("jQuery","pageUtils",function($){var PageUtils=function(){var self=this;
this.context=undefined;
this.cacheName={"HISTORY":"History","PREDICTIVE":"Predictive","GEN_SESSION":"GenSession","GEN_REQUEST":"GenRequest"};
this.sectionName={"ATF":"ATF","BTF":"BTF","NONE":"NONE"};
this.ajaxReadyState={"NONE":-1,"UNSENT":0,"OPENED":1,"HEADERS_RECEIVED":2,"LOADING":3,"DONE":4};
this.handlerCode={"OK":0,"IGNORE":1,"RETRY":2,"RELOAD":3,"ABORT":4};
this.reasonCode={"NOT_SUPPORTED":0,"TIMEOUT":1,"FATAL":2,"INVALID_RESP":3,"INCOMPLETE_RESP":4,"PAGELET_FATAL":5,"DEBUG_NOAJAX":6,"ROBOT":7,"CLIENT_FATAL":8,"DISPLAY_SIZE":9,"SKELETON_MIS":10,"NONE":-1};
this.serverCode={"ERROR":-1,"OK":200,"FORBIDDEN":403,"TIMEOUT":408};
this.commaEncoding={"URI_REGEX":/%2C/gi,"RH_ENCODING":"%5Cc"};
this.hasNoEndTag=["BR","IMG","HR"];
this.NOTFOUND=-1;
this.hashre=/#.*/;
this.refre=/(ref=[-\w]+)/;
this.imgre=/<img [^>]*[\/]?>/gi;
this.srcre=/src=\"([\S]*?)\"/i;
this.commentre=/<!--([\s\S]*?)-->/;
this.idre=/id=\"([\S]*?)\"/;
this.jre=/(<script [^>]*jscript[^>]*>)([\s\S]*?)(<\/script>)/gi;
this.javare=/(<script [^>]*javascript[^>]*>)([\s\S]*?)(<\/script>)/gi;
this.htmltplre=/(<script [^>]*text\/html[^>]*>)([\s\S]*?)(<\/script>)/gi;
this.javanotypere=/(<script>)([\s\S]*?)(<\/script>)/gi;
this.scriptre=/<script[^>]*>([\s\S]*?)<\/script>/i;
this.trailingcommare=/,$/;
this.debugre=/([?&])(debug=)([^&]*)/;
this.ajaxre=/(^|,)(ajax=)({[^}]*})/;
this.init=function(context){self=$.pageUtils;
self.context=context;
};
this.getPar=function(re,str){if(!re||!str){return undefined;
}var m=str.match(re);
return(m&&m.length>=4)?m[3]:undefined;
};
this.removePar=function(re,str){if(!re||!str){return;
}return str.replace(re,"$1").replace(/\?&/,"?").replace(/&&/,"&").replace(/&$/,"");
};
this.deletePar=function(url,param){if(!url||!param){return;
}var re=new RegExp("([?&])("+param+"=)([^&]*)","gi");
return url.replace(re,"$1").replace(/\?&/,"?").replace(/&&/,"&").replace(/&$/,"");
};
this.getGroup=function(re,str){var m=str.match(re);
return(m&&m.length>=2)?m[1]:undefined;
};
this.removeHash=function(url){return url.replace(self.hashre,"");
};
this.hasHash=function(url){return url.match(self.hashre)?true:false;
};
this.computeHash=function(url,urlre){var m=url.match(urlre);
return(m&&m.length==3)?m[2]:"";
};
this.computeBase=function(url,urlbasere){var m=url.match(urlbasere);
return(m&&m.length==2)?m[1]:"";
};
this.buildHash=function(map){hash="?";
var len=self.getSize(map);
var k=0;
for(var key in map){if(map[key]){if(k>0){hash+="&";
}hash+=key+"="+map[key];
}k++;
}return hash;
};
this.normalizeHashForUrl=function(hash){if(!hash||hash.charAt(0)=="?"||hash.charAt(0)=="/"){return hash;
}var queryIndex=hash.indexOf("?"),urlSuffix;
if(queryIndex==-1){urlSuffix="?"+((hash.charAt(0)=="&")?hash.substring(1):hash);
}else{var slashIndex=hash.indexOf("/");
var minIndex=(slashIndex==-1)?queryIndex:Math.min(slashIndex,queryIndex);
urlSuffix=hash.substring(minIndex);
}return urlSuffix;
};
this.getDebugParams=function(str){var vs=self.getPar(self.debugre,str);
if(vs){return vs.split(",");
}return[];
};
this.hasDebugParam=function(str,p){return $.inArray(p,self.getDebugParams(str))!=-1;
};
this.replaceDebugParams=function(str,arr){if(!str||!arr){return str;
}if(arr.length===0){return str.replace(self.debugre,"").replace(/^&/,"?");
}return str.replace(self.debugre,"$1$2"+arr.join());
};
this.removeDebugParam=function(str,d){var dp,didx;
if(!str||!d){return str;
}dp=self.getDebugParams(str);
didx=$.inArray(d,dp);
if(didx!=-1){dp.splice(didx,1);
}return self.replaceDebugParams(str,dp);
};
var getDebugMsg=function(comp,msg){msg=Array.prototype.slice.call(msg);
return comp+": "+msg.join(" ");
};
this.dbg=(typeof(goN2Debug)!="undefined")?function(comp,lvl,msg){if(!msg||!msg.length||msg[0].match(/^\s*$/)){return;
}msg=getDebugMsg(comp,msg);
var f=goN2Debug[lvl];
if(f&&typeof(f)=="function"){goN2Debug[lvl](msg);
}var dbgContext=self.getPar(self.ajaxre,self.getPar(self.debugre,location.search));
if(dbgContext&&self.context.intReq==1&&window.console&&window.console.log){console.log(msg);
}}:function(comp,lvl,msg){};
this.getInitialDisplaySize=function(){return window.displaySize;
};
this.imgLoaded=function(img){if(img.complete||img.naturalWidth){return true;
}return false;
};
this.getKeys=function(obj){var keys=[];
for(var key in obj){keys.push(key);
}return keys;
};
this.getSize=function(obj){var size=0,key;
for(key in obj){if(obj.hasOwnProperty(key)){size++;
}}return size;
};
this.inObjectArray=function(prop,val,array){if(!array){return -1;
}for(var i=0;
i<array.length;
i++){if(array[i][prop]==val){return i;
}}return -1;
};
this.Map=function(){var m={};
var clear=function(){m={};
};
var get=function(k){return m[k];
};
var keys=function(){var ks=[];
for(var k in m){ks.push(k);
}return ks;
};
var put=function(k,v){var t=m[k];
m[k]=v;
return t;
};
var remove=function(k){var t=m[k];
delete m[k];
return t;
};
var size=function(){return keys().length;
};
var values=function(){var vs=[];
for(var k in m){vs.push(m[k]);
}return vs;
};
var equals=function(otherMap){if(!otherMap){return false;
}if(size()!=otherMap.size()){return false;
}for(var k in m){if(get(k)!=otherMap.get(k)){return false;
}}return true;
};
return{clear:clear,get:get,keys:keys,put:put,remove:remove,size:size,values:values,equals:equals};
};
this.separateScriptsTreatment=function(div){var htmltpls=[],javascripts=[],jscripts=[];
if(div){var scripts=div.getElementsByTagName("script");
for(var i=0;
i<scripts.length;
i++){node=scripts[i];
if(node.type==="text/html"){htmltpls.push(node.outerHTML);
node.parentNode.removeChild(node);
continue;
}if(node.type==="text/javascript"||node.type===""){javascripts.push(node.outerHTML);
node.parentNode.removeChild(node);
continue;
}if(node.type==="text/jscript"){jscripts.push(node.outerHTML);
node.parentNode.removeChild(node);
continue;
}}}return{"strippedHTML":div.innerHTML,"JScripts":jscripts,"Javascripts":javascripts,"HtmlTemplates":htmltpls};
};
this.separateScripts=function(html){var htmltpls=[],javascripts=[],javascriptsnotype=[],jscripts=[];
if(html){htmltpls=html.match(self.htmltplre);
if(htmltpls){html=html.replace(self.htmltplre,"");
}else{htmltpls=[];
}javascripts=html.match(self.javare);
if(javascripts){html=html.replace(self.javare,"");
}else{javascripts=[];
}javascriptsnotype=html.match(self.javanotypere);
if(javascriptsnotype){$.merge(javascripts,javascriptsnotype);
html=html.replace(self.javanotypere,"");
}jscripts=html.match(self.jre);
if(jscripts){html=html.replace(self.jre,"");
}else{jscripts=[];
}}return{"strippedHTML":html,"JScripts":jscripts,"Javascripts":javascripts,"HtmlTemplates":htmltpls};
};
this.insertScripts=function(div,javascripts,jscripts,htmltemplates,append){var containerId,str;
append=append===undefined?true:append;
if(javascripts&&javascripts.length>0){containerId=div+"_ajaxJavascripts";
self.appendHiddenDiv(div,containerId,append);
$.each(javascripts,function(){var m=this.match(self.scriptre);
if(m&&m.length==2){self.insertJavascript(containerId,m[1]);
}});
}if(jscripts&&jscripts.length>0){containerId=div+"_ajaxJScripts";
self.appendHiddenDiv(div,containerId,append);
str="&nbsp;";
$.each(jscripts,function(){str+=this.replace("<script","<script DEFER");
});
if(append){document.getElementById(containerId).innerHTML+=str;
}else{document.getElementById(containerId).innerHTML=str;
}}if(htmltemplates&&htmltemplates.length>0){containerId=div+"_ajaxHtmlTemplates";
self.appendHiddenDiv(div,containerId,append);
str="&nbsp;";
$.each(htmltemplates,function(){str+=this;
});
if(append){document.getElementById(containerId).innerHTML+=str;
}else{document.getElementById(containerId).innerHTML=str;
}}};
this.appendHiddenDiv=function(mainId,newId,append){var existingDiv=$("#"+newId);
if(append&&existingDiv.length!==0){existingDiv.hide();
return;
}existingDiv.remove();
$('<div id="'+newId+'"/>').appendTo($("#"+mainId)).hide();
};
this.insertJavascript=function(div,data){if(data){var divElement=document.getElementById(div)||document.documentElement,script=document.createElement("script");
script.type="text/javascript";
script.text=data;
divElement.appendChild(script);
}};
this.tagStart=function(object){if(object.nodeType==8){return($.browser.msie?"":"<!--");
}if(!object.tagName){return"";
}return self.tagOpen(object)+">";
};
this.tagEnd=function(object){if(object.nodeType==8){return($.browser.msie?"":"-->");
}if(!object.tagName){return"";
}return"</"+object.tagName+">";
};
this.tagComplete=function(object){if(!object.tagName){return"";
}return self.tagOpen(object)+" />";
};
this.tagOpen=function(object){var openTag="<"+object.tagName;
var elAttributes=object.attributes;
if(!elAttributes){return openTag;
}var attrs="";
for(var i=0;
i<elAttributes.length;
i++){if(elAttributes[i].specified){attrs+=" "+elAttributes[i].nodeName+'="'+elAttributes[i].nodeValue+'"';
}}return openTag+attrs;
};
this.elementHtml=function(elementId){var object=document.getElementById(elementId);
return self.elementHtmlByDom(object);
};
this.elementHtmlByDom=function(object){if(!object){return undefined;
}if(object.tagName&&$.inArray(object.tagName,self.hasNoEndTag)!=-1){return self.tagComplete(object);
}var val=object.innerHTML;
if(val===undefined){val=object.nodeValue;
}return self.tagStart(object)+val+self.tagEnd(object);
};
this.removeElementFromDom=function(domObj,parentSubstring,removalSelector){var innerHtml="";
for(var i=0;
i<domObj.childNodes.length;
i++){var child=domObj.childNodes[i];
var childHtml=self.elementHtmlByDom(child);
if(childHtml.indexOf(parentSubstring)!=-1){var newChild=document.createElement("div");
newChild.innerHTML=childHtml;
newChild=$(newChild);
newChild.find(removalSelector).remove();
childHtml=newChild.html();
}innerHtml+=childHtml;
}return innerHtml;
};
this.extractImgSrc=function(data){var imgs=data?data.match(self.imgre):null;
if(!imgs){return[];
}var srcs=[];
$.each(imgs,function(){var m=this.match(self.srcre);
if(m&&m.length==2&&$.inArray(m[1],srcs)==-1){srcs.push(m[1]);
}});
return srcs;
};
this.insertCss=function(cssText){$("head").append($(cssText).attr({type:"text/css"}));
};
this.loadCss=function(cssHref){$("<link>").appendTo($("head")).attr({type:"text/css",rel:"stylesheet"}).attr("href",cssHref);
};
this.removeCssStyles=function(){$("head").children("style").each(function(){$(this).remove();
});
};
this.removeCssLink=function(name){$("head").children("link").each(function(){var href=this.getAttribute("href");
if(href.indexOf(name)!=-1){$(this).remove();
}});
};
this.genStatus=function(handlerCode,reasonCode,redirectUrl){return{"handlerCode":handlerCode,"reasonCode":reasonCode,"redirectUrl":redirectUrl};
};
this.genReloadStatus=function(reasonCode,redirectUrl){return this.genStatus(this.handlerCode.RELOAD,reasonCode,redirectUrl);
};
this.reflowThen=function(fn){var reflowHolderHost=$(['<p style="margin: 0; padding: 0; position: absolute; bottom: 0; right: 0; z-index: -9999;">','<span id="reflow-sensor" style="margin: 0; padding: 0; font-family: monospace; font-size: 10px;">',"\xA0\xA0\xA0","</span>","</p>"].join())[0];
document.body.appendChild(reflowHolderHost);
var reflowSensor=document.getElementById("reflow-sensor");
var counter=0;
var interval=setInterval(function(){if(reflowSensor.offsetWidth>2||++counter>99){clearInterval(interval);
document.body.removeChild(reflowHolderHost);
fn();
}},20);
};
this.escapeJSON=function(json){return json.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/'/g,"\\'");
};
this.stringify=function(obj){if(window.JSON&&window.JSON.stringify){return JSON.stringify(obj);
}var res="";
if(obj instanceof Array){res+="[";
for(var i=0;
i<obj.length;
i++){res+=self.stringify(obj[i]);
if(i!=(obj.length-1)){res+=",";
}}res+="]";
}else{if(typeof obj===typeof""){obj=obj.replace(/"/g,'\\"').replace(/'/g,"\\'");
res+='"'+obj+'"';
}else{if(obj instanceof Object){res+="{";
var first=true;
for(var k in obj){if(!first){res+=",";
}first=false;
res+='"'+k+'":'+self.stringify(obj[k]);
}res+="}";
}else{if(obj===undefined){res+="undefined";
}else{if(obj===null){res+="null";
}else{res+=obj.toString();
}}}}}return res;
};
self.navUpdate=function(){return false;
};
self.navHideSubnav=function(){};
self.navShowSubnav=function(){};
self.getStartingNavUpdate=function(){};
self.navIsSubnavShown=function(){return $("#navbar").hasClass("nav-subnav");
};
jsDepMgr.when("navbarJSInteraction","pageUtils.navUpdate",function(){self.navUpdate=function(navUpdate){if(typeof navUpdate===typeof""){try{navUpdate=$.parseJSON(navUpdate);
}catch(e){self.error("navUpdate is not valid JSON "+e);
return false;
}}return navbar.update(navUpdate);
};
self.navHideSubnav=navbar.hideSubnav||function(){var navbar=$("#navbar");
if(navbar.hasClass("nav-subnav")){navbar.removeClass("nav-subnav");
}};
self.navShowSubnav=navbar.showSubnav||function(){var navbar=$("#navbar");
if(!navbar.hasClass("nav-subnav")){navbar.addClass("nav-subnav");
}};
self.getStartingNavUpdate=navbar.getSearchBackState?function(){return self.stringify(navbar.getSearchBackState());
}:function(){var elemText=function(e){return e.textContent?e.textContent:e.innerText;
},startingNavUpdate={},navbar=$("#navbar"),dropdown=$("#searchDropdownBox");
startingNavUpdate.templated=true;
startingNavUpdate.searchbar={data:{"nav-metadata":{},options:[],version:1},type:"searchbar"};
startingNavUpdate.searchbar.data["nav-metadata"].digest=dropdown.attr("data-nav-digest");
dropdown.children().each(function(i,e){var option={_display:elemText(e),value:e.value};
if(e.selected){startingNavUpdate.searchbar.data["nav-metadata"].selected=i;
option.current="parent";
option.selected="selected";
}startingNavUpdate.searchbar.data.options.push(option);
});
if($("#nav-subnav").is(":hidden")){startingNavUpdate.catsubnav={digest:"0",data:"",type:"html"};
}else{startingNavUpdate.catsubnav={category:{data:{},type:"link"},subnav:{data:[],type:"linkSequence"}};
startingNavUpdate.catsubnav.digest=$("#nav-subnav").attr("data-digest");
var categoryLink=$("#nav-subnav > li.nav-category-button > a")[0];
startingNavUpdate.catsubnav.category.data.href=categoryLink.href;
startingNavUpdate.catsubnav.category.data.text=elemText(categoryLink);
$("#nav-subnav > li.nav-subnav-item").filter(":not(.nav-category-button)").each(function(i,e){e=e.children[0];
var link={};
link.href=e.href;
link.text=elemText(e);
link.flag=0;
startingNavUpdate.catsubnav.subnav.data.push(link);
});
}return self.stringify(startingNavUpdate);
};
});
var isPredictiveElem=function(id,predictiveConfig){if(!predictiveConfig){return;
}var divsLen=predictiveConfig.divs.length;
for(var i=0;
i<divsLen;
i++){if(predictiveConfig.divs[i].id==id){return true;
}}var regionsLen=predictiveConfig.regions.length;
for(i=0;
i<regionsLen;
i++){if(predictiveConfig.regions[i].id==id){return true;
}}return false;
};
this.updatePage=function(divObj,requestContext,predictiveConfig,logger){if(!divObj){return;
}var timeAtResponse=now(),useTagId=divObj.data.altTagId?divObj.data.altTagId:divObj.tagId;
switch(divObj.data.type){case"HTML":var foundDiv=$("#"+useTagId);
if(foundDiv.length>0){if(divObj.data.status==="ok"){if(!isPredictiveElem(useTagId,predictiveConfig)){var htmlAndScripts;
if(self.context.useNewStripFunc){if(typeof divObj.shouldHide!=="undefined"&&divObj.shouldHide){foundDiv.replaceWith($(divObj.data.value).hide());
}else{foundDiv.replaceWith(divObj.data.value);
}}else{htmlAndScripts=self.separateScripts(divObj.data.value);
if(typeof divObj.shouldHide!=="undefined"&&divObj.shouldHide){foundDiv.replaceWith($(htmlAndScripts.strippedHTML).hide());
}else{foundDiv.replaceWith(htmlAndScripts.strippedHTML);
}self.insertScripts(useTagId,htmlAndScripts.Javascripts,htmlAndScripts.JScripts,htmlAndScripts.HtmlTemplates);
}}else{foundDiv.replaceWith(divObj.data.value);
}}else{if(divObj.data.status==="empty"||divObj.data.status==="error"){foundDiv.empty();
}}}else{$.ajaxMissingDivs.put(useTagId,divObj);
}if(logger){var timeAfterProcess=now();
self.debug("div: "+useTagId+". Time since last = "+(timeAtResponse-requestContext.timeSinceLast)+"ms. Processed in = "+(timeAfterProcess-timeAtResponse)+"ms.");
if(useTagId=="atfResults"||useTagId=="center"){logger.setElapsedData("ajax-atf",requestContext.timeZero);
self.debug("clickToATF = "+(timeAfterProcess-requestContext.timeZero)+"ms.");
}requestContext.timeSinceLast=timeAfterProcess;
}break;
case"JAVASCRIPT":try{(new Function("jQuery","$",divObj.data.value))($,$);
}catch(e){self.error("Invalid JavaScript in response "+e);
return;
}break;
case"JSON":if(divObj.data.status==="ok"&&useTagId){$.pageUpdateJsonData[useTagId]=divObj.data.value;
}break;
case"CSS":if(divObj.data.status==="ok"){self.insertCss(divObj.data.value);
}break;
}};
this.evalScripts=function(ids){$(ids).children("script").each(function(){(new Function("jQuery","$",$(this).html()))($,$);
});
};
this.constructPageletData=function(tagId,type,value){return{"tagId":tagId,"data":{"status":"ok","type":type,"value":value}};
};
this.onScrollPause=function(fExec,tWait){var tInit=now(),pId;
$(window).scroll(function(){var tNow=now();
if(tNow-tInit<tWait){tInit=tNow;
}if(pId){clearTimeout(pId);
}pId=setTimeout(fExec,tWait);
});
};
this.getNames=function(html,label){var str="";
if(html){var names="";
$("div[name]",html).each(function(){var elem=$(this);
if(elem.hasClass("result")){names+=" "+elem.attr("name");
}});
if(names){str+=label+names;
}}return str;
};
};
var pageUtilsSingleton=new PageUtils();
$.pageUtils=pageUtilsSingleton;
jsDepMgr.register("page-utils",function(){return pageUtilsSingleton;
});
});
}());
(function(){var jsDepMgr=amzn.sx.utils.jsDepMgr;
jsDepMgr.when("jQuery page-utils","pageCache",function($){var pUtils=$.pageUtils;
var PageCache=function(name,storedSections){var sections=storedSections;
var cache={};
var cacheStartTime=0;
var cacheMaxLife=900000;
var cacheMaxSize=10;
var initCacheEntry=function(key,initValue){if(!cacheStartTime){cacheStartTime=now();
}var cacheEntry=cache[key];
if(!cacheEntry||initValue){cacheEntry=newEntry(key);
}return cacheEntry;
};
var newEntry=function(key){cache[key]={};
var cacheEntry=cache[key];
cacheEntry.content=[];
cacheEntry.ready=false;
cacheEntry.unsupported=false;
cacheEntry.callback=undefined;
return cacheEntry;
};
var expired=function(){var cacheSize=pUtils.getSize(cache);
var cacheLife=now()-cacheStartTime;
return cacheLife>cacheMaxLife||cacheSize>=cacheMaxSize;
};
var deleteKey=function(key){if(key&&cache[key]){delete cache[key];
notify("cache-entry-delete",{"cache":name,"key":key});
}};
var clear=function(key){cache={};
cacheStartTime=0;
notify("cache-clear",{"cache":name});
};
var write=function(key,contentItem,firstWrite){if(firstWrite&&expired()){clear();
}var cacheEntry=initCacheEntry(key,firstWrite);
cacheEntry.content.push(contentItem);
if(contentItem&&contentItem.tagId){}notify("cache-entry-write",{"cache":name,"key":key,"data":contentItem});
return cacheEntry;
};
var getEntry=function(key,initValue){if(expired()){clear();
}var entry=cache[key];
if(initValue&&entry){entry=newEntry(key);
}return entry;
};
var getSections=function(key){return sections;
};
var getName=function(key){return name;
};
var printStats=function(debug){var dbgStatements=[];
dbgStatements.push(name+" "+"Num Keys: "+pUtils.getSize(cache));
dbgStatements.push("Max Keys:"+cacheMaxSize+" Time left: "+((cacheMaxLife-(now()-cacheStartTime))/60000)+" mins.");
for(var key in cache){dbgStatements.push("-- Key: "+key+" Num pagelets: "+pUtils.getSize(cache[key].content));
if(!cache[key].content){continue;
}for(var i=0;
i<cache[key].content.length;
i++){dbgStatements.push("---- "+i+". Pagelet: "+cache[key].content[i].tagId+". Status: "+cache[key].content[i].data.status+". Type: "+cache[key].content[i].data.type);
var elemNames=cache[key].content[i].data.type==="HTML"?pUtils.getNames(cache[key].content[i].data.value,""):undefined;
if(elemNames){dbgStatements.push("------ Names:"+elemNames);
}}}if(debug){if(dbgStatements){for(var s=0;
s<dbgStatements.length;
s++){debug(dbgStatements[s]);
}}}else{var fullCacheDump=$.searchAjaxDebug?$.searchAjaxDebug.dump(cache):"";
return"<b>"+name+"</b> <br/>"+dbgStatements.join("<br/>")+"<br/>"+fullCacheDump+"<br/> -------------------------- <br/>";
}};
var notify=function(eventName,data){$(document).trigger(eventName,data);
};
return{clear:clear,deleteKey:deleteKey,getEntry:getEntry,getSections:getSections,getName:getName,initCacheEntry:initCacheEntry,printStats:printStats,write:write};
};
var PageCacheNew=function(name,storedSections){var sections=storedSections;
var cache={};
var cacheStartTime=0;
var cacheMaxLife=900000;
var cacheMaxSize=10;
var newestKey=null,oldestKey=null,cacheSize=0;
var initCacheEntry=function(key,initValue){var cacheEntry=cache[key];
if(!cacheEntry||initValue){cacheEntry=newEntry(key);
}return cacheEntry;
};
var newEntry=function(key){deleteKey(key);
if(cacheSize>=cacheMaxSize){deleteKey(oldest);
}cache[key]={};
var cacheEntry=cache[key];
cacheEntry.content=[];
cacheEntry.ready=false;
cacheEntry.unsupported=false;
cacheEntry.callback=undefined;
cacheEntry.time=now();
cacheEntry.lastKey=newestKey;
if(newestKey!=null){cache[newestKey].nextKey=key;
}newestKey=key;
if(oldestKey==null){oldestKey=key;
}cacheSize++;
return cacheEntry;
};
var expired=function(){var cacheSize=pUtils.getSize(cache);
var cacheLife=now()-cacheStartTime;
return cacheLife>cacheMaxLife||cacheSize>=cacheMaxSize;
};
var deleteKey=function(key){if(key){var cacheEntry=cache[key];
if(cacheEntry){if(key==oldestKey){oldestKey=cacheEntry.nextKey;
}if(key==newestKey){newestKey=cacheEntry.lastKey;
}delete cache[key];
cachedSize--;
notify("cache-entry-delete",{"cache":name,"key":key});
}}};
var clear=function(key){cache={};
oldestKey=null;
newestKey=null;
cacheSize=0;
notify("cache-clear",{"cache":name});
};
var write=function(key,contentItem,firstWrite){var cacheEntry=initCacheEntry(key,firstWrite);
cacheEntry.content.push(contentItem);
if(contentItem&&contentItem.tagId){}notify("cache-entry-write",{"cache":name,"key":key,"data":contentItem});
return cacheEntry;
};
var getEntry=function(key,initValue){var cacheEntry=cache[key];
if(cacheEntry&&now()-cacheEntry.time>cacheMaxLife){deleteKey(key);
cacheEntry=undefined;
}if(initValue&&cacheEntry){deleteKey(key);
cacheEntry=newEntry(key);
}return cacheEntry;
};
var getSections=function(key){return sections;
};
var getName=function(key){return name;
};
var printStats=function(debug){var dbgStatements=[];
dbgStatements.push(name+" "+"Num Keys: "+pUtils.getSize(cache));
dbgStatements.push("Max Keys:"+cacheMaxSize+" Time left: "+((cacheMaxLife-(now()-cacheStartTime))/60000)+" mins.");
for(var key in cache){dbgStatements.push("-- Key: "+key+" Num pagelets: "+pUtils.getSize(cache[key].content));
if(!cache[key].content){continue;
}for(var i=0;
i<cache[key].content.length;
i++){dbgStatements.push("---- "+i+". Pagelet: "+cache[key].content[i].tagId+". Status: "+cache[key].content[i].data.status+". Type: "+cache[key].content[i].data.type);
var elemNames=cache[key].content[i].data.type==="HTML"?pUtils.getNames(cache[key].content[i].data.value,""):undefined;
if(elemNames){dbgStatements.push("------ Names:"+elemNames);
}}}if(debug){if(dbgStatements){for(var s=0;
s<dbgStatements.length;
s++){debug(dbgStatements[s]);
}}}else{var fullCacheDump=$.searchAjaxDebug?$.searchAjaxDebug.dump(cache):"";
return"<b>"+name+"</b> <br/>"+dbgStatements.join("<br/>")+"<br/>"+fullCacheDump+"<br/> -------------------------- <br/>";
}};
var notify=function(eventName,data){$(document).trigger(eventName,data);
};
return{clear:clear,deleteKey:deleteKey,getEntry:getEntry,getSections:getSections,getName:getName,initCacheEntry:initCacheEntry,printStats:printStats,write:write};
};
if($.latenceHackUseNewCache){$.pageCache=PageCacheNew;
jsDepMgr.register("page-cache",function(){return PageCacheNew;
});
}else{$.pageCache=PageCache;
jsDepMgr.register("page-cache",function(){return PageCache;
});
}});
}());
(function(){var jsDepMgr=amzn.sx.utils.jsDepMgr;
jsDepMgr.when("jQuery page-cache","pageHooks",function($){var PageHooks=function(){var ph=this,advance,cur,debug,doc,iframe,options={debug:function(){},iframe:"<iframe id='phie' style='display:none' src='javascript:false;'></iframe>",pollInterval:50},isBackForward=false,pi,poll,pUtils,usePS,ieEnh,SLASH="/",HYBRID_RE=/\/[le]\/\w{10}\/?$/,SERVER_RE=/((?:http[s]?:\/\/)?[^\/]*\/)(.*)/i;
function getPushStateBaseURL(u){if(u.match(HYBRID_RE)){return u;
}var server=u.match(SERVER_RE);
if(!server||(server.length<2)){server=location.href.match(SERVER_RE);
}return server[1]+"s";
}function extractHash(s){var i=s.indexOf("#");
return(i==-1)?"":s.substring(i+1);
}function getHash(){return extractHash(location.href);
}function setHash(h){debug("set hash",h);
location.hash=h;
}function tr(h){oldHash=cur;
cur=h;
doc.trigger("ph",[oldHash,h]);
}function update(customOptions){debug("update",options,customOptions);
$.extend(options,customOptions);
}function replace(url,full){if(pi){clearTimeout(pi);
pi=undefined;
}if(full){location.href=url;
}else{location.replace(url);
}}function doClick(e){var hash=$.data(this,"phPS");
if(hash&&!e.ctrlKey&&!e.shiftKey){ph.advance(hash);
return false;
}}function ieUseClick(h){tr(h);
advance(h);
}function doClickNonPS(h){ph.isBackForward=false;
if(ieEnh){debug("iePhEnh:",h);
ieUseClick(h);
}}function linkRW(url,a,urlre,attributeName){if(url===undefined){return false;
}if(url.indexOf("javascript")!=-1){return false;
}var hash=pUtils.computeHash(url,urlre);
if(usePS){var phPS=$.data(a[0],"phPS");
$.data(a[0],"phPS",hash);
if(phPS){return false;
}a.click(doClick);
}else{if(pUtils.hasHash(url)){return false;
}if(attributeName===undefined){attributeName="href";
}a.attr(attributeName,"#"+hash);
a.click(function(){doClickNonPS(hash);
});
}return true;
}this.bind=function(f){$(document).bind("ph",f);
};
this.updateHash=function(h,r,useRS){if(cur!=h){oldHash=cur;
cur=h;
if(usePS&&useRS&&options.initPageBaseUrl&&window.history&&window.history.replaceState){var replacementUrl=getPushStateBaseURL(options.initPageBaseUrl);
if((replacementUrl.charAt(replacementUrl.length-1)!=SLASH)&&(cur.charAt(0)!=SLASH)){replacementUrl+=SLASH;
}replacementUrl+=cur;
window.history.replaceState({phPS:true,url:cur},undefined,replacementUrl);
}else{location.replace("#"+cur);
}if(iframe){try{iframe.contentWindow.document.location.replace("#"+cur);
}catch(e){if(!r){setTimeout(function(){updateHash(h,true,useRS);
},200);
}}}}};
this.init=function(customOptions){options=$.extend(options,customOptions);
pUtils=$.pageUtils;
ch=getHash();
doc=$(document);
debug=options.debug||debug;
debug("init");
var ie=$.browser.msie,dm=document.documentMode;
if(ie&&(dm===undefined||dm<8)){usePS=false;
ieEnh=options.iePageHookEnh||false;
debug("using # hash fragments for history & state");
debug("needs iframe");
iframe=$("#phie");
iframe=(iframe.length?iframe:$(options.iframe).prependTo("body"))[0];
advance=function(h,r){debug("advance",h);
try{var i=iframe.contentWindow.document;
i.open();
i.close();
i.location.hash=h;
}catch(e){if(!r){setTimeout(function(){advance(h,200);
},r);
}}};
poll=function(){var h=getHash(),hChange=(cur!=h),ih;
try{ih=extractHash(iframe.contentWindow.document.location.href);
}catch(e){ih=cur;
}if(hChange||cur!=ih){if(hChange){debug("poll",cur,h);
ieUseClick(h);
}else{debug("poll-iframe",cur,ih);
tr(ih);
setHash(ih);
}}};
advance(ch);
}else{if(options.initPageBaseUrl&&window.history&&window.history.pushState&&window.history.replaceState){try{window.history.replaceState({phPS:true,url:location.href},undefined,location.href);
usePS=true;
}catch(e){usePS=false;
}}debug((usePS?"using history.pushState":"using # hash fragments")+" for history & state");
if(usePS){var pushStateBaseURL=getPushStateBaseURL(options.initPageBaseUrl),pushStateBaseURLEndsInSlash=(pushStateBaseURL.charAt(pushStateBaseURL.length-1)===SLASH);
advance=function(toUrl){debug("advance",toUrl);
if(cur!=toUrl){var urlToPush=pushStateBaseURL;
if(!pushStateBaseURLEndsInSlash&&(toUrl.charAt(0)!=SLASH)){urlToPush+=SLASH;
}urlToPush+=toUrl;
window.history.pushState({phPS:true,url:toUrl},undefined,urlToPush);
tr(toUrl);
}};
window.onpopstate=function(e){if(e.state&&e.state.phPS){debug("onpopstate",e.state.url);
tr(e.state.url);
}};
}else{advance=function(h){debug("advance",h);
if(getHash()!=h){setHash(h);
}};
if("onhashchange" in window){window.onhashchange=function(){var h=getHash();
if(h!=cur){debug("onhashchange",h);
tr(h);
}};
}else{poll=function(){var h=getHash();
if(h!=cur){debug("poll",cur,h);
tr(h);
}};
}}}ph.advance=function(arg1,arg2){advance(arg1,arg2);
ph.isBackForward=false;
};
ph.linkRW=linkRW;
ph.update=update;
ph.replace=replace;
tr(ch);
if(!pi&&poll){debug("polling");
pi=setInterval(poll,options.pollInterval);
}};
};
var pageHooksSingleton=new PageHooks();
$.pageHooks=pageHooksSingleton;
jsDepMgr.register("ph",function(){return pageHooksSingleton;
});
});
}());
(function(){var jsDepMgr=amzn.sx.utils.jsDepMgr;
jsDepMgr.when("jQuery ph","pageAjax",function($){var PageAjax=function(){var defaultOptions={"timeout":6000,"retries":0};
var self,utils,ph,timeout,delimiter,options,reload=false,startCallback,scripttokenreg=new RegExp("<<<SCRIPT_END>>>","g"),requestLog=[];
this.newRequest=function(reqKey,url){requestLog[reqKey]={loading:[url],tryCount:1,dataInx:0,xhrs:[],callbacks:[]};
};
function requestEntry(reqKey){return requestLog[reqKey];
}this.removeRequest=function(reqKey,tryInx){if(requestEntry(reqKey)){var outstandingTry=false,rl=requestLog[reqKey];
if(rl.loading){for(var i=0;
i<rl.loading.length;
i++){if(i!=tryInx&&rl.loading[i]){outstandingTry=true;
break;
}}}if(!outstandingTry){var xhr=rl.xhrs[tryInx];
if(xhr&&!xhr.usingXhr()){$(xhr.getXhrImpl()).remove();
}delete requestLog[reqKey];
}}};
this.isRequestLoading=function(reqKey,url,tryInx){var e=requestEntry(reqKey);
return e&&e.loading[tryInx]==url;
};
this.resetRequestLoading=function(reqKey,tryInx){var e=requestEntry(reqKey);
if(e){e.loading[tryInx]=0;
}};
this.incrRequestTries=function(reqKey,url){var e=requestEntry(reqKey);
if(e){e.loading[e.tryCount++]=url;
}};
this.getRequestTries=function(reqKey){var e=requestEntry(reqKey);
return e?e.tryCount:0;
};
this.resetDataInx=function(reqKey){var e=requestEntry(reqKey);
if(e){e.dataInx=0;
}};
this.getDataInx=function(reqKey){var e=requestEntry(reqKey);
return e?e.dataInx:0;
};
this.putDataInx=function(reqKey,inx){var e=requestEntry(reqKey);
if(e){e.dataInx=inx;
}};
this.putXhr=function(reqKey,xhr,tryInx){var e=requestEntry(reqKey);
if(e){e.xhrs[tryInx]=xhr;
}};
this.getXhr=function(reqKey,tryInx){var e=requestEntry(reqKey);
if(e){return e.xhrs[tryInx];
}};
this.putCallbacks=function(reqKey,tryInx,callbackMap){var e=requestEntry(reqKey);
if(e){e.callbacks[tryInx]=callbackMap;
}};
this.getCallbacks=function(reqKey,tryInx){var e=requestEntry(reqKey);
return e?e.callbacks[tryInx]:undefined;
};
var cleanUpRequest=function(requestKey,tryInx,xhrTimeoutId){self.removeRequest(requestKey,tryInx);
clearTimeout(xhrTimeoutId);
};
var retry=function(ajaxLoad,ajaxUrl,pageUrl,ok,err,requestKey,status){if(self.getRequestTries(requestKey)>options.retries){self.warning("retry","page load",requestKey,status);
self.pageReload(pageUrl,status);
}else{self.warning("retry","ajax reload",requestKey,status);
self.resetDataInx(requestKey);
ajaxLoad(ajaxUrl,pageUrl,undefined,ok,err,requestKey,self.getRequestTries(requestKey)+1);
}};
this.pageReload=function(pageUrl,status){if(options.suppressReload){self.debug("pageReload","suppressed",pageUrl,"status=",status.reasonCode);
return;
}if(status.redirectUrl){pageUrl=status.redirectUrl;
}if(reload){self.debug("pageReload: flag=",reload);
return;
}else{if(!pageUrl){self.warning("reload","INVALID",pageUrl,status);
return;
}}reload=true;
if(status.reasonCode!=utils.reasonCode.DEBUG_NOAJAX){pageUrl+=pageUrl.indexOf("?")==-1?"?ajr=":"&ajr=";
pageUrl+=status.reasonCode;
}self.debug("pageReload","initiated",pageUrl);
if(ph&&ph.replace&&typeof ph.replace=="function"){ph.replace(pageUrl);
}};
this.load=function(ajaxUrl,pageUrl,isempty_callback,success_callback,error_callback,requestKey,tryCount){var startTime=now(),tryInx=tryCount===undefined?0:tryCount-1;
if(requestEntry(reqKey)){self.incrRequestTries(requestKey,ajaxUrl);
}else{self.newRequest(requestKey,ajaxUrl);
}$.ajax({"dataType":"html","error":function(xhr,textStatus,error){var ts=now()-startTime;
if(self.isRequestLoading(requestKey,ajaxUrl,tryInx)){self.resetRequestLoading(requestKey,tryInx);
self.error("load","err",ts,error,textStatus);
var callBackContext={timeElapsed:ts,textStatus:textStatus,exception:error,xhr:xhr},appStatus=error_callback(callBackContext,"{}",utils.genReloadStatus(utils.reasonCode.FATAL));
handlerCode=appStatus.handlerCode;
if(handlerCode==utils.handlerCode.RELOAD){pageReload(pageUrl,appStatus);
}else{if(handlerCode==utils.handlerCode.RETRY){retry(self.load,ajaxUrl,pageUrl,success_callback,error_callback,requestKey,appStatus);
}}}else{self.warning("load","stale-err",ts,error,textStatus);
}},"success":function(data,textStatus){var ts=now()-startTime;
if(self.isRequestLoading(requestKey,ajaxUrl,tryInx)){self.resetRequestLoading(requestKey,tryInx);
var callBackContext={timeElapsed:ts,textStatus:textStatus},appStatus=success_callback(callBackContext,data,utils.ajaxReadyState.DONE);
var handlerCode=appStatus.handlerCode;
if(handlerCode==utils.handlerCode.RELOAD){pageReload(pageUrl,appStatus);
}else{if(hndlrCode==utils.handlerCode.RETRY){retry(self.load,ajaxUrl,pageUrl,success_callback,error_callback,requestKey,appStatus);
}else{self.resetRequestLoading(requestKey,tryInx);
}}}else{self.warning("load","stale-ok",ts,data,textStatus);
}},"timeout":timeout,"url":ajaxUrl});
};
var StreamingXhr=function(ajaxUrl,pageUrl,useIFrame,requestKey,tryInx){var abortCode,xhr,iframe,iFrameUrl,eos;
if(useIFrame){iFrameUrl=ajaxUrl+"&asScript=1"+"&reqKey="+encodeURIComponent(requestKey)+"&try="+tryInx;
self.debug("Using IFrame. url = "+iFrameUrl);
}else{if(window.XMLHttpRequest){xhr=new XMLHttpRequest();
}else{xhr=new ActiveXObject("Microsoft.XMLHTTP");
}self.debug("Using XHR");
}this.getAbortCode=function(){return abortCode;
};
this.usingXhr=function(){return xhr?true:false;
};
this.getXhrImpl=function(){return xhr?xhr:iframe;
};
this.open=function(){if(xhr){if(startCallback){if(xhr.addEventListener){xhr.addEventListener("loadstart",startCallback,false);
}else{if(xhr.attachEvent){xhr.attachEvent("onloadstart",startCallback);
}else{startCallback();
}}}xhr.open("GET",ajaxUrl,true);
}};
this.send=function(){if(xhr){xhr.send(null);
}else{if(useIFrame){iframe=$('<iframe style="width:0px; height:0px; border: 0px"></iframe>').appendTo("body")[0];
iframe.src=iFrameUrl;
}}};
this.abort=function(code){abortCode=code;
if(xhr){xhr.abort();
}else{if(iframe){$(iframe).remove();
var callbacks=self.getCallbacks(requestKey,tryInx),callComplete=callbacks["callComplete"],success_callback=callbacks["onSuccess"],error_callback=callbacks["onError"],statusHandler=callbacks["statusHandler"],appStatus=callComplete(success_callback,error_callback,{},utils.ajaxReadyState.LOADING,abortCode?abortCode:utils.serverCode.ERROR);
statusHandler(appStatus,utils.ajaxReadyState.LOADING);
}}};
this.errorReload=function(){self.resetRequestLoading(requestKey,tryInx);
retry(null,null,pageUrl,null,null,requestKey,utils.genReloadStatus(utils.reasonCode.FATAL));
};
this.isRunning=function(){return self.isRequestLoading(requestKey,ajaxUrl,tryInx);
};
};
this.handleDataChunk=function(data,encodedReqKey,tryInx){if(data){var reqKey=decodeURIComponent(encodedReqKey),callbacks=self.getCallbacks(reqKey,tryInx),callComplete=callbacks["callComplete"],success_callback=callbacks["onSuccess"],error_callback=callbacks["onError"],statusHandler=callbacks["statusHandler"],dataName=utils.getKeys(data)[0],loadingStatus=utils.ajaxReadyState.LOADING;
if(dataName=="EOS"){loadingStatus=utils.ajaxReadyState.DONE;
}var d=data[dataName].data,v;
if(d&&(v=d.value)){d.value=v.replace(scripttokenreg,"<\/script>");
}var appStatus=callComplete(success_callback,error_callback,data,loadingStatus,utils.serverCode.OK);
statusHandler(appStatus,loadingStatus);
}};
this.loadStreaming=function(ajaxUrl,pageUrl,isempty_callback,success_callback,error_callback,requestKey,tryCount){self.debug("loadStreaming: url =",ajaxUrl,"requestKey =",requestKey);
var startTime=now(),tryInx=tryCount===undefined?0:tryCount-1;
if(requestEntry(requestKey)){self.incrRequestTries(requestKey,ajaxUrl);
}else{self.newRequest(requestKey,ajaxUrl);
}var callComplete=function(success_callback,error_callback,data,xhrReadyState,xhrStatus,streamingXhr){var timeElapsed=now()-startTime;
clearTimeout(xhrTimeoutId);
if(self.isRequestLoading(requestKey,ajaxUrl,tryInx)){var callBackContext={timeElapsed:timeElapsed,xhrStatus:xhrStatus},dataObj={};
if(xhrStatus==utils.serverCode.OK){if((typeof data)=="string"){try{dataObj=eval("("+data+")");
}catch(e){self.error("Invalid JSON response: "+data);
return error_callback(callBackContext,data,utils.genReloadStatus(utils.reasonCode.INVALID_RESP));
}}else{dataObj=data;
}if(streamingXhr&&"EOS"==utils.getKeys(dataObj)[0]){streamingXhr.eos=1;
}return success_callback(callBackContext,dataObj,xhrReadyState);
}else{var errStat=utils.genReloadStatus(utils.reasonCode.FATAL);
if(xhrStatus==utils.serverCode.TIMEOUT){errStat=utils.genReloadStatus(utils.reasonCode.TIMEOUT);
}if(xhrStatus==utils.serverCode.FORBIDDEN){errStat=utils.genReloadStatus(utils.reasonCode.ROBOT);
}return error_callback(callBackContext,{},errStat);
}}else{self.warning("load","STALE RESPONSE","state=",xhrReadyState);
self.resetDataInx(requestKey);
return{"handlerCode":utils.handlerCode.IGNORE};
}};
var statusHandler=function(appStatus,xhrReadyState){var handler=appStatus.handlerCode;
if(handler==utils.handlerCode.RELOAD){self.debug("statusHandler","reloading",appStatus);
self.resetRequestLoading(requestKey,tryInx);
self.pageReload(pageUrl,appStatus);
}else{if(handler==utils.handlerCode.RETRY){self.debug("statusHandler","retrying",appStatus);
self.resetRequestLoading(requestKey,tryInx);
retry(self.loadStreaming,ajaxUrl,pageUrl,success_callback,error_callback,requestKey,appStatus);
}else{if(handler==utils.handlerCode.ABORT){self.debug("statusHandler","aborting");
cleanUpRequest(requestKey,tryInx,xhrTimeoutId);
}else{if(handler==utils.handlerCode.OK||handler==utils.handlerCode.IGNORE){if(xhrReadyState==utils.ajaxReadyState.DONE){self.debug("statusHandler","DONE");
cleanUpRequest(requestKey,tryInx,xhrTimeoutId);
}}}}}};
if(isempty_callback&&typeof(isempty_callback)=="function"&&isempty_callback({},"{}",utils.ajaxReadyState.NONE)){var appStatus=callComplete(success_callback,error_callback,"{}",utils.ajaxReadyState.DONE,utils.serverCode.OK);
statusHandler(appStatus,utils.ajaxReadyState.DONE);
return;
}var streamingXhr=new StreamingXhr(ajaxUrl,pageUrl,options.useIFrameForAJAX,requestKey,tryInx);
self.putXhr(requestKey,streamingXhr,tryInx);
self.putCallbacks(requestKey,tryInx,{"callComplete":callComplete,"statusHandler":statusHandler,"onSuccess":success_callback,"onError":error_callback});
if(streamingXhr.usingXhr()){var xhr=streamingXhr.getXhrImpl();
xhr.onreadystatechange=function(){if(xhr.readyState==utils.ajaxReadyState.LOADING||xhr.readyState==utils.ajaxReadyState.DONE){var appStatus={"handlerCode":utils.handlerCode.OK},responseText,status;
try{status=xhr.status;
responseText=xhr.responseText;
}catch(e){if(xhr.readyState==utils.ajaxReadyState.LOADING){return;
}else{status=utils.serverCode.ERROR;
}}if(status==utils.serverCode.OK){var chunks=chunkNewData(responseText,requestKey);
if(chunks.length>0){for(var i=0;
i<chunks.length;
i++){var loadingStatus=utils.ajaxReadyState.LOADING;
if(xhr.readyState==utils.ajaxReadyState.DONE&&i==chunks.length-1){loadingStatus=utils.ajaxReadyState.DONE;
}appStatus=callComplete(success_callback,error_callback,chunks[i],loadingStatus,status,streamingXhr);
if(appStatus.handlerCode===utils.handlerCode.IGNORE){continue;
}else{if(appStatus.handlerCode!=utils.handlerCode.OK){break;
}}}}else{if(xhr.readyState==utils.ajaxReadyState.DONE){appStatus=callComplete(success_callback,error_callback,"{}",utils.ajaxReadyState.DONE,status,streamingXhr);
}}}else{var abortCode=streamingXhr.getAbortCode();
appStatus=callComplete(success_callback,error_callback,responseText,xhr.readyState,abortCode||status);
}statusHandler(appStatus,xhr.readyState);
}};
}streamingXhr.open();
streamingXhr.send();
var xhrTimeoutId=setTimeout(function(){if(streamingXhr){streamingXhr.abort(utils.serverCode.TIMEOUT);
}},timeout);
return streamingXhr;
};
var chunkNewData=function(responseText,requestKey){var startInx=self.getDataInx(requestKey),lastDelimInx=responseText.lastIndexOf(delimiter),chunks=[];
if(lastDelimInx>startInx){chunks=responseText.substr(startInx,lastDelimInx-startInx);
self.putDataInx(requestKey,lastDelimInx+delimiter.length);
}if(chunks.length>0){chunks=chunks.split(delimiter);
}return chunks;
};
this.init=function(customOptions){self=$.pageAjax;
utils=$.pageUtils;
ph=$.pageHooks;
options=$.extend(defaultOptions,customOptions);
timeout=options.pageTimeout;
delimiter=options.streamDelimiter.replace(/-/g,"");
};
this.registerCallback=function(callback){startCallback=callback;
};
this.update=function(customOptions){$.extend(options,customOptions);
};
this.printStats=function(){self.debug("Request Log:","size:",utils.getSize(requestLog));
};
};
var pageAjaxSingleton=new PageAjax();
$.pageAjax=pageAjaxSingleton;
jsDepMgr.register("page-ajax",function(){return pageAjaxSingleton;
});
});
}());
(function(){var jsDepMgr=amzn.sx.utils.jsDepMgr;
jsDepMgr.when("jQuery","scrollController",function($){var defaults={callback:function(){},px:50,ms:200,pageClass:".page",emptyPageClass:".empty-page"},$window=$(window),$body=$("body"),t="top",b="bottom",scrollCompensation=0,instances=[],viewportY=$window.scrollTop(),viewportHeight=$window.height(),velocityY=0,lastVelocityY=0,velocityHistroy=[],acceleration=0,lastScrollDirection=null,lastCallTimestamp,dbg={isDebug:false,doc:null,viewport:null,detectWindow:null,scale:1},now=function(){return new Date().getTime();
},isPageInWindow=function(a,b,x,y){return((a<=x&&x<=b)||(a<=y&&y<=b))||(x<=a&&y>=b);
},avg=function(arr){var sum=0,i;
for(i=0;
i<arr.length;
i+=1){sum+=arr[i];
}return sum/arr.length;
},onScroll=function(e){var newTime=now(),dTime=newTime-lastCallTimestamp,newViewportY=$window.scrollTop(),dViewportY=(newViewportY-viewportY)-scrollCompensation,bodyHeight=$body.height();
scrollCompensation=0;
lastCallTimestamp=newTime;
viewportY=newViewportY;
viewportHeight=$window.height();
velocityY=Math.round((dViewportY/dTime)*100)/100;
if(velocityY!==0){velocityHistroy.push(velocityY);
}if(velocityHistroy.length>3){velocityHistroy.splice(0,velocityHistroy.length-3);
}acceleration=Math.round(velocityY-lastVelocityY);
lastVelocityY=velocityY;
lastScrollDirection=lastVelocityY>0?"down":lastVelocityY<0?"up":lastScrollDirection;
velocityY=avg(velocityHistroy);
if(dbg.isDebug){dbg.scale=$(document).height()/(viewportHeight-40);
dbg.doc.height(Math.round($(document).height()/dbg.scale));
dbg.viewport.css("top",(Math.round(viewportY/dbg.scale)+20)+"px").height(Math.round(viewportHeight/dbg.scale));
}$.each(instances,function(index,configHash){if(configHash.isTriggered){return;
}var settings=configHash.settings,vDistance=Math.round(velocityY*settings.ms),viewBufferTop=Math.max(0,viewportY-Math.max(settings.px,vDistance<0?-1*vDistance:0)),viewBufferBottom=viewportY+viewportHeight+Math.max(settings.px,vDistance>0?vDistance:0),triggeredPage;
if(dbg.isDebug){dbg.detectWindow.css("top",(Math.round(viewBufferTop/dbg.scale)+20)+"px").height(Math.round((viewBufferBottom-viewBufferTop)/dbg.scale));
}$.each(configHash.pages,function(index,$page){var te=$page.offset().top,be=te+$page.height();
if(isPageInWindow(viewBufferTop,viewBufferBottom,te,be)){if(!triggeredPage||(velocityY>0&&te>triggeredPage.be)||(velocityY<0&&be>triggeredPage.te)){triggeredPage={page:$page,te:te,be:be};
}}});
if(triggeredPage){triggeredPage.page.removeClass(settings.emptyPageClass);
configHash.isTriggered=true;
settings.callback.call(instances[index],{pageToLoad:triggeredPage.page,scrollDirection:lastScrollDirection});
}});
},resetElement=function(configHash){var pages=[];
configHash.element.find(configHash.settings.emptyPageClass).each(function(indx,pageElem){pages.push($(pageElem));
});
configHash.pages=pages;
configHash.isTriggered=false;
},findInstanceIndex=function(elem){var i;
for(i=0;
i<instances.length;
i+=1){if(instances[i].elem===elem){return i;
}}return null;
};
lastCallTimestamp=now();
$(window).scroll(onScroll).bind("touchmove",onScroll);
var scrollController=function(args){var methods={bind:function(pluginArgs){var settings=$.extend({},defaults,pluginArgs);
this.each(function(indx,elem){var configHash={element:$(elem),elem:elem,settings:settings,pages:[],isTriggered:false},i=findInstanceIndex(elem);
if(i!==null){instances[i]=configHash;
}else{instances.push(configHash);
}resetElement(configHash);
});
},unbind:function(){var elem=this.get(0),i=findInstanceIndex(elem);
if(i!==null){instances.splice(i,1);
}},reset:function(){var elem=this.get(0),i=findInstanceIndex(elem);
if(i!==null){resetElement(instances[i]);
onScroll();
}},debug:function(){dbg.isDebug=!dbg.isDebug;
if(dbg.isDebug){var body=$("body");
body.append('<div id="a-dbg-scroll-doc" style="border: 1px solid gray; background: rgba(0, 0, 0, 0.3); width: 40px; left: 25px; top: 20px; position: fixed; z-index: 400;"></div>');
body.append('<div id="a-dbg-scroll-detectWindow" style="border: 1px solid blue; background: rgba(0, 0, 255, 0.3); width: 70px; left: 10px; position: fixed; z-index: 400;"></div>');
body.append('<div id="a-dbg-scroll-viewport" style="border: 1px solid green; background: rgba(0, 255, 0, 0.3); width: 60px; left: 15px; position: fixed; z-index: 400;"></div>');
dbg.doc=$("#a-dbg-scroll-doc");
dbg.viewport=$("#a-dbg-scroll-viewport");
dbg.detectWindow=$("#a-dbg-scroll-detectWindow");
}else{dbg.doc.remove();
dbg.viewport.remove();
dbg.detectWindow.remove();
}}};
if(methods[args]){return methods[args].apply(this,Array.prototype.slice.call(arguments,1));
}if(typeof args==="object"||!args){return methods.bind.apply(this,arguments);
}return this;
};
$.fn.amznScrollController=scrollController;
jsDepMgr.when("page-ajax-scroll-controller",scrollController);
});
}());
(function(){var jsDepMgr=amzn.sx.utils.jsDepMgr;
jsDepMgr.when("jQuery","pageUE",function($){var PageUE=function(){var ueActivityAllowed=false;
var ueDataEnabled=false;
var rid;
var origUet;
var scopeName;
var savedScopeInfo={};
var ueUrlPrefix="/gp/search/uedata/";
var sessionContext;
var firstMarkerScopedTimestamper=function(marker,scope,scopeOptions,timeOverride){var scopeTimes=ues("t",scope)||ues("t",scope,{});
if(scopeTimes[marker]===undefined){origUet(marker,scope,scopeOptions,timeOverride);
if(sessionContext.debugEnabled){scopeTimes=ues("t",scope);
}}};
var isUEDataEnabled=function(){return ueDataEnabled;
};
var setUEActivity=function(ueActivityFlag){ueActivityAllowed=ueActivityFlag;
};
var isUEActivityAllowed=function(){return isUEDataEnabled()&&ueActivityAllowed;
};
var updateRid=function(newRid){if(!isUEActivityAllowed()){return;
}ues("id",scopeName,newRid);
ue.id=ue.rid=newRid;
};
var updateUrl=function(sid){if(!isUEActivityAllowed()){return;
}ue.url=ueUrlPrefix+sid;
};
var prepareForNewPageLoad=function(suppressUeVarsUpdate){if(!isUEActivityAllowed()){return;
}updateT0(scopeName,suppressUeVarsUpdate);
};
var manageLoad=function(){if(!isUEActivityAllowed()){return;
}var scopeTimes=ues("t",scopeName)||ues("t",scopeName,{});
var scopeRid=ues("id",scopeName);
var scopeT0=ues("t0",scopeName);
if(areAllDefined([scopeT0,scopeTimes.af,scopeRid])){uex("ld",scopeName);
}};
var areAllDefined=function(values){for(var i=0;
i<values.length;
i++){if(values[i]===undefined){return false;
}}return true;
};
var init=function(context){ueDataEnabled=context.ueDataEnabled;
sessionContext=context;
if(ueDataEnabled){origUet=window.uet;
window.uet=firstMarkerScopedTimestamper;
}};
var update=function(context){sessionContext=context;
return;
};
var isAtfRecorded=function(){if(!isUEActivityAllowed()){return false;
}return window.ue&&window.ue.sc&&window.ue.sc[scopeName]&&window.ue.sc[scopeName].t&&window.ue.sc[scopeName].t.af!==undefined;
};
var updateT0=function(scopeName,suppressUeVarsUpdate){if(!isUEActivityAllowed()){return;
}var newT0=now();
if(!suppressUeVarsUpdate){ue.t0=newT0;
}ues("t0",scopeName,newT0);
};
var getScope=function(){return scopeName;
};
var setScope=function(newScopeName){scopeName=newScopeName;
};
var setClick=function(timeOverride){if(isUEActivityAllowed()){if(timeOverride){uet("tc",scopeName,{},timeOverride);
ues("ctb",undefined,"1");
ues("ctb",scopeName,"1");
}else{uet("tc",scopeName);
}}};
return{setUEActivity:setUEActivity,prepareForNewPageLoad:prepareForNewPageLoad,updateRid:updateRid,updateUrl:updateUrl,manageLoad:manageLoad,init:init,update:update,atfRecorded:isAtfRecorded,getScope:getScope,setScope:setScope,setClick:setClick};
};
var pageUeSingleton=new PageUE();
$.pageUE=pageUeSingleton;
jsDepMgr.register("pageUE",function(){return pageUeSingleton;
});
});
}());
